// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1146 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1146() {}
    static final FunctionDescriptor gdk_toplevel_size_set_min_size$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gdk_toplevel_size_set_min_size$MH = RuntimeHelper.downcallHandle(
        "gdk_toplevel_size_set_min_size",
        constants$1146.gdk_toplevel_size_set_min_size$FUNC
    );
    static final FunctionDescriptor gdk_toplevel_size_set_shadow_width$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gdk_toplevel_size_set_shadow_width$MH = RuntimeHelper.downcallHandle(
        "gdk_toplevel_size_set_shadow_width",
        constants$1146.gdk_toplevel_size_set_shadow_width$FUNC
    );
    static final FunctionDescriptor gdk_vulkan_error_quark$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle gdk_vulkan_error_quark$MH = RuntimeHelper.downcallHandle(
        "gdk_vulkan_error_quark",
        constants$1146.gdk_vulkan_error_quark$FUNC
    );
    static final FunctionDescriptor gdk_vulkan_context_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gdk_vulkan_context_get_type$MH = RuntimeHelper.downcallHandle(
        "gdk_vulkan_context_get_type",
        constants$1146.gdk_vulkan_context_get_type$FUNC
    );
    static final FunctionDescriptor _mm_sfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_sfence$MH = RuntimeHelper.downcallHandle(
        "_mm_sfence",
        constants$1146._mm_sfence$FUNC
    );
    static final FunctionDescriptor _mm_getcsr$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle _mm_getcsr$MH = RuntimeHelper.downcallHandle(
        "_mm_getcsr",
        constants$1146._mm_getcsr$FUNC
    );
}


