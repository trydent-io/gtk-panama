// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$338 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$338() {}
    static final FunctionDescriptor g_node_pop_allocator$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_node_pop_allocator$MH = RuntimeHelper.downcallHandle(
        "g_node_pop_allocator",
        constants$338.g_node_pop_allocator$FUNC
    );
    static final FunctionDescriptor GCacheNewFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GCacheNewFunc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCacheNewFunc_UP$MH = RuntimeHelper.upcallHandle(GCacheNewFunc.class, "apply", constants$338.GCacheNewFunc_UP$FUNC);
    static final FunctionDescriptor GCacheNewFunc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCacheNewFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$338.GCacheNewFunc_DOWN$FUNC
    );
    static final FunctionDescriptor GCacheDupFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GCacheDupFunc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCacheDupFunc_UP$MH = RuntimeHelper.upcallHandle(GCacheDupFunc.class, "apply", constants$338.GCacheDupFunc_UP$FUNC);
    static final FunctionDescriptor GCacheDupFunc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCacheDupFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$338.GCacheDupFunc_DOWN$FUNC
    );
    static final FunctionDescriptor GCacheDestroyFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GCacheDestroyFunc_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCacheDestroyFunc_UP$MH = RuntimeHelper.upcallHandle(GCacheDestroyFunc.class, "apply", constants$338.GCacheDestroyFunc_UP$FUNC);
}


