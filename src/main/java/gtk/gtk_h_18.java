// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class gtk_h_18 extends gtk_h_17 {

    public static MethodHandle gtk_print_settings_get_double_with_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_print_settings_get_double_with_default$MH,"gtk_print_settings_get_double_with_default");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_double_with_default(GtkPrintSettings* settings, char* key, double def);
     * }
     */
    public static double gtk_print_settings_get_double_with_default(MemorySegment settings, MemorySegment key, double def) {
        var mh$ = gtk_print_settings_get_double_with_default$MH();
        try {
            return (double)mh$.invokeExact(settings, key, def);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_print_settings_set_double$MH,"gtk_print_settings_set_double");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_double(GtkPrintSettings* settings, char* key, double value);
     * }
     */
    public static void gtk_print_settings_set_double(MemorySegment settings, MemorySegment key, double value) {
        var mh$ = gtk_print_settings_set_double$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_print_settings_get_length$MH,"gtk_print_settings_get_length");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_length(GtkPrintSettings* settings, char* key, GtkUnit unit);
     * }
     */
    public static double gtk_print_settings_get_length(MemorySegment settings, MemorySegment key, int unit) {
        var mh$ = gtk_print_settings_get_length$MH();
        try {
            return (double)mh$.invokeExact(settings, key, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_print_settings_set_length$MH,"gtk_print_settings_set_length");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_length(GtkPrintSettings* settings, char* key, double value, GtkUnit unit);
     * }
     */
    public static void gtk_print_settings_set_length(MemorySegment settings, MemorySegment key, double value, int unit) {
        var mh$ = gtk_print_settings_set_length$MH();
        try {
            mh$.invokeExact(settings, key, value, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_print_settings_get_int$MH,"gtk_print_settings_get_int");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_int(GtkPrintSettings* settings, char* key);
     * }
     */
    public static int gtk_print_settings_get_int(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get_int$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_int_with_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_print_settings_get_int_with_default$MH,"gtk_print_settings_get_int_with_default");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_int_with_default(GtkPrintSettings* settings, char* key, int def);
     * }
     */
    public static int gtk_print_settings_get_int_with_default(MemorySegment settings, MemorySegment key, int def) {
        var mh$ = gtk_print_settings_get_int_with_default$MH();
        try {
            return (int)mh$.invokeExact(settings, key, def);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_print_settings_set_int$MH,"gtk_print_settings_set_int");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_int(GtkPrintSettings* settings, char* key, int value);
     * }
     */
    public static void gtk_print_settings_set_int(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = gtk_print_settings_set_int$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_printer$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_print_settings_get_printer$MH,"gtk_print_settings_get_printer");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_printer(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_printer(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_printer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_printer$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_print_settings_set_printer$MH,"gtk_print_settings_set_printer");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_printer(GtkPrintSettings* settings, char* printer);
     * }
     */
    public static void gtk_print_settings_set_printer(MemorySegment settings, MemorySegment printer) {
        var mh$ = gtk_print_settings_set_printer$MH();
        try {
            mh$.invokeExact(settings, printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_print_settings_get_orientation$MH,"gtk_print_settings_get_orientation");
    }
    /**
     * {@snippet :
     * GtkPageOrientation gtk_print_settings_get_orientation(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_orientation(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_print_settings_set_orientation$MH,"gtk_print_settings_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_orientation(GtkPrintSettings* settings, GtkPageOrientation orientation);
     * }
     */
    public static void gtk_print_settings_set_orientation(MemorySegment settings, int orientation) {
        var mh$ = gtk_print_settings_set_orientation$MH();
        try {
            mh$.invokeExact(settings, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_print_settings_get_paper_size$MH,"gtk_print_settings_get_paper_size");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_print_settings_get_paper_size(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_paper_size(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_paper_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_print_settings_set_paper_size$MH,"gtk_print_settings_set_paper_size");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_paper_size(GtkPrintSettings* settings, GtkPaperSize* paper_size);
     * }
     */
    public static void gtk_print_settings_set_paper_size(MemorySegment settings, MemorySegment paper_size) {
        var mh$ = gtk_print_settings_set_paper_size$MH();
        try {
            mh$.invokeExact(settings, paper_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_paper_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_print_settings_get_paper_width$MH,"gtk_print_settings_get_paper_width");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_paper_width(GtkPrintSettings* settings, GtkUnit unit);
     * }
     */
    public static double gtk_print_settings_get_paper_width(MemorySegment settings, int unit) {
        var mh$ = gtk_print_settings_get_paper_width$MH();
        try {
            return (double)mh$.invokeExact(settings, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_paper_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_print_settings_set_paper_width$MH,"gtk_print_settings_set_paper_width");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_paper_width(GtkPrintSettings* settings, double width, GtkUnit unit);
     * }
     */
    public static void gtk_print_settings_set_paper_width(MemorySegment settings, double width, int unit) {
        var mh$ = gtk_print_settings_set_paper_width$MH();
        try {
            mh$.invokeExact(settings, width, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_paper_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_print_settings_get_paper_height$MH,"gtk_print_settings_get_paper_height");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_paper_height(GtkPrintSettings* settings, GtkUnit unit);
     * }
     */
    public static double gtk_print_settings_get_paper_height(MemorySegment settings, int unit) {
        var mh$ = gtk_print_settings_get_paper_height$MH();
        try {
            return (double)mh$.invokeExact(settings, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_paper_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_print_settings_set_paper_height$MH,"gtk_print_settings_set_paper_height");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_paper_height(GtkPrintSettings* settings, double height, GtkUnit unit);
     * }
     */
    public static void gtk_print_settings_set_paper_height(MemorySegment settings, double height, int unit) {
        var mh$ = gtk_print_settings_set_paper_height$MH();
        try {
            mh$.invokeExact(settings, height, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_use_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_print_settings_get_use_color$MH,"gtk_print_settings_get_use_color");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_get_use_color(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_use_color(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_use_color$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_use_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_print_settings_set_use_color$MH,"gtk_print_settings_set_use_color");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_use_color(GtkPrintSettings* settings, gboolean use_color);
     * }
     */
    public static void gtk_print_settings_set_use_color(MemorySegment settings, int use_color) {
        var mh$ = gtk_print_settings_set_use_color$MH();
        try {
            mh$.invokeExact(settings, use_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_print_settings_get_collate$MH,"gtk_print_settings_get_collate");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_get_collate(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_collate(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_collate$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_print_settings_set_collate$MH,"gtk_print_settings_set_collate");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_collate(GtkPrintSettings* settings, gboolean collate);
     * }
     */
    public static void gtk_print_settings_set_collate(MemorySegment settings, int collate) {
        var mh$ = gtk_print_settings_set_collate$MH();
        try {
            mh$.invokeExact(settings, collate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_print_settings_get_reverse$MH,"gtk_print_settings_get_reverse");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_get_reverse(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_reverse(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_reverse$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_print_settings_set_reverse$MH,"gtk_print_settings_set_reverse");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_reverse(GtkPrintSettings* settings, gboolean reverse);
     * }
     */
    public static void gtk_print_settings_set_reverse(MemorySegment settings, int reverse) {
        var mh$ = gtk_print_settings_set_reverse$MH();
        try {
            mh$.invokeExact(settings, reverse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_duplex$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_print_settings_get_duplex$MH,"gtk_print_settings_get_duplex");
    }
    /**
     * {@snippet :
     * GtkPrintDuplex gtk_print_settings_get_duplex(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_duplex(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_duplex$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_duplex$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_print_settings_set_duplex$MH,"gtk_print_settings_set_duplex");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_duplex(GtkPrintSettings* settings, GtkPrintDuplex duplex);
     * }
     */
    public static void gtk_print_settings_set_duplex(MemorySegment settings, int duplex) {
        var mh$ = gtk_print_settings_set_duplex$MH();
        try {
            mh$.invokeExact(settings, duplex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_quality$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_print_settings_get_quality$MH,"gtk_print_settings_get_quality");
    }
    /**
     * {@snippet :
     * GtkPrintQuality gtk_print_settings_get_quality(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_quality(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_quality$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_quality$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_print_settings_set_quality$MH,"gtk_print_settings_set_quality");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_quality(GtkPrintSettings* settings, GtkPrintQuality quality);
     * }
     */
    public static void gtk_print_settings_set_quality(MemorySegment settings, int quality) {
        var mh$ = gtk_print_settings_set_quality$MH();
        try {
            mh$.invokeExact(settings, quality);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_n_copies$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_print_settings_get_n_copies$MH,"gtk_print_settings_get_n_copies");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_n_copies(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_n_copies(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_n_copies$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_n_copies$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_print_settings_set_n_copies$MH,"gtk_print_settings_set_n_copies");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_n_copies(GtkPrintSettings* settings, int num_copies);
     * }
     */
    public static void gtk_print_settings_set_n_copies(MemorySegment settings, int num_copies) {
        var mh$ = gtk_print_settings_set_n_copies$MH();
        try {
            mh$.invokeExact(settings, num_copies);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_number_up$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_print_settings_get_number_up$MH,"gtk_print_settings_get_number_up");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_number_up(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_number_up(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_number_up$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_number_up$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_print_settings_set_number_up$MH,"gtk_print_settings_set_number_up");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_number_up(GtkPrintSettings* settings, int number_up);
     * }
     */
    public static void gtk_print_settings_set_number_up(MemorySegment settings, int number_up) {
        var mh$ = gtk_print_settings_set_number_up$MH();
        try {
            mh$.invokeExact(settings, number_up);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_number_up_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_print_settings_get_number_up_layout$MH,"gtk_print_settings_get_number_up_layout");
    }
    /**
     * {@snippet :
     * GtkNumberUpLayout gtk_print_settings_get_number_up_layout(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_number_up_layout(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_number_up_layout$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_number_up_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_print_settings_set_number_up_layout$MH,"gtk_print_settings_set_number_up_layout");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_number_up_layout(GtkPrintSettings* settings, GtkNumberUpLayout number_up_layout);
     * }
     */
    public static void gtk_print_settings_set_number_up_layout(MemorySegment settings, int number_up_layout) {
        var mh$ = gtk_print_settings_set_number_up_layout$MH();
        try {
            mh$.invokeExact(settings, number_up_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_print_settings_get_resolution$MH,"gtk_print_settings_get_resolution");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_resolution(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_resolution(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_resolution$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_print_settings_set_resolution$MH,"gtk_print_settings_set_resolution");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_resolution(GtkPrintSettings* settings, int resolution);
     * }
     */
    public static void gtk_print_settings_set_resolution(MemorySegment settings, int resolution) {
        var mh$ = gtk_print_settings_set_resolution$MH();
        try {
            mh$.invokeExact(settings, resolution);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_resolution_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_print_settings_get_resolution_x$MH,"gtk_print_settings_get_resolution_x");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_resolution_x(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_resolution_x(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_resolution_x$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_resolution_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_print_settings_get_resolution_y$MH,"gtk_print_settings_get_resolution_y");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_resolution_y(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_resolution_y(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_resolution_y$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_resolution_xy$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_print_settings_set_resolution_xy$MH,"gtk_print_settings_set_resolution_xy");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_resolution_xy(GtkPrintSettings* settings, int resolution_x, int resolution_y);
     * }
     */
    public static void gtk_print_settings_set_resolution_xy(MemorySegment settings, int resolution_x, int resolution_y) {
        var mh$ = gtk_print_settings_set_resolution_xy$MH();
        try {
            mh$.invokeExact(settings, resolution_x, resolution_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_printer_lpi$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_print_settings_get_printer_lpi$MH,"gtk_print_settings_get_printer_lpi");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_printer_lpi(GtkPrintSettings* settings);
     * }
     */
    public static double gtk_print_settings_get_printer_lpi(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_printer_lpi$MH();
        try {
            return (double)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_printer_lpi$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_print_settings_set_printer_lpi$MH,"gtk_print_settings_set_printer_lpi");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_printer_lpi(GtkPrintSettings* settings, double lpi);
     * }
     */
    public static void gtk_print_settings_set_printer_lpi(MemorySegment settings, double lpi) {
        var mh$ = gtk_print_settings_set_printer_lpi$MH();
        try {
            mh$.invokeExact(settings, lpi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_print_settings_get_scale$MH,"gtk_print_settings_get_scale");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_scale(GtkPrintSettings* settings);
     * }
     */
    public static double gtk_print_settings_get_scale(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_scale$MH();
        try {
            return (double)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_print_settings_set_scale$MH,"gtk_print_settings_set_scale");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_scale(GtkPrintSettings* settings, double scale);
     * }
     */
    public static void gtk_print_settings_set_scale(MemorySegment settings, double scale) {
        var mh$ = gtk_print_settings_set_scale$MH();
        try {
            mh$.invokeExact(settings, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_print_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_print_settings_get_print_pages$MH,"gtk_print_settings_get_print_pages");
    }
    /**
     * {@snippet :
     * GtkPrintPages gtk_print_settings_get_print_pages(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_print_pages(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_print_pages$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_print_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_print_settings_set_print_pages$MH,"gtk_print_settings_set_print_pages");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_print_pages(GtkPrintSettings* settings, GtkPrintPages pages);
     * }
     */
    public static void gtk_print_settings_set_print_pages(MemorySegment settings, int pages) {
        var mh$ = gtk_print_settings_set_print_pages$MH();
        try {
            mh$.invokeExact(settings, pages);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_page_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_print_settings_get_page_ranges$MH,"gtk_print_settings_get_page_ranges");
    }
    /**
     * {@snippet :
     * GtkPageRange* gtk_print_settings_get_page_ranges(GtkPrintSettings* settings, int* num_ranges);
     * }
     */
    public static MemorySegment gtk_print_settings_get_page_ranges(MemorySegment settings, MemorySegment num_ranges) {
        var mh$ = gtk_print_settings_get_page_ranges$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, num_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_page_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_print_settings_set_page_ranges$MH,"gtk_print_settings_set_page_ranges");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_page_ranges(GtkPrintSettings* settings, GtkPageRange* page_ranges, int num_ranges);
     * }
     */
    public static void gtk_print_settings_set_page_ranges(MemorySegment settings, MemorySegment page_ranges, int num_ranges) {
        var mh$ = gtk_print_settings_set_page_ranges$MH();
        try {
            mh$.invokeExact(settings, page_ranges, num_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_page_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_print_settings_get_page_set$MH,"gtk_print_settings_get_page_set");
    }
    /**
     * {@snippet :
     * GtkPageSet gtk_print_settings_get_page_set(GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_page_set(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_page_set$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_page_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_print_settings_set_page_set$MH,"gtk_print_settings_set_page_set");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_page_set(GtkPrintSettings* settings, GtkPageSet page_set);
     * }
     */
    public static void gtk_print_settings_set_page_set(MemorySegment settings, int page_set) {
        var mh$ = gtk_print_settings_set_page_set$MH();
        try {
            mh$.invokeExact(settings, page_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_default_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_print_settings_get_default_source$MH,"gtk_print_settings_get_default_source");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_default_source(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_default_source(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_default_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_default_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_print_settings_set_default_source$MH,"gtk_print_settings_set_default_source");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_default_source(GtkPrintSettings* settings, char* default_source);
     * }
     */
    public static void gtk_print_settings_set_default_source(MemorySegment settings, MemorySegment default_source) {
        var mh$ = gtk_print_settings_set_default_source$MH();
        try {
            mh$.invokeExact(settings, default_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_media_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_print_settings_get_media_type$MH,"gtk_print_settings_get_media_type");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_media_type(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_media_type(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_media_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_media_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_print_settings_set_media_type$MH,"gtk_print_settings_set_media_type");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_media_type(GtkPrintSettings* settings, char* media_type);
     * }
     */
    public static void gtk_print_settings_set_media_type(MemorySegment settings, MemorySegment media_type) {
        var mh$ = gtk_print_settings_set_media_type$MH();
        try {
            mh$.invokeExact(settings, media_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_dither$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_print_settings_get_dither$MH,"gtk_print_settings_get_dither");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_dither(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_dither(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_dither$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_dither$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_print_settings_set_dither$MH,"gtk_print_settings_set_dither");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_dither(GtkPrintSettings* settings, char* dither);
     * }
     */
    public static void gtk_print_settings_set_dither(MemorySegment settings, MemorySegment dither) {
        var mh$ = gtk_print_settings_set_dither$MH();
        try {
            mh$.invokeExact(settings, dither);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_finishings$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_print_settings_get_finishings$MH,"gtk_print_settings_get_finishings");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_finishings(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_finishings(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_finishings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_finishings$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_print_settings_set_finishings$MH,"gtk_print_settings_set_finishings");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_finishings(GtkPrintSettings* settings, char* finishings);
     * }
     */
    public static void gtk_print_settings_set_finishings(MemorySegment settings, MemorySegment finishings) {
        var mh$ = gtk_print_settings_set_finishings$MH();
        try {
            mh$.invokeExact(settings, finishings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_output_bin$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.gtk_print_settings_get_output_bin$MH,"gtk_print_settings_get_output_bin");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_output_bin(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_output_bin(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_output_bin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_output_bin$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.gtk_print_settings_set_output_bin$MH,"gtk_print_settings_set_output_bin");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_output_bin(GtkPrintSettings* settings, char* output_bin);
     * }
     */
    public static void gtk_print_settings_set_output_bin(MemorySegment settings, MemorySegment output_bin) {
        var mh$ = gtk_print_settings_set_output_bin$MH();
        try {
            mh$.invokeExact(settings, output_bin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.gtk_print_settings_to_gvariant$MH,"gtk_print_settings_to_gvariant");
    }
    /**
     * {@snippet :
     * GVariant* gtk_print_settings_to_gvariant(GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_to_gvariant(MemorySegment settings) {
        var mh$ = gtk_print_settings_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.gtk_print_settings_new_from_gvariant$MH,"gtk_print_settings_new_from_gvariant");
    }
    /**
     * {@snippet :
     * GtkPrintSettings* gtk_print_settings_new_from_gvariant(GVariant* variant);
     * }
     */
    public static MemorySegment gtk_print_settings_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_print_settings_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.gtk_print_operation_preview_get_type$MH,"gtk_print_operation_preview_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_operation_preview_get_type();
     * }
     */
    public static long gtk_print_operation_preview_get_type() {
        var mh$ = gtk_print_operation_preview_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_render_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.gtk_print_operation_preview_render_page$MH,"gtk_print_operation_preview_render_page");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_preview_render_page(GtkPrintOperationPreview* preview, int page_nr);
     * }
     */
    public static void gtk_print_operation_preview_render_page(MemorySegment preview, int page_nr) {
        var mh$ = gtk_print_operation_preview_render_page$MH();
        try {
            mh$.invokeExact(preview, page_nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_end_preview$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_print_operation_preview_end_preview$MH,"gtk_print_operation_preview_end_preview");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_preview_end_preview(GtkPrintOperationPreview* preview);
     * }
     */
    public static void gtk_print_operation_preview_end_preview(MemorySegment preview) {
        var mh$ = gtk_print_operation_preview_end_preview$MH();
        try {
            mh$.invokeExact(preview);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_print_operation_preview_is_selected$MH,"gtk_print_operation_preview_is_selected");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_operation_preview_is_selected(GtkPrintOperationPreview* preview, int page_nr);
     * }
     */
    public static int gtk_print_operation_preview_is_selected(MemorySegment preview, int page_nr) {
        var mh$ = gtk_print_operation_preview_is_selected$MH();
        try {
            return (int)mh$.invokeExact(preview, page_nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_INITIAL = 0;
     * }
     */
    public static int GTK_PRINT_STATUS_INITIAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_PREPARING = 1;
     * }
     */
    public static int GTK_PRINT_STATUS_PREPARING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_GENERATING_DATA = 2;
     * }
     */
    public static int GTK_PRINT_STATUS_GENERATING_DATA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_SENDING_DATA = 3;
     * }
     */
    public static int GTK_PRINT_STATUS_SENDING_DATA() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_PENDING = 4;
     * }
     */
    public static int GTK_PRINT_STATUS_PENDING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_PENDING_ISSUE = 5;
     * }
     */
    public static int GTK_PRINT_STATUS_PENDING_ISSUE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_PRINTING = 6;
     * }
     */
    public static int GTK_PRINT_STATUS_PRINTING() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_FINISHED = 7;
     * }
     */
    public static int GTK_PRINT_STATUS_FINISHED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_STATUS_FINISHED_ABORTED = 8;
     * }
     */
    public static int GTK_PRINT_STATUS_FINISHED_ABORTED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_RESULT_ERROR = 0;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_RESULT_APPLY = 1;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_APPLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_RESULT_CANCEL = 2;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_CANCEL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_RESULT_IN_PROGRESS = 3;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_IN_PROGRESS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG = 0;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_ACTION_PRINT = 1;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_PRINT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_ACTION_PREVIEW = 2;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_PREVIEW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_OPERATION_ACTION_EXPORT = 3;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_EXPORT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_ERROR_GENERAL = 0;
     * }
     */
    public static int GTK_PRINT_ERROR_GENERAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_ERROR_INTERNAL_ERROR = 1;
     * }
     */
    public static int GTK_PRINT_ERROR_INTERNAL_ERROR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_ERROR_NOMEM = 2;
     * }
     */
    public static int GTK_PRINT_ERROR_NOMEM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_ERROR_INVALID_FILE = 3;
     * }
     */
    public static int GTK_PRINT_ERROR_INVALID_FILE() {
        return (int)3L;
    }
    public static MethodHandle gtk_print_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_print_error_quark$MH,"gtk_print_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_print_error_quark();
     * }
     */
    public static int gtk_print_error_quark() {
        var mh$ = gtk_print_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_print_operation_get_type$MH,"gtk_print_operation_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_operation_get_type();
     * }
     */
    public static long gtk_print_operation_get_type() {
        var mh$ = gtk_print_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_print_operation_new$MH,"gtk_print_operation_new");
    }
    /**
     * {@snippet :
     * GtkPrintOperation* gtk_print_operation_new();
     * }
     */
    public static MemorySegment gtk_print_operation_new() {
        var mh$ = gtk_print_operation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_default_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_print_operation_set_default_page_setup$MH,"gtk_print_operation_set_default_page_setup");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_default_page_setup(GtkPrintOperation* op, GtkPageSetup* default_page_setup);
     * }
     */
    public static void gtk_print_operation_set_default_page_setup(MemorySegment op, MemorySegment default_page_setup) {
        var mh$ = gtk_print_operation_set_default_page_setup$MH();
        try {
            mh$.invokeExact(op, default_page_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_default_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_print_operation_get_default_page_setup$MH,"gtk_print_operation_get_default_page_setup");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_print_operation_get_default_page_setup(GtkPrintOperation* op);
     * }
     */
    public static MemorySegment gtk_print_operation_get_default_page_setup(MemorySegment op) {
        var mh$ = gtk_print_operation_get_default_page_setup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_print_operation_set_print_settings$MH,"gtk_print_operation_set_print_settings");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_print_settings(GtkPrintOperation* op, GtkPrintSettings* print_settings);
     * }
     */
    public static void gtk_print_operation_set_print_settings(MemorySegment op, MemorySegment print_settings) {
        var mh$ = gtk_print_operation_set_print_settings$MH();
        try {
            mh$.invokeExact(op, print_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_print_operation_get_print_settings$MH,"gtk_print_operation_get_print_settings");
    }
    /**
     * {@snippet :
     * GtkPrintSettings* gtk_print_operation_get_print_settings(GtkPrintOperation* op);
     * }
     */
    public static MemorySegment gtk_print_operation_get_print_settings(MemorySegment op) {
        var mh$ = gtk_print_operation_get_print_settings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_job_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_print_operation_set_job_name$MH,"gtk_print_operation_set_job_name");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_job_name(GtkPrintOperation* op, char* job_name);
     * }
     */
    public static void gtk_print_operation_set_job_name(MemorySegment op, MemorySegment job_name) {
        var mh$ = gtk_print_operation_set_job_name$MH();
        try {
            mh$.invokeExact(op, job_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_print_operation_set_n_pages$MH,"gtk_print_operation_set_n_pages");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_n_pages(GtkPrintOperation* op, int n_pages);
     * }
     */
    public static void gtk_print_operation_set_n_pages(MemorySegment op, int n_pages) {
        var mh$ = gtk_print_operation_set_n_pages$MH();
        try {
            mh$.invokeExact(op, n_pages);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_print_operation_set_current_page$MH,"gtk_print_operation_set_current_page");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_current_page(GtkPrintOperation* op, int current_page);
     * }
     */
    public static void gtk_print_operation_set_current_page(MemorySegment op, int current_page) {
        var mh$ = gtk_print_operation_set_current_page$MH();
        try {
            mh$.invokeExact(op, current_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_use_full_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_print_operation_set_use_full_page$MH,"gtk_print_operation_set_use_full_page");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_use_full_page(GtkPrintOperation* op, gboolean full_page);
     * }
     */
    public static void gtk_print_operation_set_use_full_page(MemorySegment op, int full_page) {
        var mh$ = gtk_print_operation_set_use_full_page$MH();
        try {
            mh$.invokeExact(op, full_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_unit$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_print_operation_set_unit$MH,"gtk_print_operation_set_unit");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_unit(GtkPrintOperation* op, GtkUnit unit);
     * }
     */
    public static void gtk_print_operation_set_unit(MemorySegment op, int unit) {
        var mh$ = gtk_print_operation_set_unit$MH();
        try {
            mh$.invokeExact(op, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_export_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_print_operation_set_export_filename$MH,"gtk_print_operation_set_export_filename");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_export_filename(GtkPrintOperation* op, char* filename);
     * }
     */
    public static void gtk_print_operation_set_export_filename(MemorySegment op, MemorySegment filename) {
        var mh$ = gtk_print_operation_set_export_filename$MH();
        try {
            mh$.invokeExact(op, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_track_print_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_print_operation_set_track_print_status$MH,"gtk_print_operation_set_track_print_status");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_track_print_status(GtkPrintOperation* op, gboolean track_status);
     * }
     */
    public static void gtk_print_operation_set_track_print_status(MemorySegment op, int track_status) {
        var mh$ = gtk_print_operation_set_track_print_status$MH();
        try {
            mh$.invokeExact(op, track_status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_show_progress$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_print_operation_set_show_progress$MH,"gtk_print_operation_set_show_progress");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_show_progress(GtkPrintOperation* op, gboolean show_progress);
     * }
     */
    public static void gtk_print_operation_set_show_progress(MemorySegment op, int show_progress) {
        var mh$ = gtk_print_operation_set_show_progress$MH();
        try {
            mh$.invokeExact(op, show_progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_allow_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_print_operation_set_allow_async$MH,"gtk_print_operation_set_allow_async");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_allow_async(GtkPrintOperation* op, gboolean allow_async);
     * }
     */
    public static void gtk_print_operation_set_allow_async(MemorySegment op, int allow_async) {
        var mh$ = gtk_print_operation_set_allow_async$MH();
        try {
            mh$.invokeExact(op, allow_async);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_custom_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.gtk_print_operation_set_custom_tab_label$MH,"gtk_print_operation_set_custom_tab_label");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_custom_tab_label(GtkPrintOperation* op, char* label);
     * }
     */
    public static void gtk_print_operation_set_custom_tab_label(MemorySegment op, MemorySegment label) {
        var mh$ = gtk_print_operation_set_custom_tab_label$MH();
        try {
            mh$.invokeExact(op, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_run$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.gtk_print_operation_run$MH,"gtk_print_operation_run");
    }
    /**
     * {@snippet :
     * GtkPrintOperationResult gtk_print_operation_run(GtkPrintOperation* op, GtkPrintOperationAction action, GtkWindow* parent, GError** error);
     * }
     */
    public static int gtk_print_operation_run(MemorySegment op, int action, MemorySegment parent, MemorySegment error) {
        var mh$ = gtk_print_operation_run$MH();
        try {
            return (int)mh$.invokeExact(op, action, parent, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.gtk_print_operation_get_error$MH,"gtk_print_operation_get_error");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_get_error(GtkPrintOperation* op, GError** error);
     * }
     */
    public static void gtk_print_operation_get_error(MemorySegment op, MemorySegment error) {
        var mh$ = gtk_print_operation_get_error$MH();
        try {
            mh$.invokeExact(op, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.gtk_print_operation_get_status$MH,"gtk_print_operation_get_status");
    }
    /**
     * {@snippet :
     * GtkPrintStatus gtk_print_operation_get_status(GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_status(MemorySegment op) {
        var mh$ = gtk_print_operation_get_status$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_status_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.gtk_print_operation_get_status_string$MH,"gtk_print_operation_get_status_string");
    }
    /**
     * {@snippet :
     * char* gtk_print_operation_get_status_string(GtkPrintOperation* op);
     * }
     */
    public static MemorySegment gtk_print_operation_get_status_string(MemorySegment op) {
        var mh$ = gtk_print_operation_get_status_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_is_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.gtk_print_operation_is_finished$MH,"gtk_print_operation_is_finished");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_operation_is_finished(GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_is_finished(MemorySegment op) {
        var mh$ = gtk_print_operation_is_finished$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_print_operation_cancel$MH,"gtk_print_operation_cancel");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_cancel(GtkPrintOperation* op);
     * }
     */
    public static void gtk_print_operation_cancel(MemorySegment op) {
        var mh$ = gtk_print_operation_cancel$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_draw_page_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_print_operation_draw_page_finish$MH,"gtk_print_operation_draw_page_finish");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_draw_page_finish(GtkPrintOperation* op);
     * }
     */
    public static void gtk_print_operation_draw_page_finish(MemorySegment op) {
        var mh$ = gtk_print_operation_draw_page_finish$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_defer_drawing$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_print_operation_set_defer_drawing$MH,"gtk_print_operation_set_defer_drawing");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_defer_drawing(GtkPrintOperation* op);
     * }
     */
    public static void gtk_print_operation_set_defer_drawing(MemorySegment op) {
        var mh$ = gtk_print_operation_set_defer_drawing$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_print_operation_set_support_selection$MH,"gtk_print_operation_set_support_selection");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_support_selection(GtkPrintOperation* op, gboolean support_selection);
     * }
     */
    public static void gtk_print_operation_set_support_selection(MemorySegment op, int support_selection) {
        var mh$ = gtk_print_operation_set_support_selection$MH();
        try {
            mh$.invokeExact(op, support_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_print_operation_get_support_selection$MH,"gtk_print_operation_get_support_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_operation_get_support_selection(GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_support_selection(MemorySegment op) {
        var mh$ = gtk_print_operation_get_support_selection$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_print_operation_set_has_selection$MH,"gtk_print_operation_set_has_selection");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_has_selection(GtkPrintOperation* op, gboolean has_selection);
     * }
     */
    public static void gtk_print_operation_set_has_selection(MemorySegment op, int has_selection) {
        var mh$ = gtk_print_operation_set_has_selection$MH();
        try {
            mh$.invokeExact(op, has_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_print_operation_get_has_selection$MH,"gtk_print_operation_get_has_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_operation_get_has_selection(GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_has_selection(MemorySegment op) {
        var mh$ = gtk_print_operation_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_print_operation_set_embed_page_setup$MH,"gtk_print_operation_set_embed_page_setup");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_embed_page_setup(GtkPrintOperation* op, gboolean embed);
     * }
     */
    public static void gtk_print_operation_set_embed_page_setup(MemorySegment op, int embed) {
        var mh$ = gtk_print_operation_set_embed_page_setup$MH();
        try {
            mh$.invokeExact(op, embed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_print_operation_get_embed_page_setup$MH,"gtk_print_operation_get_embed_page_setup");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_operation_get_embed_page_setup(GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_embed_page_setup(MemorySegment op) {
        var mh$ = gtk_print_operation_get_embed_page_setup$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_n_pages_to_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_print_operation_get_n_pages_to_print$MH,"gtk_print_operation_get_n_pages_to_print");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_get_n_pages_to_print(GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_n_pages_to_print(MemorySegment op) {
        var mh$ = gtk_print_operation_get_n_pages_to_print$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_run_page_setup_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_print_run_page_setup_dialog$MH,"gtk_print_run_page_setup_dialog");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_print_run_page_setup_dialog(GtkWindow* parent, GtkPageSetup* page_setup, GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_run_page_setup_dialog(MemorySegment parent, MemorySegment page_setup, MemorySegment settings) {
        var mh$ = gtk_print_run_page_setup_dialog$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, page_setup, settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_run_page_setup_dialog_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_print_run_page_setup_dialog_async$MH,"gtk_print_run_page_setup_dialog_async");
    }
    /**
     * {@snippet :
     * void gtk_print_run_page_setup_dialog_async(GtkWindow* parent, GtkPageSetup* page_setup, GtkPrintSettings* settings, GtkPageSetupDoneFunc done_cb, gpointer data);
     * }
     */
    public static void gtk_print_run_page_setup_dialog_async(MemorySegment parent, MemorySegment page_setup, MemorySegment settings, MemorySegment done_cb, MemorySegment data) {
        var mh$ = gtk_print_run_page_setup_dialog_async$MH();
        try {
            mh$.invokeExact(parent, page_setup, settings, done_cb, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_progress_bar_get_type$MH,"gtk_progress_bar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_progress_bar_get_type();
     * }
     */
    public static long gtk_progress_bar_get_type() {
        var mh$ = gtk_progress_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_progress_bar_new$MH,"gtk_progress_bar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_progress_bar_new();
     * }
     */
    public static MemorySegment gtk_progress_bar_new() {
        var mh$ = gtk_progress_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_pulse$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_progress_bar_pulse$MH,"gtk_progress_bar_pulse");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_pulse(GtkProgressBar* pbar);
     * }
     */
    public static void gtk_progress_bar_pulse(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_pulse$MH();
        try {
            mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_progress_bar_set_text$MH,"gtk_progress_bar_set_text");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_text(GtkProgressBar* pbar, char* text);
     * }
     */
    public static void gtk_progress_bar_set_text(MemorySegment pbar, MemorySegment text) {
        var mh$ = gtk_progress_bar_set_text$MH();
        try {
            mh$.invokeExact(pbar, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_progress_bar_set_fraction$MH,"gtk_progress_bar_set_fraction");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_fraction(GtkProgressBar* pbar, double fraction);
     * }
     */
    public static void gtk_progress_bar_set_fraction(MemorySegment pbar, double fraction) {
        var mh$ = gtk_progress_bar_set_fraction$MH();
        try {
            mh$.invokeExact(pbar, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_progress_bar_set_pulse_step$MH,"gtk_progress_bar_set_pulse_step");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_pulse_step(GtkProgressBar* pbar, double fraction);
     * }
     */
    public static void gtk_progress_bar_set_pulse_step(MemorySegment pbar, double fraction) {
        var mh$ = gtk_progress_bar_set_pulse_step$MH();
        try {
            mh$.invokeExact(pbar, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_progress_bar_set_inverted$MH,"gtk_progress_bar_set_inverted");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_inverted(GtkProgressBar* pbar, gboolean inverted);
     * }
     */
    public static void gtk_progress_bar_set_inverted(MemorySegment pbar, int inverted) {
        var mh$ = gtk_progress_bar_set_inverted$MH();
        try {
            mh$.invokeExact(pbar, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_progress_bar_get_text$MH,"gtk_progress_bar_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_progress_bar_get_text(GtkProgressBar* pbar);
     * }
     */
    public static MemorySegment gtk_progress_bar_get_text(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_progress_bar_get_fraction$MH,"gtk_progress_bar_get_fraction");
    }
    /**
     * {@snippet :
     * double gtk_progress_bar_get_fraction(GtkProgressBar* pbar);
     * }
     */
    public static double gtk_progress_bar_get_fraction(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_fraction$MH();
        try {
            return (double)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_progress_bar_get_pulse_step$MH,"gtk_progress_bar_get_pulse_step");
    }
    /**
     * {@snippet :
     * double gtk_progress_bar_get_pulse_step(GtkProgressBar* pbar);
     * }
     */
    public static double gtk_progress_bar_get_pulse_step(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_pulse_step$MH();
        try {
            return (double)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_progress_bar_get_inverted$MH,"gtk_progress_bar_get_inverted");
    }
    /**
     * {@snippet :
     * gboolean gtk_progress_bar_get_inverted(GtkProgressBar* pbar);
     * }
     */
    public static int gtk_progress_bar_get_inverted(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_progress_bar_set_ellipsize$MH,"gtk_progress_bar_set_ellipsize");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_ellipsize(GtkProgressBar* pbar, PangoEllipsizeMode mode);
     * }
     */
    public static void gtk_progress_bar_set_ellipsize(MemorySegment pbar, int mode) {
        var mh$ = gtk_progress_bar_set_ellipsize$MH();
        try {
            mh$.invokeExact(pbar, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_progress_bar_get_ellipsize$MH,"gtk_progress_bar_get_ellipsize");
    }
    /**
     * {@snippet :
     * PangoEllipsizeMode gtk_progress_bar_get_ellipsize(GtkProgressBar* pbar);
     * }
     */
    public static int gtk_progress_bar_get_ellipsize(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_progress_bar_set_show_text$MH,"gtk_progress_bar_set_show_text");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_show_text(GtkProgressBar* pbar, gboolean show_text);
     * }
     */
    public static void gtk_progress_bar_set_show_text(MemorySegment pbar, int show_text) {
        var mh$ = gtk_progress_bar_set_show_text$MH();
        try {
            mh$.invokeExact(pbar, show_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_progress_bar_get_show_text$MH,"gtk_progress_bar_get_show_text");
    }
    /**
     * {@snippet :
     * gboolean gtk_progress_bar_get_show_text(GtkProgressBar* pbar);
     * }
     */
    public static int gtk_progress_bar_get_show_text(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_show_text$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_range_get_type$MH,"gtk_range_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_range_get_type();
     * }
     */
    public static long gtk_range_get_type() {
        var mh$ = gtk_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_range_set_adjustment$MH,"gtk_range_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_range_set_adjustment(GtkRange* range, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_range_set_adjustment(MemorySegment range, MemorySegment adjustment) {
        var mh$ = gtk_range_set_adjustment$MH();
        try {
            mh$.invokeExact(range, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_range_get_adjustment$MH,"gtk_range_get_adjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_range_get_adjustment(GtkRange* range);
     * }
     */
    public static MemorySegment gtk_range_get_adjustment(MemorySegment range) {
        var mh$ = gtk_range_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_range_set_inverted$MH,"gtk_range_set_inverted");
    }
    /**
     * {@snippet :
     * void gtk_range_set_inverted(GtkRange* range, gboolean setting);
     * }
     */
    public static void gtk_range_set_inverted(MemorySegment range, int setting) {
        var mh$ = gtk_range_set_inverted$MH();
        try {
            mh$.invokeExact(range, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_range_get_inverted$MH,"gtk_range_get_inverted");
    }
    /**
     * {@snippet :
     * gboolean gtk_range_get_inverted(GtkRange* range);
     * }
     */
    public static int gtk_range_get_inverted(MemorySegment range) {
        var mh$ = gtk_range_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_flippable$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_range_set_flippable$MH,"gtk_range_set_flippable");
    }
    /**
     * {@snippet :
     * void gtk_range_set_flippable(GtkRange* range, gboolean flippable);
     * }
     */
    public static void gtk_range_set_flippable(MemorySegment range, int flippable) {
        var mh$ = gtk_range_set_flippable$MH();
        try {
            mh$.invokeExact(range, flippable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_flippable$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_range_get_flippable$MH,"gtk_range_get_flippable");
    }
    /**
     * {@snippet :
     * gboolean gtk_range_get_flippable(GtkRange* range);
     * }
     */
    public static int gtk_range_get_flippable(MemorySegment range) {
        var mh$ = gtk_range_get_flippable$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_slider_size_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_range_set_slider_size_fixed$MH,"gtk_range_set_slider_size_fixed");
    }
    /**
     * {@snippet :
     * void gtk_range_set_slider_size_fixed(GtkRange* range, gboolean size_fixed);
     * }
     */
    public static void gtk_range_set_slider_size_fixed(MemorySegment range, int size_fixed) {
        var mh$ = gtk_range_set_slider_size_fixed$MH();
        try {
            mh$.invokeExact(range, size_fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_slider_size_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_range_get_slider_size_fixed$MH,"gtk_range_get_slider_size_fixed");
    }
    /**
     * {@snippet :
     * gboolean gtk_range_get_slider_size_fixed(GtkRange* range);
     * }
     */
    public static int gtk_range_get_slider_size_fixed(MemorySegment range) {
        var mh$ = gtk_range_get_slider_size_fixed$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_range_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_range_get_range_rect$MH,"gtk_range_get_range_rect");
    }
    /**
     * {@snippet :
     * void gtk_range_get_range_rect(GtkRange* range, GdkRectangle* range_rect);
     * }
     */
    public static void gtk_range_get_range_rect(MemorySegment range, MemorySegment range_rect) {
        var mh$ = gtk_range_get_range_rect$MH();
        try {
            mh$.invokeExact(range, range_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_slider_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_range_get_slider_range$MH,"gtk_range_get_slider_range");
    }
    /**
     * {@snippet :
     * void gtk_range_get_slider_range(GtkRange* range, int* slider_start, int* slider_end);
     * }
     */
    public static void gtk_range_get_slider_range(MemorySegment range, MemorySegment slider_start, MemorySegment slider_end) {
        var mh$ = gtk_range_get_slider_range$MH();
        try {
            mh$.invokeExact(range, slider_start, slider_end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_range_set_increments$MH,"gtk_range_set_increments");
    }
    /**
     * {@snippet :
     * void gtk_range_set_increments(GtkRange* range, double step, double page);
     * }
     */
    public static void gtk_range_set_increments(MemorySegment range, double step, double page) {
        var mh$ = gtk_range_set_increments$MH();
        try {
            mh$.invokeExact(range, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_range_set_range$MH,"gtk_range_set_range");
    }
    /**
     * {@snippet :
     * void gtk_range_set_range(GtkRange* range, double min, double max);
     * }
     */
    public static void gtk_range_set_range(MemorySegment range, double min, double max) {
        var mh$ = gtk_range_set_range$MH();
        try {
            mh$.invokeExact(range, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_range_set_value$MH,"gtk_range_set_value");
    }
    /**
     * {@snippet :
     * void gtk_range_set_value(GtkRange* range, double value);
     * }
     */
    public static void gtk_range_set_value(MemorySegment range, double value) {
        var mh$ = gtk_range_set_value$MH();
        try {
            mh$.invokeExact(range, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_range_get_value$MH,"gtk_range_get_value");
    }
    /**
     * {@snippet :
     * double gtk_range_get_value(GtkRange* range);
     * }
     */
    public static double gtk_range_get_value(MemorySegment range) {
        var mh$ = gtk_range_get_value$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_show_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_range_set_show_fill_level$MH,"gtk_range_set_show_fill_level");
    }
    /**
     * {@snippet :
     * void gtk_range_set_show_fill_level(GtkRange* range, gboolean show_fill_level);
     * }
     */
    public static void gtk_range_set_show_fill_level(MemorySegment range, int show_fill_level) {
        var mh$ = gtk_range_set_show_fill_level$MH();
        try {
            mh$.invokeExact(range, show_fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_show_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_range_get_show_fill_level$MH,"gtk_range_get_show_fill_level");
    }
    /**
     * {@snippet :
     * gboolean gtk_range_get_show_fill_level(GtkRange* range);
     * }
     */
    public static int gtk_range_get_show_fill_level(MemorySegment range) {
        var mh$ = gtk_range_get_show_fill_level$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_restrict_to_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_range_set_restrict_to_fill_level$MH,"gtk_range_set_restrict_to_fill_level");
    }
    /**
     * {@snippet :
     * void gtk_range_set_restrict_to_fill_level(GtkRange* range, gboolean restrict_to_fill_level);
     * }
     */
    public static void gtk_range_set_restrict_to_fill_level(MemorySegment range, int restrict_to_fill_level) {
        var mh$ = gtk_range_set_restrict_to_fill_level$MH();
        try {
            mh$.invokeExact(range, restrict_to_fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_restrict_to_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_range_get_restrict_to_fill_level$MH,"gtk_range_get_restrict_to_fill_level");
    }
    /**
     * {@snippet :
     * gboolean gtk_range_get_restrict_to_fill_level(GtkRange* range);
     * }
     */
    public static int gtk_range_get_restrict_to_fill_level(MemorySegment range) {
        var mh$ = gtk_range_get_restrict_to_fill_level$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_range_set_fill_level$MH,"gtk_range_set_fill_level");
    }
    /**
     * {@snippet :
     * void gtk_range_set_fill_level(GtkRange* range, double fill_level);
     * }
     */
    public static void gtk_range_set_fill_level(MemorySegment range, double fill_level) {
        var mh$ = gtk_range_set_fill_level$MH();
        try {
            mh$.invokeExact(range, fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_range_get_fill_level$MH,"gtk_range_get_fill_level");
    }
    /**
     * {@snippet :
     * double gtk_range_get_fill_level(GtkRange* range);
     * }
     */
    public static double gtk_range_get_fill_level(MemorySegment range) {
        var mh$ = gtk_range_get_fill_level$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_round_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_range_set_round_digits$MH,"gtk_range_set_round_digits");
    }
    /**
     * {@snippet :
     * void gtk_range_set_round_digits(GtkRange* range, int round_digits);
     * }
     */
    public static void gtk_range_set_round_digits(MemorySegment range, int round_digits) {
        var mh$ = gtk_range_set_round_digits$MH();
        try {
            mh$.invokeExact(range, round_digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_round_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_range_get_round_digits$MH,"gtk_range_get_round_digits");
    }
    /**
     * {@snippet :
     * int gtk_range_get_round_digits(GtkRange* range);
     * }
     */
    public static int gtk_range_get_round_digits(MemorySegment range) {
        var mh$ = gtk_range_get_round_digits$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_INVALID_URI = 1;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_INVALID_URI() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING = 2;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED = 3;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_READ = 4;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_READ() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_WRITE = 5;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_WRITE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_RECENT_MANAGER_ERROR_UNKNOWN = 6;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_UNKNOWN() {
        return (int)6L;
    }
    public static MethodHandle gtk_recent_manager_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_recent_manager_error_quark$MH,"gtk_recent_manager_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_recent_manager_error_quark();
     * }
     */
    public static int gtk_recent_manager_error_quark() {
        var mh$ = gtk_recent_manager_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_recent_manager_get_type$MH,"gtk_recent_manager_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_recent_manager_get_type();
     * }
     */
    public static long gtk_recent_manager_get_type() {
        var mh$ = gtk_recent_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_recent_manager_new$MH,"gtk_recent_manager_new");
    }
    /**
     * {@snippet :
     * GtkRecentManager* gtk_recent_manager_new();
     * }
     */
    public static MemorySegment gtk_recent_manager_new() {
        var mh$ = gtk_recent_manager_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_recent_manager_get_default$MH,"gtk_recent_manager_get_default");
    }
    /**
     * {@snippet :
     * GtkRecentManager* gtk_recent_manager_get_default();
     * }
     */
    public static MemorySegment gtk_recent_manager_get_default() {
        var mh$ = gtk_recent_manager_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_add_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_recent_manager_add_item$MH,"gtk_recent_manager_add_item");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_manager_add_item(GtkRecentManager* manager, char* uri);
     * }
     */
    public static int gtk_recent_manager_add_item(MemorySegment manager, MemorySegment uri) {
        var mh$ = gtk_recent_manager_add_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_recent_manager_add_full$MH,"gtk_recent_manager_add_full");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_manager_add_full(GtkRecentManager* manager, char* uri, const GtkRecentData* recent_data);
     * }
     */
    public static int gtk_recent_manager_add_full(MemorySegment manager, MemorySegment uri, MemorySegment recent_data) {
        var mh$ = gtk_recent_manager_add_full$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, recent_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_remove_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_recent_manager_remove_item$MH,"gtk_recent_manager_remove_item");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_manager_remove_item(GtkRecentManager* manager, char* uri, GError** error);
     * }
     */
    public static int gtk_recent_manager_remove_item(MemorySegment manager, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_recent_manager_remove_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_lookup_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_recent_manager_lookup_item$MH,"gtk_recent_manager_lookup_item");
    }
    /**
     * {@snippet :
     * GtkRecentInfo* gtk_recent_manager_lookup_item(GtkRecentManager* manager, char* uri, GError** error);
     * }
     */
    public static MemorySegment gtk_recent_manager_lookup_item(MemorySegment manager, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_recent_manager_lookup_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_has_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_recent_manager_has_item$MH,"gtk_recent_manager_has_item");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_manager_has_item(GtkRecentManager* manager, char* uri);
     * }
     */
    public static int gtk_recent_manager_has_item(MemorySegment manager, MemorySegment uri) {
        var mh$ = gtk_recent_manager_has_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_move_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_recent_manager_move_item$MH,"gtk_recent_manager_move_item");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_manager_move_item(GtkRecentManager* manager, char* uri, char* new_uri, GError** error);
     * }
     */
    public static int gtk_recent_manager_move_item(MemorySegment manager, MemorySegment uri, MemorySegment new_uri, MemorySegment error) {
        var mh$ = gtk_recent_manager_move_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, new_uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_items$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_recent_manager_get_items$MH,"gtk_recent_manager_get_items");
    }
    /**
     * {@snippet :
     * GList* gtk_recent_manager_get_items(GtkRecentManager* manager);
     * }
     */
    public static MemorySegment gtk_recent_manager_get_items(MemorySegment manager) {
        var mh$ = gtk_recent_manager_get_items$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_purge_items$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_recent_manager_purge_items$MH,"gtk_recent_manager_purge_items");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_purge_items(GtkRecentManager* manager, GError** error);
     * }
     */
    public static int gtk_recent_manager_purge_items(MemorySegment manager, MemorySegment error) {
        var mh$ = gtk_recent_manager_purge_items$MH();
        try {
            return (int)mh$.invokeExact(manager, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_recent_info_get_type$MH,"gtk_recent_info_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_recent_info_get_type();
     * }
     */
    public static long gtk_recent_info_get_type() {
        var mh$ = gtk_recent_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_recent_info_ref$MH,"gtk_recent_info_ref");
    }
    /**
     * {@snippet :
     * GtkRecentInfo* gtk_recent_info_ref(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_ref(MemorySegment info) {
        var mh$ = gtk_recent_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_recent_info_unref$MH,"gtk_recent_info_unref");
    }
    /**
     * {@snippet :
     * void gtk_recent_info_unref(GtkRecentInfo* info);
     * }
     */
    public static void gtk_recent_info_unref(MemorySegment info) {
        var mh$ = gtk_recent_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_recent_info_get_uri$MH,"gtk_recent_info_get_uri");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_uri(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_uri(MemorySegment info) {
        var mh$ = gtk_recent_info_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_recent_info_get_display_name$MH,"gtk_recent_info_get_display_name");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_display_name(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_display_name(MemorySegment info) {
        var mh$ = gtk_recent_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_recent_info_get_description$MH,"gtk_recent_info_get_description");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_description(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_description(MemorySegment info) {
        var mh$ = gtk_recent_info_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_recent_info_get_mime_type$MH,"gtk_recent_info_get_mime_type");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_mime_type(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_mime_type(MemorySegment info) {
        var mh$ = gtk_recent_info_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_added$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_recent_info_get_added$MH,"gtk_recent_info_get_added");
    }
    /**
     * {@snippet :
     * GDateTime* gtk_recent_info_get_added(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_added(MemorySegment info) {
        var mh$ = gtk_recent_info_get_added$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_recent_info_get_modified$MH,"gtk_recent_info_get_modified");
    }
    /**
     * {@snippet :
     * GDateTime* gtk_recent_info_get_modified(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_modified(MemorySegment info) {
        var mh$ = gtk_recent_info_get_modified$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_recent_info_get_visited$MH,"gtk_recent_info_get_visited");
    }
    /**
     * {@snippet :
     * GDateTime* gtk_recent_info_get_visited(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_visited(MemorySegment info) {
        var mh$ = gtk_recent_info_get_visited$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_private_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_recent_info_get_private_hint$MH,"gtk_recent_info_get_private_hint");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_get_private_hint(GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_get_private_hint(MemorySegment info) {
        var mh$ = gtk_recent_info_get_private_hint$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_application_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_recent_info_get_application_info$MH,"gtk_recent_info_get_application_info");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_get_application_info(GtkRecentInfo* info, char* app_name, char** app_exec, guint* count, GDateTime** stamp);
     * }
     */
    public static int gtk_recent_info_get_application_info(MemorySegment info, MemorySegment app_name, MemorySegment app_exec, MemorySegment count, MemorySegment stamp) {
        var mh$ = gtk_recent_info_get_application_info$MH();
        try {
            return (int)mh$.invokeExact(info, app_name, app_exec, count, stamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_create_app_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_recent_info_create_app_info$MH,"gtk_recent_info_create_app_info");
    }
    /**
     * {@snippet :
     * GAppInfo* gtk_recent_info_create_app_info(GtkRecentInfo* info, char* app_name, GError** error);
     * }
     */
    public static MemorySegment gtk_recent_info_create_app_info(MemorySegment info, MemorySegment app_name, MemorySegment error) {
        var mh$ = gtk_recent_info_create_app_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, app_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_applications$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_recent_info_get_applications$MH,"gtk_recent_info_get_applications");
    }
    /**
     * {@snippet :
     * char** gtk_recent_info_get_applications(GtkRecentInfo* info, gsize* length);
     * }
     */
    public static MemorySegment gtk_recent_info_get_applications(MemorySegment info, MemorySegment length) {
        var mh$ = gtk_recent_info_get_applications$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_last_application$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_recent_info_last_application$MH,"gtk_recent_info_last_application");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_last_application(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_last_application(MemorySegment info) {
        var mh$ = gtk_recent_info_last_application$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_has_application$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_recent_info_has_application$MH,"gtk_recent_info_has_application");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_has_application(GtkRecentInfo* info, char* app_name);
     * }
     */
    public static int gtk_recent_info_has_application(MemorySegment info, MemorySegment app_name) {
        var mh$ = gtk_recent_info_has_application$MH();
        try {
            return (int)mh$.invokeExact(info, app_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_groups$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_recent_info_get_groups$MH,"gtk_recent_info_get_groups");
    }
    /**
     * {@snippet :
     * char** gtk_recent_info_get_groups(GtkRecentInfo* info, gsize* length);
     * }
     */
    public static MemorySegment gtk_recent_info_get_groups(MemorySegment info, MemorySegment length) {
        var mh$ = gtk_recent_info_get_groups$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_has_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_recent_info_has_group$MH,"gtk_recent_info_has_group");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_has_group(GtkRecentInfo* info, char* group_name);
     * }
     */
    public static int gtk_recent_info_has_group(MemorySegment info, MemorySegment group_name) {
        var mh$ = gtk_recent_info_has_group$MH();
        try {
            return (int)mh$.invokeExact(info, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_recent_info_get_gicon$MH,"gtk_recent_info_get_gicon");
    }
    /**
     * {@snippet :
     * GIcon* gtk_recent_info_get_gicon(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_gicon(MemorySegment info) {
        var mh$ = gtk_recent_info_get_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_short_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_recent_info_get_short_name$MH,"gtk_recent_info_get_short_name");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_short_name(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_short_name(MemorySegment info) {
        var mh$ = gtk_recent_info_get_short_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_uri_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_recent_info_get_uri_display$MH,"gtk_recent_info_get_uri_display");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_uri_display(GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_uri_display(MemorySegment info) {
        var mh$ = gtk_recent_info_get_uri_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_age$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_recent_info_get_age$MH,"gtk_recent_info_get_age");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_get_age(GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_get_age(MemorySegment info) {
        var mh$ = gtk_recent_info_get_age$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_is_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_recent_info_is_local$MH,"gtk_recent_info_is_local");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_is_local(GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_is_local(MemorySegment info) {
        var mh$ = gtk_recent_info_is_local$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_exists$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_recent_info_exists$MH,"gtk_recent_info_exists");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_exists(GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_exists(MemorySegment info) {
        var mh$ = gtk_recent_info_exists$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_match$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_recent_info_match$MH,"gtk_recent_info_match");
    }
    /**
     * {@snippet :
     * gboolean gtk_recent_info_match(GtkRecentInfo* info_a, GtkRecentInfo* info_b);
     * }
     */
    public static int gtk_recent_info_match(MemorySegment info_a, MemorySegment info_b) {
        var mh$ = gtk_recent_info_match$MH();
        try {
            return (int)mh$.invokeExact(info_a, info_b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_recent_manager_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1793._gtk_recent_manager_sync$MH,"_gtk_recent_manager_sync");
    }
    /**
     * {@snippet :
     * void _gtk_recent_manager_sync();
     * }
     */
    public static void _gtk_recent_manager_sync() {
        var mh$ = _gtk_recent_manager_sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_render_check$MH,"gtk_render_check");
    }
    /**
     * {@snippet :
     * void gtk_render_check(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_check(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_check$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_render_option$MH,"gtk_render_option");
    }
    /**
     * {@snippet :
     * void gtk_render_option(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_option(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_option$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_render_arrow$MH,"gtk_render_arrow");
    }
    /**
     * {@snippet :
     * void gtk_render_arrow(GtkStyleContext* context, cairo_t* cr, double angle, double x, double y, double size);
     * }
     */
    public static void gtk_render_arrow(MemorySegment context, MemorySegment cr, double angle, double x, double y, double size) {
        var mh$ = gtk_render_arrow$MH();
        try {
            mh$.invokeExact(context, cr, angle, x, y, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_background$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_render_background$MH,"gtk_render_background");
    }
    /**
     * {@snippet :
     * void gtk_render_background(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_background(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_background$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_render_frame$MH,"gtk_render_frame");
    }
    /**
     * {@snippet :
     * void gtk_render_frame(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_frame(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_frame$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_expander$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_render_expander$MH,"gtk_render_expander");
    }
    /**
     * {@snippet :
     * void gtk_render_expander(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_expander(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_expander$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_render_focus$MH,"gtk_render_focus");
    }
    /**
     * {@snippet :
     * void gtk_render_focus(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_focus(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_focus$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_render_layout$MH,"gtk_render_layout");
    }
    /**
     * {@snippet :
     * void gtk_render_layout(GtkStyleContext* context, cairo_t* cr, double x, double y, PangoLayout* layout);
     * }
     */
    public static void gtk_render_layout(MemorySegment context, MemorySegment cr, double x, double y, MemorySegment layout) {
        var mh$ = gtk_render_layout$MH();
        try {
            mh$.invokeExact(context, cr, x, y, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_render_line$MH,"gtk_render_line");
    }
    /**
     * {@snippet :
     * void gtk_render_line(GtkStyleContext* context, cairo_t* cr, double x0, double y0, double x1, double y1);
     * }
     */
    public static void gtk_render_line(MemorySegment context, MemorySegment cr, double x0, double y0, double x1, double y1) {
        var mh$ = gtk_render_line$MH();
        try {
            mh$.invokeExact(context, cr, x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_render_handle$MH,"gtk_render_handle");
    }
    /**
     * {@snippet :
     * void gtk_render_handle(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_handle(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_handle$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_activity$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_render_activity$MH,"gtk_render_activity");
    }
    /**
     * {@snippet :
     * void gtk_render_activity(GtkStyleContext* context, cairo_t* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_activity(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_activity$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_render_icon$MH,"gtk_render_icon");
    }
    /**
     * {@snippet :
     * void gtk_render_icon(GtkStyleContext* context, cairo_t* cr, GdkTexture* texture, double x, double y);
     * }
     */
    public static void gtk_render_icon(MemorySegment context, MemorySegment cr, MemorySegment texture, double x, double y) {
        var mh$ = gtk_render_icon$MH();
        try {
            mh$.invokeExact(context, cr, texture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_NONE = 0;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_CROSSFADE = 1;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_CROSSFADE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT = 2;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT = 3;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP = 4;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN = 5;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SWING_RIGHT = 6;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SWING_LEFT = 7;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_LEFT() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SWING_UP = 8;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_UP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_REVEALER_TRANSITION_TYPE_SWING_DOWN = 9;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_DOWN() {
        return (int)9L;
    }
    public static MethodHandle gtk_revealer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_revealer_get_type$MH,"gtk_revealer_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_revealer_get_type();
     * }
     */
    public static long gtk_revealer_get_type() {
        var mh$ = gtk_revealer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_revealer_new$MH,"gtk_revealer_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_revealer_new();
     * }
     */
    public static MemorySegment gtk_revealer_new() {
        var mh$ = gtk_revealer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_reveal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_revealer_get_reveal_child$MH,"gtk_revealer_get_reveal_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_revealer_get_reveal_child(GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_reveal_child(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_reveal_child$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_reveal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_revealer_set_reveal_child$MH,"gtk_revealer_set_reveal_child");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_reveal_child(GtkRevealer* revealer, gboolean reveal_child);
     * }
     */
    public static void gtk_revealer_set_reveal_child(MemorySegment revealer, int reveal_child) {
        var mh$ = gtk_revealer_set_reveal_child$MH();
        try {
            mh$.invokeExact(revealer, reveal_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_child_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_revealer_get_child_revealed$MH,"gtk_revealer_get_child_revealed");
    }
    /**
     * {@snippet :
     * gboolean gtk_revealer_get_child_revealed(GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_child_revealed(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_child_revealed$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_revealer_get_transition_duration$MH,"gtk_revealer_get_transition_duration");
    }
    /**
     * {@snippet :
     * guint gtk_revealer_get_transition_duration(GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_transition_duration(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_transition_duration$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_revealer_set_transition_duration$MH,"gtk_revealer_set_transition_duration");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_transition_duration(GtkRevealer* revealer, guint duration);
     * }
     */
    public static void gtk_revealer_set_transition_duration(MemorySegment revealer, int duration) {
        var mh$ = gtk_revealer_set_transition_duration$MH();
        try {
            mh$.invokeExact(revealer, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_revealer_set_transition_type$MH,"gtk_revealer_set_transition_type");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_transition_type(GtkRevealer* revealer, GtkRevealerTransitionType transition);
     * }
     */
    public static void gtk_revealer_set_transition_type(MemorySegment revealer, int transition) {
        var mh$ = gtk_revealer_set_transition_type$MH();
        try {
            mh$.invokeExact(revealer, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_revealer_get_transition_type$MH,"gtk_revealer_get_transition_type");
    }
    /**
     * {@snippet :
     * GtkRevealerTransitionType gtk_revealer_get_transition_type(GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_transition_type(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_transition_type$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_revealer_set_child$MH,"gtk_revealer_set_child");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_child(GtkRevealer* revealer, GtkWidget* child);
     * }
     */
    public static void gtk_revealer_set_child(MemorySegment revealer, MemorySegment child) {
        var mh$ = gtk_revealer_set_child$MH();
        try {
            mh$.invokeExact(revealer, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_revealer_get_child$MH,"gtk_revealer_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_revealer_get_child(GtkRevealer* revealer);
     * }
     */
    public static MemorySegment gtk_revealer_get_child(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_root_get_type$MH,"gtk_root_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_root_get_type();
     * }
     */
    public static long gtk_root_get_type() {
        var mh$ = gtk_root_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkRoot* GtkRoot_autoptr;
     * }
     */
    public static final OfAddress GtkRoot_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkRoot_listautoptr;
     * }
     */
    public static final OfAddress GtkRoot_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkRoot_slistautoptr;
     * }
     */
    public static final OfAddress GtkRoot_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkRoot_queueautoptr;
     * }
     */
    public static final OfAddress GtkRoot_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_root_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_root_get_display$MH,"gtk_root_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_root_get_display(GtkRoot* self);
     * }
     */
    public static MemorySegment gtk_root_get_display(MemorySegment self) {
        var mh$ = gtk_root_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_set_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_root_set_focus$MH,"gtk_root_set_focus");
    }
    /**
     * {@snippet :
     * void gtk_root_set_focus(GtkRoot* self, GtkWidget* focus);
     * }
     */
    public static void gtk_root_set_focus(MemorySegment self, MemorySegment focus) {
        var mh$ = gtk_root_set_focus$MH();
        try {
            mh$.invokeExact(self, focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_get_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_root_get_focus$MH,"gtk_root_get_focus");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_root_get_focus(GtkRoot* self);
     * }
     */
    public static MemorySegment gtk_root_get_focus(MemorySegment self) {
        var mh$ = gtk_root_get_focus$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_scale_get_type$MH,"gtk_scale_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scale_get_type();
     * }
     */
    public static long gtk_scale_get_type() {
        var mh$ = gtk_scale_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_scale_new$MH,"gtk_scale_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scale_new(GtkOrientation orientation, GtkAdjustment* adjustment);
     * }
     */
    public static MemorySegment gtk_scale_new(int orientation, MemorySegment adjustment) {
        var mh$ = gtk_scale_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_new_with_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_scale_new_with_range$MH,"gtk_scale_new_with_range");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scale_new_with_range(GtkOrientation orientation, double min, double max, double step);
     * }
     */
    public static MemorySegment gtk_scale_new_with_range(int orientation, double min, double max, double step) {
        var mh$ = gtk_scale_new_with_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, min, max, step);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_scale_set_digits$MH,"gtk_scale_set_digits");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_digits(GtkScale* scale, int digits);
     * }
     */
    public static void gtk_scale_set_digits(MemorySegment scale, int digits) {
        var mh$ = gtk_scale_set_digits$MH();
        try {
            mh$.invokeExact(scale, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_scale_get_digits$MH,"gtk_scale_get_digits");
    }
    /**
     * {@snippet :
     * int gtk_scale_get_digits(GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_digits(MemorySegment scale) {
        var mh$ = gtk_scale_get_digits$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_draw_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_scale_set_draw_value$MH,"gtk_scale_set_draw_value");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_draw_value(GtkScale* scale, gboolean draw_value);
     * }
     */
    public static void gtk_scale_set_draw_value(MemorySegment scale, int draw_value) {
        var mh$ = gtk_scale_set_draw_value$MH();
        try {
            mh$.invokeExact(scale, draw_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_draw_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_scale_get_draw_value$MH,"gtk_scale_get_draw_value");
    }
    /**
     * {@snippet :
     * gboolean gtk_scale_get_draw_value(GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_draw_value(MemorySegment scale) {
        var mh$ = gtk_scale_get_draw_value$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_has_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_scale_set_has_origin$MH,"gtk_scale_set_has_origin");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_has_origin(GtkScale* scale, gboolean has_origin);
     * }
     */
    public static void gtk_scale_set_has_origin(MemorySegment scale, int has_origin) {
        var mh$ = gtk_scale_set_has_origin$MH();
        try {
            mh$.invokeExact(scale, has_origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_has_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_scale_get_has_origin$MH,"gtk_scale_get_has_origin");
    }
    /**
     * {@snippet :
     * gboolean gtk_scale_get_has_origin(GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_has_origin(MemorySegment scale) {
        var mh$ = gtk_scale_get_has_origin$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_value_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_scale_set_value_pos$MH,"gtk_scale_set_value_pos");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_value_pos(GtkScale* scale, GtkPositionType pos);
     * }
     */
    public static void gtk_scale_set_value_pos(MemorySegment scale, int pos) {
        var mh$ = gtk_scale_set_value_pos$MH();
        try {
            mh$.invokeExact(scale, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_value_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_scale_get_value_pos$MH,"gtk_scale_get_value_pos");
    }
    /**
     * {@snippet :
     * GtkPositionType gtk_scale_get_value_pos(GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_value_pos(MemorySegment scale) {
        var mh$ = gtk_scale_get_value_pos$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_scale_get_layout$MH,"gtk_scale_get_layout");
    }
    /**
     * {@snippet :
     * PangoLayout* gtk_scale_get_layout(GtkScale* scale);
     * }
     */
    public static MemorySegment gtk_scale_get_layout(MemorySegment scale) {
        var mh$ = gtk_scale_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_layout_offsets$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_scale_get_layout_offsets$MH,"gtk_scale_get_layout_offsets");
    }
    /**
     * {@snippet :
     * void gtk_scale_get_layout_offsets(GtkScale* scale, int* x, int* y);
     * }
     */
    public static void gtk_scale_get_layout_offsets(MemorySegment scale, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_scale_get_layout_offsets$MH();
        try {
            mh$.invokeExact(scale, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_add_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_scale_add_mark$MH,"gtk_scale_add_mark");
    }
    /**
     * {@snippet :
     * void gtk_scale_add_mark(GtkScale* scale, double value, GtkPositionType position, char* markup);
     * }
     */
    public static void gtk_scale_add_mark(MemorySegment scale, double value, int position, MemorySegment markup) {
        var mh$ = gtk_scale_add_mark$MH();
        try {
            mh$.invokeExact(scale, value, position, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_clear_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_scale_clear_marks$MH,"gtk_scale_clear_marks");
    }
    /**
     * {@snippet :
     * void gtk_scale_clear_marks(GtkScale* scale);
     * }
     */
    public static void gtk_scale_clear_marks(MemorySegment scale) {
        var mh$ = gtk_scale_clear_marks$MH();
        try {
            mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_format_value_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_scale_set_format_value_func$MH,"gtk_scale_set_format_value_func");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_format_value_func(GtkScale* scale, GtkScaleFormatValueFunc func, gpointer user_data, GDestroyNotify destroy_notify);
     * }
     */
    public static void gtk_scale_set_format_value_func(MemorySegment scale, MemorySegment func, MemorySegment user_data, MemorySegment destroy_notify) {
        var mh$ = gtk_scale_set_format_value_func$MH();
        try {
            mh$.invokeExact(scale, func, user_data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_scale_button_get_type$MH,"gtk_scale_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scale_button_get_type();
     * }
     */
    public static long gtk_scale_button_get_type() {
        var mh$ = gtk_scale_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_scale_button_new$MH,"gtk_scale_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scale_button_new(double min, double max, double step, char** icons);
     * }
     */
    public static MemorySegment gtk_scale_button_new(double min, double max, double step, MemorySegment icons) {
        var mh$ = gtk_scale_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(min, max, step, icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_icons$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_scale_button_set_icons$MH,"gtk_scale_button_set_icons");
    }
    /**
     * {@snippet :
     * void gtk_scale_button_set_icons(GtkScaleButton* button, char** icons);
     * }
     */
    public static void gtk_scale_button_set_icons(MemorySegment button, MemorySegment icons) {
        var mh$ = gtk_scale_button_set_icons$MH();
        try {
            mh$.invokeExact(button, icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_scale_button_get_value$MH,"gtk_scale_button_get_value");
    }
    /**
     * {@snippet :
     * double gtk_scale_button_get_value(GtkScaleButton* button);
     * }
     */
    public static double gtk_scale_button_get_value(MemorySegment button) {
        var mh$ = gtk_scale_button_get_value$MH();
        try {
            return (double)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_scale_button_set_value$MH,"gtk_scale_button_set_value");
    }
    /**
     * {@snippet :
     * void gtk_scale_button_set_value(GtkScaleButton* button, double value);
     * }
     */
    public static void gtk_scale_button_set_value(MemorySegment button, double value) {
        var mh$ = gtk_scale_button_set_value$MH();
        try {
            mh$.invokeExact(button, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_scale_button_get_adjustment$MH,"gtk_scale_button_get_adjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_scale_button_get_adjustment(GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_adjustment(MemorySegment button) {
        var mh$ = gtk_scale_button_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_scale_button_set_adjustment$MH,"gtk_scale_button_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_scale_button_set_adjustment(GtkScaleButton* button, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_scale_button_set_adjustment(MemorySegment button, MemorySegment adjustment) {
        var mh$ = gtk_scale_button_set_adjustment$MH();
        try {
            mh$.invokeExact(button, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_plus_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_scale_button_get_plus_button$MH,"gtk_scale_button_get_plus_button");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scale_button_get_plus_button(GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_plus_button(MemorySegment button) {
        var mh$ = gtk_scale_button_get_plus_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_minus_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_scale_button_get_minus_button$MH,"gtk_scale_button_get_minus_button");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scale_button_get_minus_button(GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_minus_button(MemorySegment button) {
        var mh$ = gtk_scale_button_get_minus_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_scale_button_get_popup$MH,"gtk_scale_button_get_popup");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scale_button_get_popup(GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_popup(MemorySegment button) {
        var mh$ = gtk_scale_button_get_popup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_scrollable_get_type$MH,"gtk_scrollable_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scrollable_get_type();
     * }
     */
    public static long gtk_scrollable_get_type() {
        var mh$ = gtk_scrollable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_scrollable_get_hadjustment$MH,"gtk_scrollable_get_hadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_scrollable_get_hadjustment(GtkScrollable* scrollable);
     * }
     */
    public static MemorySegment gtk_scrollable_get_hadjustment(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_scrollable_set_hadjustment$MH,"gtk_scrollable_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_hadjustment(GtkScrollable* scrollable, GtkAdjustment* hadjustment);
     * }
     */
    public static void gtk_scrollable_set_hadjustment(MemorySegment scrollable, MemorySegment hadjustment) {
        var mh$ = gtk_scrollable_set_hadjustment$MH();
        try {
            mh$.invokeExact(scrollable, hadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_scrollable_get_vadjustment$MH,"gtk_scrollable_get_vadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_scrollable_get_vadjustment(GtkScrollable* scrollable);
     * }
     */
    public static MemorySegment gtk_scrollable_get_vadjustment(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_scrollable_set_vadjustment$MH,"gtk_scrollable_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_vadjustment(GtkScrollable* scrollable, GtkAdjustment* vadjustment);
     * }
     */
    public static void gtk_scrollable_set_vadjustment(MemorySegment scrollable, MemorySegment vadjustment) {
        var mh$ = gtk_scrollable_set_vadjustment$MH();
        try {
            mh$.invokeExact(scrollable, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_hscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_scrollable_get_hscroll_policy$MH,"gtk_scrollable_get_hscroll_policy");
    }
    /**
     * {@snippet :
     * GtkScrollablePolicy gtk_scrollable_get_hscroll_policy(GtkScrollable* scrollable);
     * }
     */
    public static int gtk_scrollable_get_hscroll_policy(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_hscroll_policy$MH();
        try {
            return (int)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_hscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_scrollable_set_hscroll_policy$MH,"gtk_scrollable_set_hscroll_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_hscroll_policy(GtkScrollable* scrollable, GtkScrollablePolicy policy);
     * }
     */
    public static void gtk_scrollable_set_hscroll_policy(MemorySegment scrollable, int policy) {
        var mh$ = gtk_scrollable_set_hscroll_policy$MH();
        try {
            mh$.invokeExact(scrollable, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_vscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_scrollable_get_vscroll_policy$MH,"gtk_scrollable_get_vscroll_policy");
    }
    /**
     * {@snippet :
     * GtkScrollablePolicy gtk_scrollable_get_vscroll_policy(GtkScrollable* scrollable);
     * }
     */
    public static int gtk_scrollable_get_vscroll_policy(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_vscroll_policy$MH();
        try {
            return (int)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_vscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_scrollable_set_vscroll_policy$MH,"gtk_scrollable_set_vscroll_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_vscroll_policy(GtkScrollable* scrollable, GtkScrollablePolicy policy);
     * }
     */
    public static void gtk_scrollable_set_vscroll_policy(MemorySegment scrollable, int policy) {
        var mh$ = gtk_scrollable_set_vscroll_policy$MH();
        try {
            mh$.invokeExact(scrollable, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_border$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_scrollable_get_border$MH,"gtk_scrollable_get_border");
    }
    /**
     * {@snippet :
     * gboolean gtk_scrollable_get_border(GtkScrollable* scrollable, GtkBorder* border);
     * }
     */
    public static int gtk_scrollable_get_border(MemorySegment scrollable, MemorySegment border) {
        var mh$ = gtk_scrollable_get_border$MH();
        try {
            return (int)mh$.invokeExact(scrollable, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_scrollbar_get_type$MH,"gtk_scrollbar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scrollbar_get_type();
     * }
     */
    public static long gtk_scrollbar_get_type() {
        var mh$ = gtk_scrollbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_scrollbar_new$MH,"gtk_scrollbar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scrollbar_new(GtkOrientation orientation, GtkAdjustment* adjustment);
     * }
     */
    public static MemorySegment gtk_scrollbar_new(int orientation, MemorySegment adjustment) {
        var mh$ = gtk_scrollbar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_scrollbar_set_adjustment$MH,"gtk_scrollbar_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrollbar_set_adjustment(GtkScrollbar* self, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_scrollbar_set_adjustment(MemorySegment self, MemorySegment adjustment) {
        var mh$ = gtk_scrollbar_set_adjustment$MH();
        try {
            mh$.invokeExact(self, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_scrollbar_get_adjustment$MH,"gtk_scrollbar_get_adjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_scrollbar_get_adjustment(GtkScrollbar* self);
     * }
     */
    public static MemorySegment gtk_scrollbar_get_adjustment(MemorySegment self) {
        var mh$ = gtk_scrollbar_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_CORNER_TOP_LEFT = 0;
     * }
     */
    public static int GTK_CORNER_TOP_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CORNER_BOTTOM_LEFT = 1;
     * }
     */
    public static int GTK_CORNER_BOTTOM_LEFT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CORNER_TOP_RIGHT = 2;
     * }
     */
    public static int GTK_CORNER_TOP_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CORNER_BOTTOM_RIGHT = 3;
     * }
     */
    public static int GTK_CORNER_BOTTOM_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_POLICY_ALWAYS = 0;
     * }
     */
    public static int GTK_POLICY_ALWAYS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_POLICY_AUTOMATIC = 1;
     * }
     */
    public static int GTK_POLICY_AUTOMATIC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_POLICY_NEVER = 2;
     * }
     */
    public static int GTK_POLICY_NEVER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_POLICY_EXTERNAL = 3;
     * }
     */
    public static int GTK_POLICY_EXTERNAL() {
        return (int)3L;
    }
    public static MethodHandle gtk_scrolled_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_scrolled_window_get_type$MH,"gtk_scrolled_window_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scrolled_window_get_type();
     * }
     */
    public static long gtk_scrolled_window_get_type() {
        var mh$ = gtk_scrolled_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_scrolled_window_new$MH,"gtk_scrolled_window_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scrolled_window_new();
     * }
     */
    public static MemorySegment gtk_scrolled_window_new() {
        var mh$ = gtk_scrolled_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_scrolled_window_set_hadjustment$MH,"gtk_scrolled_window_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_hadjustment(GtkScrolledWindow* scrolled_window, GtkAdjustment* hadjustment);
     * }
     */
    public static void gtk_scrolled_window_set_hadjustment(MemorySegment scrolled_window, MemorySegment hadjustment) {
        var mh$ = gtk_scrolled_window_set_hadjustment$MH();
        try {
            mh$.invokeExact(scrolled_window, hadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_scrolled_window_set_vadjustment$MH,"gtk_scrolled_window_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_vadjustment(GtkScrolledWindow* scrolled_window, GtkAdjustment* vadjustment);
     * }
     */
    public static void gtk_scrolled_window_set_vadjustment(MemorySegment scrolled_window, MemorySegment vadjustment) {
        var mh$ = gtk_scrolled_window_set_vadjustment$MH();
        try {
            mh$.invokeExact(scrolled_window, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_scrolled_window_get_hadjustment$MH,"gtk_scrolled_window_get_hadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_scrolled_window_get_hadjustment(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_hadjustment(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_scrolled_window_get_vadjustment$MH,"gtk_scrolled_window_get_vadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_scrolled_window_get_vadjustment(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_vadjustment(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_hscrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_scrolled_window_get_hscrollbar$MH,"gtk_scrolled_window_get_hscrollbar");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scrolled_window_get_hscrollbar(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_hscrollbar(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_hscrollbar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_vscrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_scrolled_window_get_vscrollbar$MH,"gtk_scrolled_window_get_vscrollbar");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scrolled_window_get_vscrollbar(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_vscrollbar(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_vscrollbar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_scrolled_window_set_policy$MH,"gtk_scrolled_window_set_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_policy(GtkScrolledWindow* scrolled_window, GtkPolicyType hscrollbar_policy, GtkPolicyType vscrollbar_policy);
     * }
     */
    public static void gtk_scrolled_window_set_policy(MemorySegment scrolled_window, int hscrollbar_policy, int vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_set_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_scrolled_window_get_policy$MH,"gtk_scrolled_window_get_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_get_policy(GtkScrolledWindow* scrolled_window, GtkPolicyType* hscrollbar_policy, GtkPolicyType* vscrollbar_policy);
     * }
     */
    public static void gtk_scrolled_window_get_policy(MemorySegment scrolled_window, MemorySegment hscrollbar_policy, MemorySegment vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_get_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_scrolled_window_set_placement$MH,"gtk_scrolled_window_set_placement");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_placement(GtkScrolledWindow* scrolled_window, GtkCornerType window_placement);
     * }
     */
    public static void gtk_scrolled_window_set_placement(MemorySegment scrolled_window, int window_placement) {
        var mh$ = gtk_scrolled_window_set_placement$MH();
        try {
            mh$.invokeExact(scrolled_window, window_placement);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_unset_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_scrolled_window_unset_placement$MH,"gtk_scrolled_window_unset_placement");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_unset_placement(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static void gtk_scrolled_window_unset_placement(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_unset_placement$MH();
        try {
            mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_scrolled_window_get_placement$MH,"gtk_scrolled_window_get_placement");
    }
    /**
     * {@snippet :
     * GtkCornerType gtk_scrolled_window_get_placement(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_placement(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_placement$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_scrolled_window_set_has_frame$MH,"gtk_scrolled_window_set_has_frame");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_has_frame(GtkScrolledWindow* scrolled_window, gboolean has_frame);
     * }
     */
    public static void gtk_scrolled_window_set_has_frame(MemorySegment scrolled_window, int has_frame) {
        var mh$ = gtk_scrolled_window_set_has_frame$MH();
        try {
            mh$.invokeExact(scrolled_window, has_frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_scrolled_window_get_has_frame$MH,"gtk_scrolled_window_get_has_frame");
    }
    /**
     * {@snippet :
     * gboolean gtk_scrolled_window_get_has_frame(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_has_frame(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_has_frame$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_min_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_scrolled_window_get_min_content_width$MH,"gtk_scrolled_window_get_min_content_width");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_min_content_width(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_min_content_width(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_min_content_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_min_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_scrolled_window_set_min_content_width$MH,"gtk_scrolled_window_set_min_content_width");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_min_content_width(GtkScrolledWindow* scrolled_window, int width);
     * }
     */
    public static void gtk_scrolled_window_set_min_content_width(MemorySegment scrolled_window, int width) {
        var mh$ = gtk_scrolled_window_set_min_content_width$MH();
        try {
            mh$.invokeExact(scrolled_window, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_min_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_scrolled_window_get_min_content_height$MH,"gtk_scrolled_window_get_min_content_height");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_min_content_height(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_min_content_height(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_min_content_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_min_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_scrolled_window_set_min_content_height$MH,"gtk_scrolled_window_set_min_content_height");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_min_content_height(GtkScrolledWindow* scrolled_window, int height);
     * }
     */
    public static void gtk_scrolled_window_set_min_content_height(MemorySegment scrolled_window, int height) {
        var mh$ = gtk_scrolled_window_set_min_content_height$MH();
        try {
            mh$.invokeExact(scrolled_window, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_kinetic_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_scrolled_window_set_kinetic_scrolling$MH,"gtk_scrolled_window_set_kinetic_scrolling");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_kinetic_scrolling(GtkScrolledWindow* scrolled_window, gboolean kinetic_scrolling);
     * }
     */
    public static void gtk_scrolled_window_set_kinetic_scrolling(MemorySegment scrolled_window, int kinetic_scrolling) {
        var mh$ = gtk_scrolled_window_set_kinetic_scrolling$MH();
        try {
            mh$.invokeExact(scrolled_window, kinetic_scrolling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_kinetic_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_scrolled_window_get_kinetic_scrolling$MH,"gtk_scrolled_window_get_kinetic_scrolling");
    }
    /**
     * {@snippet :
     * gboolean gtk_scrolled_window_get_kinetic_scrolling(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_kinetic_scrolling(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_kinetic_scrolling$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_overlay_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_scrolled_window_set_overlay_scrolling$MH,"gtk_scrolled_window_set_overlay_scrolling");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_overlay_scrolling(GtkScrolledWindow* scrolled_window, gboolean overlay_scrolling);
     * }
     */
    public static void gtk_scrolled_window_set_overlay_scrolling(MemorySegment scrolled_window, int overlay_scrolling) {
        var mh$ = gtk_scrolled_window_set_overlay_scrolling$MH();
        try {
            mh$.invokeExact(scrolled_window, overlay_scrolling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_overlay_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_scrolled_window_get_overlay_scrolling$MH,"gtk_scrolled_window_get_overlay_scrolling");
    }
    /**
     * {@snippet :
     * gboolean gtk_scrolled_window_get_overlay_scrolling(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_overlay_scrolling(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_overlay_scrolling$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_max_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_scrolled_window_set_max_content_width$MH,"gtk_scrolled_window_set_max_content_width");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_max_content_width(GtkScrolledWindow* scrolled_window, int width);
     * }
     */
    public static void gtk_scrolled_window_set_max_content_width(MemorySegment scrolled_window, int width) {
        var mh$ = gtk_scrolled_window_set_max_content_width$MH();
        try {
            mh$.invokeExact(scrolled_window, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_max_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_scrolled_window_get_max_content_width$MH,"gtk_scrolled_window_get_max_content_width");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_max_content_width(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_max_content_width(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_max_content_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_max_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_scrolled_window_set_max_content_height$MH,"gtk_scrolled_window_set_max_content_height");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_max_content_height(GtkScrolledWindow* scrolled_window, int height);
     * }
     */
    public static void gtk_scrolled_window_set_max_content_height(MemorySegment scrolled_window, int height) {
        var mh$ = gtk_scrolled_window_set_max_content_height$MH();
        try {
            mh$.invokeExact(scrolled_window, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_max_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_scrolled_window_get_max_content_height$MH,"gtk_scrolled_window_get_max_content_height");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_max_content_height(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_max_content_height(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_max_content_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_propagate_natural_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_scrolled_window_set_propagate_natural_width$MH,"gtk_scrolled_window_set_propagate_natural_width");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_propagate_natural_width(GtkScrolledWindow* scrolled_window, gboolean propagate);
     * }
     */
    public static void gtk_scrolled_window_set_propagate_natural_width(MemorySegment scrolled_window, int propagate) {
        var mh$ = gtk_scrolled_window_set_propagate_natural_width$MH();
        try {
            mh$.invokeExact(scrolled_window, propagate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_propagate_natural_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_scrolled_window_get_propagate_natural_width$MH,"gtk_scrolled_window_get_propagate_natural_width");
    }
    /**
     * {@snippet :
     * gboolean gtk_scrolled_window_get_propagate_natural_width(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_propagate_natural_width(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_propagate_natural_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_propagate_natural_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_scrolled_window_set_propagate_natural_height$MH,"gtk_scrolled_window_set_propagate_natural_height");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_propagate_natural_height(GtkScrolledWindow* scrolled_window, gboolean propagate);
     * }
     */
    public static void gtk_scrolled_window_set_propagate_natural_height(MemorySegment scrolled_window, int propagate) {
        var mh$ = gtk_scrolled_window_set_propagate_natural_height$MH();
        try {
            mh$.invokeExact(scrolled_window, propagate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_propagate_natural_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_scrolled_window_get_propagate_natural_height$MH,"gtk_scrolled_window_get_propagate_natural_height");
    }
    /**
     * {@snippet :
     * gboolean gtk_scrolled_window_get_propagate_natural_height(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_propagate_natural_height(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_propagate_natural_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_scrolled_window_set_child$MH,"gtk_scrolled_window_set_child");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_child(GtkScrolledWindow* scrolled_window, GtkWidget* child);
     * }
     */
    public static void gtk_scrolled_window_set_child(MemorySegment scrolled_window, MemorySegment child) {
        var mh$ = gtk_scrolled_window_set_child$MH();
        try {
            mh$.invokeExact(scrolled_window, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_scrolled_window_get_child$MH,"gtk_scrolled_window_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_scrolled_window_get_child(GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_child(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_search_bar_get_type$MH,"gtk_search_bar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_search_bar_get_type();
     * }
     */
    public static long gtk_search_bar_get_type() {
        var mh$ = gtk_search_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_search_bar_new$MH,"gtk_search_bar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_search_bar_new();
     * }
     */
    public static MemorySegment gtk_search_bar_new() {
        var mh$ = gtk_search_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_connect_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_search_bar_connect_entry$MH,"gtk_search_bar_connect_entry");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_connect_entry(GtkSearchBar* bar, GtkEditable* entry);
     * }
     */
    public static void gtk_search_bar_connect_entry(MemorySegment bar, MemorySegment entry) {
        var mh$ = gtk_search_bar_connect_entry$MH();
        try {
            mh$.invokeExact(bar, entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_search_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_search_bar_get_search_mode$MH,"gtk_search_bar_get_search_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_search_bar_get_search_mode(GtkSearchBar* bar);
     * }
     */
    public static int gtk_search_bar_get_search_mode(MemorySegment bar) {
        var mh$ = gtk_search_bar_get_search_mode$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_search_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_search_bar_set_search_mode$MH,"gtk_search_bar_set_search_mode");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_set_search_mode(GtkSearchBar* bar, gboolean search_mode);
     * }
     */
    public static void gtk_search_bar_set_search_mode(MemorySegment bar, int search_mode) {
        var mh$ = gtk_search_bar_set_search_mode$MH();
        try {
            mh$.invokeExact(bar, search_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_search_bar_get_show_close_button$MH,"gtk_search_bar_get_show_close_button");
    }
    /**
     * {@snippet :
     * gboolean gtk_search_bar_get_show_close_button(GtkSearchBar* bar);
     * }
     */
    public static int gtk_search_bar_get_show_close_button(MemorySegment bar) {
        var mh$ = gtk_search_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_search_bar_set_show_close_button$MH,"gtk_search_bar_set_show_close_button");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_set_show_close_button(GtkSearchBar* bar, gboolean visible);
     * }
     */
    public static void gtk_search_bar_set_show_close_button(MemorySegment bar, int visible) {
        var mh$ = gtk_search_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(bar, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_search_bar_set_key_capture_widget$MH,"gtk_search_bar_set_key_capture_widget");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_set_key_capture_widget(GtkSearchBar* bar, GtkWidget* widget);
     * }
     */
    public static void gtk_search_bar_set_key_capture_widget(MemorySegment bar, MemorySegment widget) {
        var mh$ = gtk_search_bar_set_key_capture_widget$MH();
        try {
            mh$.invokeExact(bar, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_search_bar_get_key_capture_widget$MH,"gtk_search_bar_get_key_capture_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_search_bar_get_key_capture_widget(GtkSearchBar* bar);
     * }
     */
    public static MemorySegment gtk_search_bar_get_key_capture_widget(MemorySegment bar) {
        var mh$ = gtk_search_bar_get_key_capture_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_search_bar_set_child$MH,"gtk_search_bar_set_child");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_set_child(GtkSearchBar* bar, GtkWidget* child);
     * }
     */
    public static void gtk_search_bar_set_child(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_search_bar_set_child$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_search_bar_get_child$MH,"gtk_search_bar_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_search_bar_get_child(GtkSearchBar* bar);
     * }
     */
    public static MemorySegment gtk_search_bar_get_child(MemorySegment bar) {
        var mh$ = gtk_search_bar_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_search_entry_get_type$MH,"gtk_search_entry_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_search_entry_get_type();
     * }
     */
    public static long gtk_search_entry_get_type() {
        var mh$ = gtk_search_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_search_entry_new$MH,"gtk_search_entry_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_search_entry_new();
     * }
     */
    public static MemorySegment gtk_search_entry_new() {
        var mh$ = gtk_search_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_set_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_search_entry_set_key_capture_widget$MH,"gtk_search_entry_set_key_capture_widget");
    }
    /**
     * {@snippet :
     * void gtk_search_entry_set_key_capture_widget(GtkSearchEntry* entry, GtkWidget* widget);
     * }
     */
    public static void gtk_search_entry_set_key_capture_widget(MemorySegment entry, MemorySegment widget) {
        var mh$ = gtk_search_entry_set_key_capture_widget$MH();
        try {
            mh$.invokeExact(entry, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_get_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_search_entry_get_key_capture_widget$MH,"gtk_search_entry_get_key_capture_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_search_entry_get_key_capture_widget(GtkSearchEntry* entry);
     * }
     */
    public static MemorySegment gtk_search_entry_get_key_capture_widget(MemorySegment entry) {
        var mh$ = gtk_search_entry_get_key_capture_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_selection_filter_model_get_type$MH,"gtk_selection_filter_model_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_selection_filter_model_get_type();
     * }
     */
    public static long gtk_selection_filter_model_get_type() {
        var mh$ = gtk_selection_filter_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkSelectionFilterModel* GtkSelectionFilterModel_autoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSelectionFilterModel_listautoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSelectionFilterModel_slistautoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSelectionFilterModel_queueautoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkSelectionFilterModelClass_autoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSelectionFilterModelClass_listautoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSelectionFilterModelClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSelectionFilterModelClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkSelectionFilterModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_selection_filter_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_selection_filter_model_new$MH,"gtk_selection_filter_model_new");
    }
    /**
     * {@snippet :
     * GtkSelectionFilterModel* gtk_selection_filter_model_new(GtkSelectionModel* model);
     * }
     */
    public static MemorySegment gtk_selection_filter_model_new(MemorySegment model) {
        var mh$ = gtk_selection_filter_model_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_selection_filter_model_set_model$MH,"gtk_selection_filter_model_set_model");
    }
    /**
     * {@snippet :
     * void gtk_selection_filter_model_set_model(GtkSelectionFilterModel* self, GtkSelectionModel* model);
     * }
     */
    public static void gtk_selection_filter_model_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_selection_filter_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_selection_filter_model_get_model$MH,"gtk_selection_filter_model_get_model");
    }
    /**
     * {@snippet :
     * GtkSelectionModel* gtk_selection_filter_model_get_model(GtkSelectionFilterModel* self);
     * }
     */
    public static MemorySegment gtk_selection_filter_model_get_model(MemorySegment self) {
        var mh$ = gtk_selection_filter_model_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_separator_get_type$MH,"gtk_separator_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_separator_get_type();
     * }
     */
    public static long gtk_separator_get_type() {
        var mh$ = gtk_separator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_separator_new$MH,"gtk_separator_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_separator_new(GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_separator_new(int orientation) {
        var mh$ = gtk_separator_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_settings_get_type$MH,"gtk_settings_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_settings_get_type();
     * }
     */
    public static long gtk_settings_get_type() {
        var mh$ = gtk_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_settings_get_default$MH,"gtk_settings_get_default");
    }
    /**
     * {@snippet :
     * GtkSettings* gtk_settings_get_default();
     * }
     */
    public static MemorySegment gtk_settings_get_default() {
        var mh$ = gtk_settings_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_settings_get_for_display$MH,"gtk_settings_get_for_display");
    }
    /**
     * {@snippet :
     * GtkSettings* gtk_settings_get_for_display(GdkDisplay* display);
     * }
     */
    public static MemorySegment gtk_settings_get_for_display(MemorySegment display) {
        var mh$ = gtk_settings_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_reset_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_settings_reset_property$MH,"gtk_settings_reset_property");
    }
    /**
     * {@snippet :
     * void gtk_settings_reset_property(GtkSettings* settings, char* name);
     * }
     */
    public static void gtk_settings_reset_property(MemorySegment settings, MemorySegment name) {
        var mh$ = gtk_settings_reset_property$MH();
        try {
            mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_shortcut_controller_get_type$MH,"gtk_shortcut_controller_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_controller_get_type();
     * }
     */
    public static long gtk_shortcut_controller_get_type() {
        var mh$ = gtk_shortcut_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_shortcut_controller_new$MH,"gtk_shortcut_controller_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_shortcut_controller_new();
     * }
     */
    public static MemorySegment gtk_shortcut_controller_new() {
        var mh$ = gtk_shortcut_controller_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_new_for_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_shortcut_controller_new_for_model$MH,"gtk_shortcut_controller_new_for_model");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_shortcut_controller_new_for_model(GListModel* model);
     * }
     */
    public static MemorySegment gtk_shortcut_controller_new_for_model(MemorySegment model) {
        var mh$ = gtk_shortcut_controller_new_for_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_set_mnemonics_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_shortcut_controller_set_mnemonics_modifiers$MH,"gtk_shortcut_controller_set_mnemonics_modifiers");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_controller_set_mnemonics_modifiers(GtkShortcutController* self, GdkModifierType modifiers);
     * }
     */
    public static void gtk_shortcut_controller_set_mnemonics_modifiers(MemorySegment self, int modifiers) {
        var mh$ = gtk_shortcut_controller_set_mnemonics_modifiers$MH();
        try {
            mh$.invokeExact(self, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_get_mnemonics_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_shortcut_controller_get_mnemonics_modifiers$MH,"gtk_shortcut_controller_get_mnemonics_modifiers");
    }
    /**
     * {@snippet :
     * GdkModifierType gtk_shortcut_controller_get_mnemonics_modifiers(GtkShortcutController* self);
     * }
     */
    public static int gtk_shortcut_controller_get_mnemonics_modifiers(MemorySegment self) {
        var mh$ = gtk_shortcut_controller_get_mnemonics_modifiers$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_set_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_shortcut_controller_set_scope$MH,"gtk_shortcut_controller_set_scope");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_controller_set_scope(GtkShortcutController* self, GtkShortcutScope scope);
     * }
     */
    public static void gtk_shortcut_controller_set_scope(MemorySegment self, int scope) {
        var mh$ = gtk_shortcut_controller_set_scope$MH();
        try {
            mh$.invokeExact(self, scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_get_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_shortcut_controller_get_scope$MH,"gtk_shortcut_controller_get_scope");
    }
    /**
     * {@snippet :
     * GtkShortcutScope gtk_shortcut_controller_get_scope(GtkShortcutController* self);
     * }
     */
    public static int gtk_shortcut_controller_get_scope(MemorySegment self) {
        var mh$ = gtk_shortcut_controller_get_scope$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_add_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_shortcut_controller_add_shortcut$MH,"gtk_shortcut_controller_add_shortcut");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_controller_add_shortcut(GtkShortcutController* self, GtkShortcut* shortcut);
     * }
     */
    public static void gtk_shortcut_controller_add_shortcut(MemorySegment self, MemorySegment shortcut) {
        var mh$ = gtk_shortcut_controller_add_shortcut$MH();
        try {
            mh$.invokeExact(self, shortcut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_remove_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_shortcut_controller_remove_shortcut$MH,"gtk_shortcut_controller_remove_shortcut");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_controller_remove_shortcut(GtkShortcutController* self, GtkShortcut* shortcut);
     * }
     */
    public static void gtk_shortcut_controller_remove_shortcut(MemorySegment self, MemorySegment shortcut) {
        var mh$ = gtk_shortcut_controller_remove_shortcut$MH();
        try {
            mh$.invokeExact(self, shortcut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_shortcut_label_get_type$MH,"gtk_shortcut_label_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_label_get_type();
     * }
     */
    public static long gtk_shortcut_label_get_type() {
        var mh$ = gtk_shortcut_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_shortcut_label_new$MH,"gtk_shortcut_label_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_shortcut_label_new(char* accelerator);
     * }
     */
    public static MemorySegment gtk_shortcut_label_new(MemorySegment accelerator) {
        var mh$ = gtk_shortcut_label_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accelerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_shortcut_label_get_accelerator$MH,"gtk_shortcut_label_get_accelerator");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_label_get_accelerator(GtkShortcutLabel* self);
     * }
     */
    public static MemorySegment gtk_shortcut_label_get_accelerator(MemorySegment self) {
        var mh$ = gtk_shortcut_label_get_accelerator$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_set_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_shortcut_label_set_accelerator$MH,"gtk_shortcut_label_set_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_label_set_accelerator(GtkShortcutLabel* self, char* accelerator);
     * }
     */
    public static void gtk_shortcut_label_set_accelerator(MemorySegment self, MemorySegment accelerator) {
        var mh$ = gtk_shortcut_label_set_accelerator$MH();
        try {
            mh$.invokeExact(self, accelerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_disabled_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_shortcut_label_get_disabled_text$MH,"gtk_shortcut_label_get_disabled_text");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_label_get_disabled_text(GtkShortcutLabel* self);
     * }
     */
    public static MemorySegment gtk_shortcut_label_get_disabled_text(MemorySegment self) {
        var mh$ = gtk_shortcut_label_get_disabled_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_set_disabled_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_shortcut_label_set_disabled_text$MH,"gtk_shortcut_label_set_disabled_text");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_label_set_disabled_text(GtkShortcutLabel* self, char* disabled_text);
     * }
     */
    public static void gtk_shortcut_label_set_disabled_text(MemorySegment self, MemorySegment disabled_text) {
        var mh$ = gtk_shortcut_label_set_disabled_text$MH();
        try {
            mh$.invokeExact(self, disabled_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_shortcut_manager_get_type$MH,"gtk_shortcut_manager_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_manager_get_type();
     * }
     */
    public static long gtk_shortcut_manager_get_type() {
        var mh$ = gtk_shortcut_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkShortcutManager* GtkShortcutManager_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutManager_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutManager_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutManager_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_shortcuts_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_shortcuts_group_get_type$MH,"gtk_shortcuts_group_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcuts_group_get_type();
     * }
     */
    public static long gtk_shortcuts_group_get_type() {
        var mh$ = gtk_shortcuts_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_shortcuts_section_get_type$MH,"gtk_shortcuts_section_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcuts_section_get_type();
     * }
     */
    public static long gtk_shortcuts_section_get_type() {
        var mh$ = gtk_shortcuts_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_ACCELERATOR = 0;
     * }
     */
    public static int GTK_SHORTCUT_ACCELERATOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_PINCH = 1;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_PINCH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_STRETCH = 2;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_STRETCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE = 3;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE = 4;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT = 5;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT = 6;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE = 7;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_SWIPE_LEFT = 8;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_SWIPE_LEFT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_GESTURE_SWIPE_RIGHT = 9;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_SWIPE_RIGHT() {
        return (int)9L;
    }
    public static MethodHandle gtk_shortcuts_shortcut_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_shortcuts_shortcut_get_type$MH,"gtk_shortcuts_shortcut_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcuts_shortcut_get_type();
     * }
     */
    public static long gtk_shortcuts_shortcut_get_type() {
        var mh$ = gtk_shortcuts_shortcut_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_shortcut_trigger_get_type$MH,"gtk_shortcut_trigger_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_trigger_get_type();
     * }
     */
    public static long gtk_shortcut_trigger_get_type() {
        var mh$ = gtk_shortcut_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkShortcutTrigger* GtkShortcutTrigger_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutTrigger_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutTrigger_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutTrigger_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkShortcutTriggerClass* GtkShortcutTriggerClass_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutTriggerClass_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutTriggerClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutTriggerClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_shortcut_trigger_parse_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_shortcut_trigger_parse_string$MH,"gtk_shortcut_trigger_parse_string");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_shortcut_trigger_parse_string(char* string);
     * }
     */
    public static MemorySegment gtk_shortcut_trigger_parse_string(MemorySegment string) {
        var mh$ = gtk_shortcut_trigger_parse_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_shortcut_trigger_to_string$MH,"gtk_shortcut_trigger_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_trigger_to_string(GtkShortcutTrigger* self);
     * }
     */
    public static MemorySegment gtk_shortcut_trigger_to_string(MemorySegment self) {
        var mh$ = gtk_shortcut_trigger_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_shortcut_trigger_print$MH,"gtk_shortcut_trigger_print");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_trigger_print(GtkShortcutTrigger* self, GString* string);
     * }
     */
    public static void gtk_shortcut_trigger_print(MemorySegment self, MemorySegment string) {
        var mh$ = gtk_shortcut_trigger_print$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_to_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_shortcut_trigger_to_label$MH,"gtk_shortcut_trigger_to_label");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_trigger_to_label(GtkShortcutTrigger* self, GdkDisplay* display);
     * }
     */
    public static MemorySegment gtk_shortcut_trigger_to_label(MemorySegment self, MemorySegment display) {
        var mh$ = gtk_shortcut_trigger_to_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_print_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_shortcut_trigger_print_label$MH,"gtk_shortcut_trigger_print_label");
    }
    /**
     * {@snippet :
     * gboolean gtk_shortcut_trigger_print_label(GtkShortcutTrigger* self, GdkDisplay* display, GString* string);
     * }
     */
    public static int gtk_shortcut_trigger_print_label(MemorySegment self, MemorySegment display, MemorySegment string) {
        var mh$ = gtk_shortcut_trigger_print_label$MH();
        try {
            return (int)mh$.invokeExact(self, display, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_shortcut_trigger_hash$MH,"gtk_shortcut_trigger_hash");
    }
    /**
     * {@snippet :
     * guint gtk_shortcut_trigger_hash(gconstpointer trigger);
     * }
     */
    public static int gtk_shortcut_trigger_hash(MemorySegment trigger) {
        var mh$ = gtk_shortcut_trigger_hash$MH();
        try {
            return (int)mh$.invokeExact(trigger);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_shortcut_trigger_equal$MH,"gtk_shortcut_trigger_equal");
    }
    /**
     * {@snippet :
     * gboolean gtk_shortcut_trigger_equal(gconstpointer trigger1, gconstpointer trigger2);
     * }
     */
    public static int gtk_shortcut_trigger_equal(MemorySegment trigger1, MemorySegment trigger2) {
        var mh$ = gtk_shortcut_trigger_equal$MH();
        try {
            return (int)mh$.invokeExact(trigger1, trigger2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_shortcut_trigger_compare$MH,"gtk_shortcut_trigger_compare");
    }
    /**
     * {@snippet :
     * int gtk_shortcut_trigger_compare(gconstpointer trigger1, gconstpointer trigger2);
     * }
     */
    public static int gtk_shortcut_trigger_compare(MemorySegment trigger1, MemorySegment trigger2) {
        var mh$ = gtk_shortcut_trigger_compare$MH();
        try {
            return (int)mh$.invokeExact(trigger1, trigger2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_trigger$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_shortcut_trigger_trigger$MH,"gtk_shortcut_trigger_trigger");
    }
    /**
     * {@snippet :
     * GdkKeyMatch gtk_shortcut_trigger_trigger(GtkShortcutTrigger* self, GdkEvent* event, gboolean enable_mnemonics);
     * }
     */
    public static int gtk_shortcut_trigger_trigger(MemorySegment self, MemorySegment event, int enable_mnemonics) {
        var mh$ = gtk_shortcut_trigger_trigger$MH();
        try {
            return (int)mh$.invokeExact(self, event, enable_mnemonics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_never_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_never_trigger_get_type$MH,"gtk_never_trigger_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_never_trigger_get_type();
     * }
     */
    public static long gtk_never_trigger_get_type() {
        var mh$ = gtk_never_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNeverTrigger* GtkNeverTrigger_autoptr;
     * }
     */
    public static final OfAddress GtkNeverTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNeverTrigger_listautoptr;
     * }
     */
    public static final OfAddress GtkNeverTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNeverTrigger_slistautoptr;
     * }
     */
    public static final OfAddress GtkNeverTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNeverTrigger_queueautoptr;
     * }
     */
    public static final OfAddress GtkNeverTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkNeverTriggerClass* GtkNeverTriggerClass_autoptr;
     * }
     */
    public static final OfAddress GtkNeverTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNeverTriggerClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNeverTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNeverTriggerClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNeverTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNeverTriggerClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNeverTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_never_trigger_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_never_trigger_get$MH,"gtk_never_trigger_get");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_never_trigger_get();
     * }
     */
    public static MemorySegment gtk_never_trigger_get() {
        var mh$ = gtk_never_trigger_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_keyval_trigger_get_type$MH,"gtk_keyval_trigger_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_keyval_trigger_get_type();
     * }
     */
    public static long gtk_keyval_trigger_get_type() {
        var mh$ = gtk_keyval_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkKeyvalTrigger* GtkKeyvalTrigger_autoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkKeyvalTrigger_listautoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkKeyvalTrigger_slistautoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkKeyvalTrigger_queueautoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkKeyvalTriggerClass* GtkKeyvalTriggerClass_autoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkKeyvalTriggerClass_listautoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkKeyvalTriggerClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkKeyvalTriggerClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkKeyvalTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_keyval_trigger_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_keyval_trigger_new$MH,"gtk_keyval_trigger_new");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_keyval_trigger_new(guint keyval, GdkModifierType modifiers);
     * }
     */
    public static MemorySegment gtk_keyval_trigger_new(int keyval, int modifiers) {
        var mh$ = gtk_keyval_trigger_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_get_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_keyval_trigger_get_modifiers$MH,"gtk_keyval_trigger_get_modifiers");
    }
    /**
     * {@snippet :
     * GdkModifierType gtk_keyval_trigger_get_modifiers(GtkKeyvalTrigger* self);
     * }
     */
    public static int gtk_keyval_trigger_get_modifiers(MemorySegment self) {
        var mh$ = gtk_keyval_trigger_get_modifiers$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_get_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_keyval_trigger_get_keyval$MH,"gtk_keyval_trigger_get_keyval");
    }
    /**
     * {@snippet :
     * guint gtk_keyval_trigger_get_keyval(GtkKeyvalTrigger* self);
     * }
     */
    public static int gtk_keyval_trigger_get_keyval(MemorySegment self) {
        var mh$ = gtk_keyval_trigger_get_keyval$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_mnemonic_trigger_get_type$MH,"gtk_mnemonic_trigger_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_mnemonic_trigger_get_type();
     * }
     */
    public static long gtk_mnemonic_trigger_get_type() {
        var mh$ = gtk_mnemonic_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMnemonicTrigger* GtkMnemonicTrigger_autoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMnemonicTrigger_listautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMnemonicTrigger_slistautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMnemonicTrigger_queueautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkMnemonicTriggerClass* GtkMnemonicTriggerClass_autoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMnemonicTriggerClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMnemonicTriggerClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMnemonicTriggerClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_mnemonic_trigger_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_mnemonic_trigger_new$MH,"gtk_mnemonic_trigger_new");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_mnemonic_trigger_new(guint keyval);
     * }
     */
    public static MemorySegment gtk_mnemonic_trigger_new(int keyval) {
        var mh$ = gtk_mnemonic_trigger_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_trigger_get_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_mnemonic_trigger_get_keyval$MH,"gtk_mnemonic_trigger_get_keyval");
    }
    /**
     * {@snippet :
     * guint gtk_mnemonic_trigger_get_keyval(GtkMnemonicTrigger* self);
     * }
     */
    public static int gtk_mnemonic_trigger_get_keyval(MemorySegment self) {
        var mh$ = gtk_mnemonic_trigger_get_keyval$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_alternative_trigger_get_type$MH,"gtk_alternative_trigger_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_alternative_trigger_get_type();
     * }
     */
    public static long gtk_alternative_trigger_get_type() {
        var mh$ = gtk_alternative_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkAlternativeTrigger* GtkAlternativeTrigger_autoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAlternativeTrigger_listautoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAlternativeTrigger_slistautoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAlternativeTrigger_queueautoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkAlternativeTriggerClass* GtkAlternativeTriggerClass_autoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAlternativeTriggerClass_listautoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAlternativeTriggerClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAlternativeTriggerClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkAlternativeTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_alternative_trigger_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_alternative_trigger_new$MH,"gtk_alternative_trigger_new");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_alternative_trigger_new(GtkShortcutTrigger* first, GtkShortcutTrigger* second);
     * }
     */
    public static MemorySegment gtk_alternative_trigger_new(MemorySegment first, MemorySegment second) {
        var mh$ = gtk_alternative_trigger_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_get_first$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_alternative_trigger_get_first$MH,"gtk_alternative_trigger_get_first");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_alternative_trigger_get_first(GtkAlternativeTrigger* self);
     * }
     */
    public static MemorySegment gtk_alternative_trigger_get_first(MemorySegment self) {
        var mh$ = gtk_alternative_trigger_get_first$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_get_second$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_alternative_trigger_get_second$MH,"gtk_alternative_trigger_get_second");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_alternative_trigger_get_second(GtkAlternativeTrigger* self);
     * }
     */
    public static MemorySegment gtk_alternative_trigger_get_second(MemorySegment self) {
        var mh$ = gtk_alternative_trigger_get_second$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_show_uri_full$MH,"gtk_show_uri_full");
    }
    /**
     * {@snippet :
     * void gtk_show_uri_full(GtkWindow* parent, char* uri, guint32 timestamp, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void gtk_show_uri_full(MemorySegment parent, MemorySegment uri, int timestamp, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_show_uri_full$MH();
        try {
            mh$.invokeExact(parent, uri, timestamp, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri_full_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_show_uri_full_finish$MH,"gtk_show_uri_full_finish");
    }
    /**
     * {@snippet :
     * gboolean gtk_show_uri_full_finish(GtkWindow* parent, GAsyncResult* result, GError** error);
     * }
     */
    public static int gtk_show_uri_full_finish(MemorySegment parent, MemorySegment result, MemorySegment error) {
        var mh$ = gtk_show_uri_full_finish$MH();
        try {
            return (int)mh$.invokeExact(parent, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_show_uri$MH,"gtk_show_uri");
    }
    /**
     * {@snippet :
     * void gtk_show_uri(GtkWindow* parent, char* uri, guint32 timestamp);
     * }
     */
    public static void gtk_show_uri(MemorySegment parent, MemorySegment uri, int timestamp) {
        var mh$ = gtk_show_uri$MH();
        try {
            mh$.invokeExact(parent, uri, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_list_item_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_signal_list_item_factory_get_type$MH,"gtk_signal_list_item_factory_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_signal_list_item_factory_get_type();
     * }
     */
    public static long gtk_signal_list_item_factory_get_type() {
        var mh$ = gtk_signal_list_item_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_list_item_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_signal_list_item_factory_new$MH,"gtk_signal_list_item_factory_new");
    }
    /**
     * {@snippet :
     * GtkListItemFactory* gtk_signal_list_item_factory_new();
     * }
     */
    public static MemorySegment gtk_signal_list_item_factory_new() {
        var mh$ = gtk_signal_list_item_factory_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_single_selection_get_type$MH,"gtk_single_selection_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_single_selection_get_type();
     * }
     */
    public static long gtk_single_selection_get_type() {
        var mh$ = gtk_single_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkSingleSelection* GtkSingleSelection_autoptr;
     * }
     */
    public static final OfAddress GtkSingleSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSingleSelection_listautoptr;
     * }
     */
    public static final OfAddress GtkSingleSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSingleSelection_slistautoptr;
     * }
     */
    public static final OfAddress GtkSingleSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSingleSelection_queueautoptr;
     * }
     */
    public static final OfAddress GtkSingleSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkSingleSelectionClass_autoptr;
     * }
     */
    public static final OfAddress GtkSingleSelectionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSingleSelectionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkSingleSelectionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSingleSelectionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkSingleSelectionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSingleSelectionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkSingleSelectionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_single_selection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_single_selection_new$MH,"gtk_single_selection_new");
    }
    /**
     * {@snippet :
     * GtkSingleSelection* gtk_single_selection_new(GListModel* model);
     * }
     */
    public static MemorySegment gtk_single_selection_new(MemorySegment model) {
        var mh$ = gtk_single_selection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_single_selection_get_model$MH,"gtk_single_selection_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_single_selection_get_model(GtkSingleSelection* self);
     * }
     */
    public static MemorySegment gtk_single_selection_get_model(MemorySegment self) {
        var mh$ = gtk_single_selection_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_single_selection_set_model$MH,"gtk_single_selection_set_model");
    }
    /**
     * {@snippet :
     * void gtk_single_selection_set_model(GtkSingleSelection* self, GListModel* model);
     * }
     */
    public static void gtk_single_selection_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_single_selection_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_single_selection_get_selected$MH,"gtk_single_selection_get_selected");
    }
    /**
     * {@snippet :
     * guint gtk_single_selection_get_selected(GtkSingleSelection* self);
     * }
     */
    public static int gtk_single_selection_get_selected(MemorySegment self) {
        var mh$ = gtk_single_selection_get_selected$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_single_selection_set_selected$MH,"gtk_single_selection_set_selected");
    }
    /**
     * {@snippet :
     * void gtk_single_selection_set_selected(GtkSingleSelection* self, guint position);
     * }
     */
    public static void gtk_single_selection_set_selected(MemorySegment self, int position) {
        var mh$ = gtk_single_selection_set_selected$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_selected_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_single_selection_get_selected_item$MH,"gtk_single_selection_get_selected_item");
    }
    /**
     * {@snippet :
     * gpointer gtk_single_selection_get_selected_item(GtkSingleSelection* self);
     * }
     */
    public static MemorySegment gtk_single_selection_get_selected_item(MemorySegment self) {
        var mh$ = gtk_single_selection_get_selected_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_autoselect$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_single_selection_get_autoselect$MH,"gtk_single_selection_get_autoselect");
    }
    /**
     * {@snippet :
     * gboolean gtk_single_selection_get_autoselect(GtkSingleSelection* self);
     * }
     */
    public static int gtk_single_selection_get_autoselect(MemorySegment self) {
        var mh$ = gtk_single_selection_get_autoselect$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_autoselect$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_single_selection_set_autoselect$MH,"gtk_single_selection_set_autoselect");
    }
    /**
     * {@snippet :
     * void gtk_single_selection_set_autoselect(GtkSingleSelection* self, gboolean autoselect);
     * }
     */
    public static void gtk_single_selection_set_autoselect(MemorySegment self, int autoselect) {
        var mh$ = gtk_single_selection_set_autoselect$MH();
        try {
            mh$.invokeExact(self, autoselect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_can_unselect$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_single_selection_get_can_unselect$MH,"gtk_single_selection_get_can_unselect");
    }
    /**
     * {@snippet :
     * gboolean gtk_single_selection_get_can_unselect(GtkSingleSelection* self);
     * }
     */
    public static int gtk_single_selection_get_can_unselect(MemorySegment self) {
        var mh$ = gtk_single_selection_get_can_unselect$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_can_unselect$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_single_selection_set_can_unselect$MH,"gtk_single_selection_set_can_unselect");
    }
    /**
     * {@snippet :
     * void gtk_single_selection_set_can_unselect(GtkSingleSelection* self, gboolean can_unselect);
     * }
     */
    public static void gtk_single_selection_set_can_unselect(MemorySegment self, int can_unselect) {
        var mh$ = gtk_single_selection_set_can_unselect$MH();
        try {
            mh$.invokeExact(self, can_unselect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_slice_list_model_get_type$MH,"gtk_slice_list_model_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_slice_list_model_get_type();
     * }
     */
    public static long gtk_slice_list_model_get_type() {
        var mh$ = gtk_slice_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkSliceListModel* GtkSliceListModel_autoptr;
     * }
     */
    public static final OfAddress GtkSliceListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSliceListModel_listautoptr;
     * }
     */
    public static final OfAddress GtkSliceListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSliceListModel_slistautoptr;
     * }
     */
    public static final OfAddress GtkSliceListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSliceListModel_queueautoptr;
     * }
     */
    public static final OfAddress GtkSliceListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkSliceListModelClass_autoptr;
     * }
     */
    public static final OfAddress GtkSliceListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSliceListModelClass_listautoptr;
     * }
     */
    public static final OfAddress GtkSliceListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSliceListModelClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkSliceListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSliceListModelClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkSliceListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_slice_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_slice_list_model_new$MH,"gtk_slice_list_model_new");
    }
    /**
     * {@snippet :
     * GtkSliceListModel* gtk_slice_list_model_new(GListModel* model, guint offset, guint size);
     * }
     */
    public static MemorySegment gtk_slice_list_model_new(MemorySegment model, int offset, int size) {
        var mh$ = gtk_slice_list_model_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, offset, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_slice_list_model_set_model$MH,"gtk_slice_list_model_set_model");
    }
    /**
     * {@snippet :
     * void gtk_slice_list_model_set_model(GtkSliceListModel* self, GListModel* model);
     * }
     */
    public static void gtk_slice_list_model_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_slice_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_slice_list_model_get_model$MH,"gtk_slice_list_model_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_slice_list_model_get_model(GtkSliceListModel* self);
     * }
     */
    public static MemorySegment gtk_slice_list_model_get_model(MemorySegment self) {
        var mh$ = gtk_slice_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_set_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_slice_list_model_set_offset$MH,"gtk_slice_list_model_set_offset");
    }
    /**
     * {@snippet :
     * void gtk_slice_list_model_set_offset(GtkSliceListModel* self, guint offset);
     * }
     */
    public static void gtk_slice_list_model_set_offset(MemorySegment self, int offset) {
        var mh$ = gtk_slice_list_model_set_offset$MH();
        try {
            mh$.invokeExact(self, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_slice_list_model_get_offset$MH,"gtk_slice_list_model_get_offset");
    }
    /**
     * {@snippet :
     * guint gtk_slice_list_model_get_offset(GtkSliceListModel* self);
     * }
     */
    public static int gtk_slice_list_model_get_offset(MemorySegment self) {
        var mh$ = gtk_slice_list_model_get_offset$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_slice_list_model_set_size$MH,"gtk_slice_list_model_set_size");
    }
    /**
     * {@snippet :
     * void gtk_slice_list_model_set_size(GtkSliceListModel* self, guint size);
     * }
     */
    public static void gtk_slice_list_model_set_size(MemorySegment self, int size) {
        var mh$ = gtk_slice_list_model_set_size$MH();
        try {
            mh$.invokeExact(self, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_slice_list_model_get_size$MH,"gtk_slice_list_model_get_size");
    }
    /**
     * {@snippet :
     * guint gtk_slice_list_model_get_size(GtkSliceListModel* self);
     * }
     */
    public static int gtk_slice_list_model_get_size(MemorySegment self) {
        var mh$ = gtk_slice_list_model_get_size$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GdkSnapshot* GtkSnapshot_autoptr;
     * }
     */
    public static final OfAddress GtkSnapshot_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSnapshot_listautoptr;
     * }
     */
    public static final OfAddress GtkSnapshot_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSnapshot_slistautoptr;
     * }
     */
    public static final OfAddress GtkSnapshot_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSnapshot_queueautoptr;
     * }
     */
    public static final OfAddress GtkSnapshot_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_snapshot_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_snapshot_get_type$MH,"gtk_snapshot_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_snapshot_get_type();
     * }
     */
    public static long gtk_snapshot_get_type() {
        var mh$ = gtk_snapshot_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_snapshot_new$MH,"gtk_snapshot_new");
    }
    /**
     * {@snippet :
     * GtkSnapshot* gtk_snapshot_new();
     * }
     */
    public static MemorySegment gtk_snapshot_new() {
        var mh$ = gtk_snapshot_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_free_to_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_snapshot_free_to_node$MH,"gtk_snapshot_free_to_node");
    }
    /**
     * {@snippet :
     * GskRenderNode* gtk_snapshot_free_to_node(GtkSnapshot* snapshot);
     * }
     */
    public static MemorySegment gtk_snapshot_free_to_node(MemorySegment snapshot) {
        var mh$ = gtk_snapshot_free_to_node$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_free_to_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_snapshot_free_to_paintable$MH,"gtk_snapshot_free_to_paintable");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_snapshot_free_to_paintable(GtkSnapshot* snapshot, const graphene_size_t* size);
     * }
     */
    public static MemorySegment gtk_snapshot_free_to_paintable(MemorySegment snapshot, MemorySegment size) {
        var mh$ = gtk_snapshot_free_to_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(snapshot, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_to_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_snapshot_to_node$MH,"gtk_snapshot_to_node");
    }
    /**
     * {@snippet :
     * GskRenderNode* gtk_snapshot_to_node(GtkSnapshot* snapshot);
     * }
     */
    public static MemorySegment gtk_snapshot_to_node(MemorySegment snapshot) {
        var mh$ = gtk_snapshot_to_node$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_to_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_snapshot_to_paintable$MH,"gtk_snapshot_to_paintable");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_snapshot_to_paintable(GtkSnapshot* snapshot, const graphene_size_t* size);
     * }
     */
    public static MemorySegment gtk_snapshot_to_paintable(MemorySegment snapshot, MemorySegment size) {
        var mh$ = gtk_snapshot_to_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(snapshot, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_debug$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_snapshot_push_debug$MH,"gtk_snapshot_push_debug");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_debug(GtkSnapshot* snapshot, char* message,...);
     * }
     */
    public static void gtk_snapshot_push_debug(MemorySegment snapshot, MemorySegment message, Object... x2) {
        var mh$ = gtk_snapshot_push_debug$MH();
        try {
            mh$.invokeExact(snapshot, message, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_snapshot_push_opacity$MH,"gtk_snapshot_push_opacity");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_opacity(GtkSnapshot* snapshot, double opacity);
     * }
     */
    public static void gtk_snapshot_push_opacity(MemorySegment snapshot, double opacity) {
        var mh$ = gtk_snapshot_push_opacity$MH();
        try {
            mh$.invokeExact(snapshot, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_blur$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_snapshot_push_blur$MH,"gtk_snapshot_push_blur");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_blur(GtkSnapshot* snapshot, double radius);
     * }
     */
    public static void gtk_snapshot_push_blur(MemorySegment snapshot, double radius) {
        var mh$ = gtk_snapshot_push_blur$MH();
        try {
            mh$.invokeExact(snapshot, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_color_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_snapshot_push_color_matrix$MH,"gtk_snapshot_push_color_matrix");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_color_matrix(GtkSnapshot* snapshot, const graphene_matrix_t* color_matrix, const graphene_vec4_t* color_offset);
     * }
     */
    public static void gtk_snapshot_push_color_matrix(MemorySegment snapshot, MemorySegment color_matrix, MemorySegment color_offset) {
        var mh$ = gtk_snapshot_push_color_matrix$MH();
        try {
            mh$.invokeExact(snapshot, color_matrix, color_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_repeat$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_snapshot_push_repeat$MH,"gtk_snapshot_push_repeat");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_repeat(GtkSnapshot* snapshot, const graphene_rect_t* bounds, const graphene_rect_t* child_bounds);
     * }
     */
    public static void gtk_snapshot_push_repeat(MemorySegment snapshot, MemorySegment bounds, MemorySegment child_bounds) {
        var mh$ = gtk_snapshot_push_repeat$MH();
        try {
            mh$.invokeExact(snapshot, bounds, child_bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.gtk_snapshot_push_clip$MH,"gtk_snapshot_push_clip");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_clip(GtkSnapshot* snapshot, const graphene_rect_t* bounds);
     * }
     */
    public static void gtk_snapshot_push_clip(MemorySegment snapshot, MemorySegment bounds) {
        var mh$ = gtk_snapshot_push_clip$MH();
        try {
            mh$.invokeExact(snapshot, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_rounded_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.gtk_snapshot_push_rounded_clip$MH,"gtk_snapshot_push_rounded_clip");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_rounded_clip(GtkSnapshot* snapshot, const GskRoundedRect* bounds);
     * }
     */
    public static void gtk_snapshot_push_rounded_clip(MemorySegment snapshot, MemorySegment bounds) {
        var mh$ = gtk_snapshot_push_rounded_clip$MH();
        try {
            mh$.invokeExact(snapshot, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.gtk_snapshot_push_shadow$MH,"gtk_snapshot_push_shadow");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_shadow(GtkSnapshot* snapshot, const GskShadow* shadow, gsize n_shadows);
     * }
     */
    public static void gtk_snapshot_push_shadow(MemorySegment snapshot, MemorySegment shadow, long n_shadows) {
        var mh$ = gtk_snapshot_push_shadow$MH();
        try {
            mh$.invokeExact(snapshot, shadow, n_shadows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_blend$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.gtk_snapshot_push_blend$MH,"gtk_snapshot_push_blend");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_blend(GtkSnapshot* snapshot, GskBlendMode blend_mode);
     * }
     */
    public static void gtk_snapshot_push_blend(MemorySegment snapshot, int blend_mode) {
        var mh$ = gtk_snapshot_push_blend$MH();
        try {
            mh$.invokeExact(snapshot, blend_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_cross_fade$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.gtk_snapshot_push_cross_fade$MH,"gtk_snapshot_push_cross_fade");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_cross_fade(GtkSnapshot* snapshot, double progress);
     * }
     */
    public static void gtk_snapshot_push_cross_fade(MemorySegment snapshot, double progress) {
        var mh$ = gtk_snapshot_push_cross_fade$MH();
        try {
            mh$.invokeExact(snapshot, progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_gl_shader$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.gtk_snapshot_push_gl_shader$MH,"gtk_snapshot_push_gl_shader");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_push_gl_shader(GtkSnapshot* snapshot, GskGLShader* shader, const graphene_rect_t* bounds, GBytes* take_args);
     * }
     */
    public static void gtk_snapshot_push_gl_shader(MemorySegment snapshot, MemorySegment shader, MemorySegment bounds, MemorySegment take_args) {
        var mh$ = gtk_snapshot_push_gl_shader$MH();
        try {
            mh$.invokeExact(snapshot, shader, bounds, take_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_gl_shader_pop_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.gtk_snapshot_gl_shader_pop_texture$MH,"gtk_snapshot_gl_shader_pop_texture");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_gl_shader_pop_texture(GtkSnapshot* snapshot);
     * }
     */
    public static void gtk_snapshot_gl_shader_pop_texture(MemorySegment snapshot) {
        var mh$ = gtk_snapshot_gl_shader_pop_texture$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.gtk_snapshot_pop$MH,"gtk_snapshot_pop");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_pop(GtkSnapshot* snapshot);
     * }
     */
    public static void gtk_snapshot_pop(MemorySegment snapshot) {
        var mh$ = gtk_snapshot_pop$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.gtk_snapshot_save$MH,"gtk_snapshot_save");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_save(GtkSnapshot* snapshot);
     * }
     */
    public static void gtk_snapshot_save(MemorySegment snapshot) {
        var mh$ = gtk_snapshot_save$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.gtk_snapshot_restore$MH,"gtk_snapshot_restore");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_restore(GtkSnapshot* snapshot);
     * }
     */
    public static void gtk_snapshot_restore(MemorySegment snapshot) {
        var mh$ = gtk_snapshot_restore$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.gtk_snapshot_transform$MH,"gtk_snapshot_transform");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_transform(GtkSnapshot* snapshot, GskTransform* transform);
     * }
     */
    public static void gtk_snapshot_transform(MemorySegment snapshot, MemorySegment transform) {
        var mh$ = gtk_snapshot_transform$MH();
        try {
            mh$.invokeExact(snapshot, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_transform_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.gtk_snapshot_transform_matrix$MH,"gtk_snapshot_transform_matrix");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_transform_matrix(GtkSnapshot* snapshot, const graphene_matrix_t* matrix);
     * }
     */
    public static void gtk_snapshot_transform_matrix(MemorySegment snapshot, MemorySegment matrix) {
        var mh$ = gtk_snapshot_transform_matrix$MH();
        try {
            mh$.invokeExact(snapshot, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.gtk_snapshot_translate$MH,"gtk_snapshot_translate");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_translate(GtkSnapshot* snapshot, const graphene_point_t* point);
     * }
     */
    public static void gtk_snapshot_translate(MemorySegment snapshot, MemorySegment point) {
        var mh$ = gtk_snapshot_translate$MH();
        try {
            mh$.invokeExact(snapshot, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_translate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.gtk_snapshot_translate_3d$MH,"gtk_snapshot_translate_3d");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_translate_3d(GtkSnapshot* snapshot, const graphene_point3d_t* point);
     * }
     */
    public static void gtk_snapshot_translate_3d(MemorySegment snapshot, MemorySegment point) {
        var mh$ = gtk_snapshot_translate_3d$MH();
        try {
            mh$.invokeExact(snapshot, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.gtk_snapshot_rotate$MH,"gtk_snapshot_rotate");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_rotate(GtkSnapshot* snapshot, float angle);
     * }
     */
    public static void gtk_snapshot_rotate(MemorySegment snapshot, float angle) {
        var mh$ = gtk_snapshot_rotate$MH();
        try {
            mh$.invokeExact(snapshot, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_rotate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.gtk_snapshot_rotate_3d$MH,"gtk_snapshot_rotate_3d");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_rotate_3d(GtkSnapshot* snapshot, float angle, const graphene_vec3_t* axis);
     * }
     */
    public static void gtk_snapshot_rotate_3d(MemorySegment snapshot, float angle, MemorySegment axis) {
        var mh$ = gtk_snapshot_rotate_3d$MH();
        try {
            mh$.invokeExact(snapshot, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.gtk_snapshot_scale$MH,"gtk_snapshot_scale");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_scale(GtkSnapshot* snapshot, float factor_x, float factor_y);
     * }
     */
    public static void gtk_snapshot_scale(MemorySegment snapshot, float factor_x, float factor_y) {
        var mh$ = gtk_snapshot_scale$MH();
        try {
            mh$.invokeExact(snapshot, factor_x, factor_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_scale_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.gtk_snapshot_scale_3d$MH,"gtk_snapshot_scale_3d");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_scale_3d(GtkSnapshot* snapshot, float factor_x, float factor_y, float factor_z);
     * }
     */
    public static void gtk_snapshot_scale_3d(MemorySegment snapshot, float factor_x, float factor_y, float factor_z) {
        var mh$ = gtk_snapshot_scale_3d$MH();
        try {
            mh$.invokeExact(snapshot, factor_x, factor_y, factor_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.gtk_snapshot_perspective$MH,"gtk_snapshot_perspective");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_perspective(GtkSnapshot* snapshot, float depth);
     * }
     */
    public static void gtk_snapshot_perspective(MemorySegment snapshot, float depth) {
        var mh$ = gtk_snapshot_perspective$MH();
        try {
            mh$.invokeExact(snapshot, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.gtk_snapshot_append_node$MH,"gtk_snapshot_append_node");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_node(GtkSnapshot* snapshot, GskRenderNode* node);
     * }
     */
    public static void gtk_snapshot_append_node(MemorySegment snapshot, MemorySegment node) {
        var mh$ = gtk_snapshot_append_node$MH();
        try {
            mh$.invokeExact(snapshot, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_cairo$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.gtk_snapshot_append_cairo$MH,"gtk_snapshot_append_cairo");
    }
    /**
     * {@snippet :
     * cairo_t* gtk_snapshot_append_cairo(GtkSnapshot* snapshot, const graphene_rect_t* bounds);
     * }
     */
    public static MemorySegment gtk_snapshot_append_cairo(MemorySegment snapshot, MemorySegment bounds) {
        var mh$ = gtk_snapshot_append_cairo$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(snapshot, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.gtk_snapshot_append_texture$MH,"gtk_snapshot_append_texture");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_texture(GtkSnapshot* snapshot, GdkTexture* texture, const graphene_rect_t* bounds);
     * }
     */
    public static void gtk_snapshot_append_texture(MemorySegment snapshot, MemorySegment texture, MemorySegment bounds) {
        var mh$ = gtk_snapshot_append_texture$MH();
        try {
            mh$.invokeExact(snapshot, texture, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.gtk_snapshot_append_color$MH,"gtk_snapshot_append_color");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_color(GtkSnapshot* snapshot, const GdkRGBA* color, const graphene_rect_t* bounds);
     * }
     */
    public static void gtk_snapshot_append_color(MemorySegment snapshot, MemorySegment color, MemorySegment bounds) {
        var mh$ = gtk_snapshot_append_color$MH();
        try {
            mh$.invokeExact(snapshot, color, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_linear_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.gtk_snapshot_append_linear_gradient$MH,"gtk_snapshot_append_linear_gradient");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_linear_gradient(GtkSnapshot* snapshot, const graphene_rect_t* bounds, const graphene_point_t* start_point, const graphene_point_t* end_point, const GskColorStop* stops, gsize n_stops);
     * }
     */
    public static void gtk_snapshot_append_linear_gradient(MemorySegment snapshot, MemorySegment bounds, MemorySegment start_point, MemorySegment end_point, MemorySegment stops, long n_stops) {
        var mh$ = gtk_snapshot_append_linear_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, start_point, end_point, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_repeating_linear_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.gtk_snapshot_append_repeating_linear_gradient$MH,"gtk_snapshot_append_repeating_linear_gradient");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_repeating_linear_gradient(GtkSnapshot* snapshot, const graphene_rect_t* bounds, const graphene_point_t* start_point, const graphene_point_t* end_point, const GskColorStop* stops, gsize n_stops);
     * }
     */
    public static void gtk_snapshot_append_repeating_linear_gradient(MemorySegment snapshot, MemorySegment bounds, MemorySegment start_point, MemorySegment end_point, MemorySegment stops, long n_stops) {
        var mh$ = gtk_snapshot_append_repeating_linear_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, start_point, end_point, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_radial_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.gtk_snapshot_append_radial_gradient$MH,"gtk_snapshot_append_radial_gradient");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_radial_gradient(GtkSnapshot* snapshot, const graphene_rect_t* bounds, const graphene_point_t* center, float hradius, float vradius, float start, float end, const GskColorStop* stops, gsize n_stops);
     * }
     */
    public static void gtk_snapshot_append_radial_gradient(MemorySegment snapshot, MemorySegment bounds, MemorySegment center, float hradius, float vradius, float start, float end, MemorySegment stops, long n_stops) {
        var mh$ = gtk_snapshot_append_radial_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, center, hradius, vradius, start, end, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_repeating_radial_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.gtk_snapshot_append_repeating_radial_gradient$MH,"gtk_snapshot_append_repeating_radial_gradient");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_repeating_radial_gradient(GtkSnapshot* snapshot, const graphene_rect_t* bounds, const graphene_point_t* center, float hradius, float vradius, float start, float end, const GskColorStop* stops, gsize n_stops);
     * }
     */
    public static void gtk_snapshot_append_repeating_radial_gradient(MemorySegment snapshot, MemorySegment bounds, MemorySegment center, float hradius, float vradius, float start, float end, MemorySegment stops, long n_stops) {
        var mh$ = gtk_snapshot_append_repeating_radial_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, center, hradius, vradius, start, end, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_conic_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.gtk_snapshot_append_conic_gradient$MH,"gtk_snapshot_append_conic_gradient");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_conic_gradient(GtkSnapshot* snapshot, const graphene_rect_t* bounds, const graphene_point_t* center, float rotation, const GskColorStop* stops, gsize n_stops);
     * }
     */
    public static void gtk_snapshot_append_conic_gradient(MemorySegment snapshot, MemorySegment bounds, MemorySegment center, float rotation, MemorySegment stops, long n_stops) {
        var mh$ = gtk_snapshot_append_conic_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, center, rotation, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_border$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.gtk_snapshot_append_border$MH,"gtk_snapshot_append_border");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_border(GtkSnapshot* snapshot, const GskRoundedRect* outline, float border_width[4], const GdkRGBA border_color[4]);
     * }
     */
    public static void gtk_snapshot_append_border(MemorySegment snapshot, MemorySegment outline, MemorySegment border_width, MemorySegment border_color) {
        var mh$ = gtk_snapshot_append_border$MH();
        try {
            mh$.invokeExact(snapshot, outline, border_width, border_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_inset_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.gtk_snapshot_append_inset_shadow$MH,"gtk_snapshot_append_inset_shadow");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_inset_shadow(GtkSnapshot* snapshot, const GskRoundedRect* outline, const GdkRGBA* color, float dx, float dy, float spread, float blur_radius);
     * }
     */
    public static void gtk_snapshot_append_inset_shadow(MemorySegment snapshot, MemorySegment outline, MemorySegment color, float dx, float dy, float spread, float blur_radius) {
        var mh$ = gtk_snapshot_append_inset_shadow$MH();
        try {
            mh$.invokeExact(snapshot, outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_outset_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.gtk_snapshot_append_outset_shadow$MH,"gtk_snapshot_append_outset_shadow");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_outset_shadow(GtkSnapshot* snapshot, const GskRoundedRect* outline, const GdkRGBA* color, float dx, float dy, float spread, float blur_radius);
     * }
     */
    public static void gtk_snapshot_append_outset_shadow(MemorySegment snapshot, MemorySegment outline, MemorySegment color, float dx, float dy, float spread, float blur_radius) {
        var mh$ = gtk_snapshot_append_outset_shadow$MH();
        try {
            mh$.invokeExact(snapshot, outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.gtk_snapshot_append_layout$MH,"gtk_snapshot_append_layout");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_append_layout(GtkSnapshot* snapshot, PangoLayout* layout, const GdkRGBA* color);
     * }
     */
    public static void gtk_snapshot_append_layout(MemorySegment snapshot, MemorySegment layout, MemorySegment color) {
        var mh$ = gtk_snapshot_append_layout$MH();
        try {
            mh$.invokeExact(snapshot, layout, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_background$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.gtk_snapshot_render_background$MH,"gtk_snapshot_render_background");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_render_background(GtkSnapshot* snapshot, GtkStyleContext* context, double x, double y, double width, double height);
     * }
     */
    public static void gtk_snapshot_render_background(MemorySegment snapshot, MemorySegment context, double x, double y, double width, double height) {
        var mh$ = gtk_snapshot_render_background$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.gtk_snapshot_render_frame$MH,"gtk_snapshot_render_frame");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_render_frame(GtkSnapshot* snapshot, GtkStyleContext* context, double x, double y, double width, double height);
     * }
     */
    public static void gtk_snapshot_render_frame(MemorySegment snapshot, MemorySegment context, double x, double y, double width, double height) {
        var mh$ = gtk_snapshot_render_frame$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.gtk_snapshot_render_focus$MH,"gtk_snapshot_render_focus");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_render_focus(GtkSnapshot* snapshot, GtkStyleContext* context, double x, double y, double width, double height);
     * }
     */
    public static void gtk_snapshot_render_focus(MemorySegment snapshot, MemorySegment context, double x, double y, double width, double height) {
        var mh$ = gtk_snapshot_render_focus$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.gtk_snapshot_render_layout$MH,"gtk_snapshot_render_layout");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_render_layout(GtkSnapshot* snapshot, GtkStyleContext* context, double x, double y, PangoLayout* layout);
     * }
     */
    public static void gtk_snapshot_render_layout(MemorySegment snapshot, MemorySegment context, double x, double y, MemorySegment layout) {
        var mh$ = gtk_snapshot_render_layout$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_insertion_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.gtk_snapshot_render_insertion_cursor$MH,"gtk_snapshot_render_insertion_cursor");
    }
    /**
     * {@snippet :
     * void gtk_snapshot_render_insertion_cursor(GtkSnapshot* snapshot, GtkStyleContext* context, double x, double y, PangoLayout* layout, int index, PangoDirection direction);
     * }
     */
    public static void gtk_snapshot_render_insertion_cursor(MemorySegment snapshot, MemorySegment context, double x, double y, MemorySegment layout, int index, int direction) {
        var mh$ = gtk_snapshot_render_insertion_cursor$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, layout, index, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_NONE = 0;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_CROSSFADE = 1;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_CROSSFADE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT = 2;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT = 3;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_SLIDE_UP = 4;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_UP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN = 5;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT = 6;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN = 7;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_UP = 8;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_UP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_DOWN = 9;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_DOWN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_LEFT = 10;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_LEFT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_RIGHT = 11;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_RIGHT() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_UNDER_UP = 12;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_UP() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_UNDER_DOWN = 13;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_DOWN() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_UNDER_LEFT = 14;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_LEFT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT = 15;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN = 16;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP = 17;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT = 18;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT = 19;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT = 20;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_ROTATE_RIGHT = 21;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_ROTATE_RIGHT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum .GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT_RIGHT = 22;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT_RIGHT() {
        return (int)22L;
    }
    public static MethodHandle gtk_stack_page_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.gtk_stack_page_get_type$MH,"gtk_stack_page_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_stack_page_get_type();
     * }
     */
    public static long gtk_stack_page_get_type() {
        var mh$ = gtk_stack_page_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.gtk_stack_page_get_child$MH,"gtk_stack_page_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_stack_page_get_child(GtkStackPage* self);
     * }
     */
    public static MemorySegment gtk_stack_page_get_child(MemorySegment self) {
        var mh$ = gtk_stack_page_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.gtk_stack_page_get_visible$MH,"gtk_stack_page_get_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_page_get_visible(GtkStackPage* self);
     * }
     */
    public static int gtk_stack_page_get_visible(MemorySegment self) {
        var mh$ = gtk_stack_page_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.gtk_stack_page_set_visible$MH,"gtk_stack_page_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_stack_page_set_visible(GtkStackPage* self, gboolean visible);
     * }
     */
    public static void gtk_stack_page_set_visible(MemorySegment self, int visible) {
        var mh$ = gtk_stack_page_set_visible$MH();
        try {
            mh$.invokeExact(self, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_needs_attention$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.gtk_stack_page_get_needs_attention$MH,"gtk_stack_page_get_needs_attention");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_page_get_needs_attention(GtkStackPage* self);
     * }
     */
    public static int gtk_stack_page_get_needs_attention(MemorySegment self) {
        var mh$ = gtk_stack_page_get_needs_attention$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_needs_attention$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.gtk_stack_page_set_needs_attention$MH,"gtk_stack_page_set_needs_attention");
    }
    /**
     * {@snippet :
     * void gtk_stack_page_set_needs_attention(GtkStackPage* self, gboolean setting);
     * }
     */
    public static void gtk_stack_page_set_needs_attention(MemorySegment self, int setting) {
        var mh$ = gtk_stack_page_set_needs_attention$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.gtk_stack_page_get_use_underline$MH,"gtk_stack_page_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_page_get_use_underline(GtkStackPage* self);
     * }
     */
    public static int gtk_stack_page_get_use_underline(MemorySegment self) {
        var mh$ = gtk_stack_page_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.gtk_stack_page_set_use_underline$MH,"gtk_stack_page_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_stack_page_set_use_underline(GtkStackPage* self, gboolean setting);
     * }
     */
    public static void gtk_stack_page_set_use_underline(MemorySegment self, int setting) {
        var mh$ = gtk_stack_page_set_use_underline$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.gtk_stack_page_get_name$MH,"gtk_stack_page_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_stack_page_get_name(GtkStackPage* self);
     * }
     */
    public static MemorySegment gtk_stack_page_get_name(MemorySegment self) {
        var mh$ = gtk_stack_page_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.gtk_stack_page_set_name$MH,"gtk_stack_page_set_name");
    }
    /**
     * {@snippet :
     * void gtk_stack_page_set_name(GtkStackPage* self, char* setting);
     * }
     */
    public static void gtk_stack_page_set_name(MemorySegment self, MemorySegment setting) {
        var mh$ = gtk_stack_page_set_name$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.gtk_stack_page_get_title$MH,"gtk_stack_page_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_stack_page_get_title(GtkStackPage* self);
     * }
     */
    public static MemorySegment gtk_stack_page_get_title(MemorySegment self) {
        var mh$ = gtk_stack_page_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.gtk_stack_page_set_title$MH,"gtk_stack_page_set_title");
    }
    /**
     * {@snippet :
     * void gtk_stack_page_set_title(GtkStackPage* self, char* setting);
     * }
     */
    public static void gtk_stack_page_set_title(MemorySegment self, MemorySegment setting) {
        var mh$ = gtk_stack_page_set_title$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.gtk_stack_page_get_icon_name$MH,"gtk_stack_page_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_stack_page_get_icon_name(GtkStackPage* self);
     * }
     */
    public static MemorySegment gtk_stack_page_get_icon_name(MemorySegment self) {
        var mh$ = gtk_stack_page_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.gtk_stack_page_set_icon_name$MH,"gtk_stack_page_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_stack_page_set_icon_name(GtkStackPage* self, char* setting);
     * }
     */
    public static void gtk_stack_page_set_icon_name(MemorySegment self, MemorySegment setting) {
        var mh$ = gtk_stack_page_set_icon_name$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.gtk_stack_get_type$MH,"gtk_stack_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_stack_get_type();
     * }
     */
    public static long gtk_stack_get_type() {
        var mh$ = gtk_stack_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.gtk_stack_new$MH,"gtk_stack_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_stack_new();
     * }
     */
    public static MemorySegment gtk_stack_new() {
        var mh$ = gtk_stack_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.gtk_stack_add_child$MH,"gtk_stack_add_child");
    }
    /**
     * {@snippet :
     * GtkStackPage* gtk_stack_add_child(GtkStack* stack, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_stack_add_child(MemorySegment stack, MemorySegment child) {
        var mh$ = gtk_stack_add_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_named$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.gtk_stack_add_named$MH,"gtk_stack_add_named");
    }
    /**
     * {@snippet :
     * GtkStackPage* gtk_stack_add_named(GtkStack* stack, GtkWidget* child, char* name);
     * }
     */
    public static MemorySegment gtk_stack_add_named(MemorySegment stack, MemorySegment child, MemorySegment name) {
        var mh$ = gtk_stack_add_named$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack, child, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_titled$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.gtk_stack_add_titled$MH,"gtk_stack_add_titled");
    }
    /**
     * {@snippet :
     * GtkStackPage* gtk_stack_add_titled(GtkStack* stack, GtkWidget* child, char* name, char* title);
     * }
     */
    public static MemorySegment gtk_stack_add_titled(MemorySegment stack, MemorySegment child, MemorySegment name, MemorySegment title) {
        var mh$ = gtk_stack_add_titled$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack, child, name, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.gtk_stack_remove$MH,"gtk_stack_remove");
    }
    /**
     * {@snippet :
     * void gtk_stack_remove(GtkStack* stack, GtkWidget* child);
     * }
     */
    public static void gtk_stack_remove(MemorySegment stack, MemorySegment child) {
        var mh$ = gtk_stack_remove$MH();
        try {
            mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.gtk_stack_get_page$MH,"gtk_stack_get_page");
    }
    /**
     * {@snippet :
     * GtkStackPage* gtk_stack_get_page(GtkStack* stack, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_stack_get_page(MemorySegment stack, MemorySegment child) {
        var mh$ = gtk_stack_get_page$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_child_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.gtk_stack_get_child_by_name$MH,"gtk_stack_get_child_by_name");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_stack_get_child_by_name(GtkStack* stack, char* name);
     * }
     */
    public static MemorySegment gtk_stack_get_child_by_name(MemorySegment stack, MemorySegment name) {
        var mh$ = gtk_stack_get_child_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.gtk_stack_set_visible_child$MH,"gtk_stack_set_visible_child");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_visible_child(GtkStack* stack, GtkWidget* child);
     * }
     */
    public static void gtk_stack_set_visible_child(MemorySegment stack, MemorySegment child) {
        var mh$ = gtk_stack_set_visible_child$MH();
        try {
            mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_visible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.gtk_stack_get_visible_child$MH,"gtk_stack_get_visible_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_stack_get_visible_child(GtkStack* stack);
     * }
     */
    public static MemorySegment gtk_stack_get_visible_child(MemorySegment stack) {
        var mh$ = gtk_stack_get_visible_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.gtk_stack_set_visible_child_name$MH,"gtk_stack_set_visible_child_name");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_visible_child_name(GtkStack* stack, char* name);
     * }
     */
    public static void gtk_stack_set_visible_child_name(MemorySegment stack, MemorySegment name) {
        var mh$ = gtk_stack_set_visible_child_name$MH();
        try {
            mh$.invokeExact(stack, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_visible_child_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.gtk_stack_get_visible_child_name$MH,"gtk_stack_get_visible_child_name");
    }
    /**
     * {@snippet :
     * char* gtk_stack_get_visible_child_name(GtkStack* stack);
     * }
     */
    public static MemorySegment gtk_stack_get_visible_child_name(MemorySegment stack) {
        var mh$ = gtk_stack_get_visible_child_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.gtk_stack_set_visible_child_full$MH,"gtk_stack_set_visible_child_full");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_visible_child_full(GtkStack* stack, char* name, GtkStackTransitionType transition);
     * }
     */
    public static void gtk_stack_set_visible_child_full(MemorySegment stack, MemorySegment name, int transition) {
        var mh$ = gtk_stack_set_visible_child_full$MH();
        try {
            mh$.invokeExact(stack, name, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_hhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.gtk_stack_set_hhomogeneous$MH,"gtk_stack_set_hhomogeneous");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_hhomogeneous(GtkStack* stack, gboolean hhomogeneous);
     * }
     */
    public static void gtk_stack_set_hhomogeneous(MemorySegment stack, int hhomogeneous) {
        var mh$ = gtk_stack_set_hhomogeneous$MH();
        try {
            mh$.invokeExact(stack, hhomogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_hhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.gtk_stack_get_hhomogeneous$MH,"gtk_stack_get_hhomogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_get_hhomogeneous(GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_hhomogeneous(MemorySegment stack) {
        var mh$ = gtk_stack_get_hhomogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_vhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.gtk_stack_set_vhomogeneous$MH,"gtk_stack_set_vhomogeneous");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_vhomogeneous(GtkStack* stack, gboolean vhomogeneous);
     * }
     */
    public static void gtk_stack_set_vhomogeneous(MemorySegment stack, int vhomogeneous) {
        var mh$ = gtk_stack_set_vhomogeneous$MH();
        try {
            mh$.invokeExact(stack, vhomogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_vhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.gtk_stack_get_vhomogeneous$MH,"gtk_stack_get_vhomogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_get_vhomogeneous(GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_vhomogeneous(MemorySegment stack) {
        var mh$ = gtk_stack_get_vhomogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.gtk_stack_set_transition_duration$MH,"gtk_stack_set_transition_duration");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_transition_duration(GtkStack* stack, guint duration);
     * }
     */
    public static void gtk_stack_set_transition_duration(MemorySegment stack, int duration) {
        var mh$ = gtk_stack_set_transition_duration$MH();
        try {
            mh$.invokeExact(stack, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.gtk_stack_get_transition_duration$MH,"gtk_stack_get_transition_duration");
    }
    /**
     * {@snippet :
     * guint gtk_stack_get_transition_duration(GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_transition_duration(MemorySegment stack) {
        var mh$ = gtk_stack_get_transition_duration$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.gtk_stack_set_transition_type$MH,"gtk_stack_set_transition_type");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_transition_type(GtkStack* stack, GtkStackTransitionType transition);
     * }
     */
    public static void gtk_stack_set_transition_type(MemorySegment stack, int transition) {
        var mh$ = gtk_stack_set_transition_type$MH();
        try {
            mh$.invokeExact(stack, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.gtk_stack_get_transition_type$MH,"gtk_stack_get_transition_type");
    }
    /**
     * {@snippet :
     * GtkStackTransitionType gtk_stack_get_transition_type(GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_transition_type(MemorySegment stack) {
        var mh$ = gtk_stack_get_transition_type$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_running$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.gtk_stack_get_transition_running$MH,"gtk_stack_get_transition_running");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_get_transition_running(GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_transition_running(MemorySegment stack) {
        var mh$ = gtk_stack_get_transition_running$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_interpolate_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.gtk_stack_set_interpolate_size$MH,"gtk_stack_set_interpolate_size");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_interpolate_size(GtkStack* stack, gboolean interpolate_size);
     * }
     */
    public static void gtk_stack_set_interpolate_size(MemorySegment stack, int interpolate_size) {
        var mh$ = gtk_stack_set_interpolate_size$MH();
        try {
            mh$.invokeExact(stack, interpolate_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_interpolate_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.gtk_stack_get_interpolate_size$MH,"gtk_stack_get_interpolate_size");
    }
    /**
     * {@snippet :
     * gboolean gtk_stack_get_interpolate_size(GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_interpolate_size(MemorySegment stack) {
        var mh$ = gtk_stack_get_interpolate_size$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.gtk_stack_get_pages$MH,"gtk_stack_get_pages");
    }
    /**
     * {@snippet :
     * GtkSelectionModel* gtk_stack_get_pages(GtkStack* stack);
     * }
     */
    public static MemorySegment gtk_stack_get_pages(MemorySegment stack) {
        var mh$ = gtk_stack_get_pages$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.gtk_stack_sidebar_get_type$MH,"gtk_stack_sidebar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_stack_sidebar_get_type();
     * }
     */
    public static long gtk_stack_sidebar_get_type() {
        var mh$ = gtk_stack_sidebar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.gtk_stack_sidebar_new$MH,"gtk_stack_sidebar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_stack_sidebar_new();
     * }
     */
    public static MemorySegment gtk_stack_sidebar_new() {
        var mh$ = gtk_stack_sidebar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_set_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.gtk_stack_sidebar_set_stack$MH,"gtk_stack_sidebar_set_stack");
    }
    /**
     * {@snippet :
     * void gtk_stack_sidebar_set_stack(GtkStackSidebar* self, GtkStack* stack);
     * }
     */
    public static void gtk_stack_sidebar_set_stack(MemorySegment self, MemorySegment stack) {
        var mh$ = gtk_stack_sidebar_set_stack$MH();
        try {
            mh$.invokeExact(self, stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_get_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.gtk_stack_sidebar_get_stack$MH,"gtk_stack_sidebar_get_stack");
    }
    /**
     * {@snippet :
     * GtkStack* gtk_stack_sidebar_get_stack(GtkStackSidebar* self);
     * }
     */
    public static MemorySegment gtk_stack_sidebar_get_stack(MemorySegment self) {
        var mh$ = gtk_stack_sidebar_get_stack$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.gtk_size_group_get_type$MH,"gtk_size_group_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_size_group_get_type();
     * }
     */
    public static long gtk_size_group_get_type() {
        var mh$ = gtk_size_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.gtk_size_group_new$MH,"gtk_size_group_new");
    }
    /**
     * {@snippet :
     * GtkSizeGroup* gtk_size_group_new(GtkSizeGroupMode mode);
     * }
     */
    public static MemorySegment gtk_size_group_new(int mode) {
        var mh$ = gtk_size_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.gtk_size_group_set_mode$MH,"gtk_size_group_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_size_group_set_mode(GtkSizeGroup* size_group, GtkSizeGroupMode mode);
     * }
     */
    public static void gtk_size_group_set_mode(MemorySegment size_group, int mode) {
        var mh$ = gtk_size_group_set_mode$MH();
        try {
            mh$.invokeExact(size_group, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.gtk_size_group_get_mode$MH,"gtk_size_group_get_mode");
    }
    /**
     * {@snippet :
     * GtkSizeGroupMode gtk_size_group_get_mode(GtkSizeGroup* size_group);
     * }
     */
    public static int gtk_size_group_get_mode(MemorySegment size_group) {
        var mh$ = gtk_size_group_get_mode$MH();
        try {
            return (int)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_add_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.gtk_size_group_add_widget$MH,"gtk_size_group_add_widget");
    }
    /**
     * {@snippet :
     * void gtk_size_group_add_widget(GtkSizeGroup* size_group, GtkWidget* widget);
     * }
     */
    public static void gtk_size_group_add_widget(MemorySegment size_group, MemorySegment widget) {
        var mh$ = gtk_size_group_add_widget$MH();
        try {
            mh$.invokeExact(size_group, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_remove_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.gtk_size_group_remove_widget$MH,"gtk_size_group_remove_widget");
    }
    /**
     * {@snippet :
     * void gtk_size_group_remove_widget(GtkSizeGroup* size_group, GtkWidget* widget);
     * }
     */
    public static void gtk_size_group_remove_widget(MemorySegment size_group, MemorySegment widget) {
        var mh$ = gtk_size_group_remove_widget$MH();
        try {
            mh$.invokeExact(size_group, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.gtk_size_group_get_widgets$MH,"gtk_size_group_get_widgets");
    }
    /**
     * {@snippet :
     * GSList* gtk_size_group_get_widgets(GtkSizeGroup* size_group);
     * }
     */
    public static MemorySegment gtk_size_group_get_widgets(MemorySegment size_group) {
        var mh$ = gtk_size_group_get_widgets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_distribute_natural_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.gtk_distribute_natural_allocation$MH,"gtk_distribute_natural_allocation");
    }
    /**
     * {@snippet :
     * int gtk_distribute_natural_allocation(int extra_space, guint n_requested_sizes, GtkRequestedSize* sizes);
     * }
     */
    public static int gtk_distribute_natural_allocation(int extra_space, int n_requested_sizes, MemorySegment sizes) {
        var mh$ = gtk_distribute_natural_allocation$MH();
        try {
            return (int)mh$.invokeExact(extra_space, n_requested_sizes, sizes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_UPDATE_ALWAYS = 0;
     * }
     */
    public static int GTK_UPDATE_ALWAYS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_UPDATE_IF_VALID = 1;
     * }
     */
    public static int GTK_UPDATE_IF_VALID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_STEP_FORWARD = 0;
     * }
     */
    public static int GTK_SPIN_STEP_FORWARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_STEP_BACKWARD = 1;
     * }
     */
    public static int GTK_SPIN_STEP_BACKWARD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_PAGE_FORWARD = 2;
     * }
     */
    public static int GTK_SPIN_PAGE_FORWARD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_PAGE_BACKWARD = 3;
     * }
     */
    public static int GTK_SPIN_PAGE_BACKWARD() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_HOME = 4;
     * }
     */
    public static int GTK_SPIN_HOME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_END = 5;
     * }
     */
    public static int GTK_SPIN_END() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_SPIN_USER_DEFINED = 6;
     * }
     */
    public static int GTK_SPIN_USER_DEFINED() {
        return (int)6L;
    }
    public static MethodHandle gtk_spin_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.gtk_spin_button_get_type$MH,"gtk_spin_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_spin_button_get_type();
     * }
     */
    public static long gtk_spin_button_get_type() {
        var mh$ = gtk_spin_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_configure$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.gtk_spin_button_configure$MH,"gtk_spin_button_configure");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_configure(GtkSpinButton* spin_button, GtkAdjustment* adjustment, double climb_rate, guint digits);
     * }
     */
    public static void gtk_spin_button_configure(MemorySegment spin_button, MemorySegment adjustment, double climb_rate, int digits) {
        var mh$ = gtk_spin_button_configure$MH();
        try {
            mh$.invokeExact(spin_button, adjustment, climb_rate, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.gtk_spin_button_new$MH,"gtk_spin_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_spin_button_new(GtkAdjustment* adjustment, double climb_rate, guint digits);
     * }
     */
    public static MemorySegment gtk_spin_button_new(MemorySegment adjustment, double climb_rate, int digits) {
        var mh$ = gtk_spin_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(adjustment, climb_rate, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_new_with_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.gtk_spin_button_new_with_range$MH,"gtk_spin_button_new_with_range");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_spin_button_new_with_range(double min, double max, double step);
     * }
     */
    public static MemorySegment gtk_spin_button_new_with_range(double min, double max, double step) {
        var mh$ = gtk_spin_button_new_with_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(min, max, step);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.gtk_spin_button_set_adjustment$MH,"gtk_spin_button_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_adjustment(GtkSpinButton* spin_button, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_spin_button_set_adjustment(MemorySegment spin_button, MemorySegment adjustment) {
        var mh$ = gtk_spin_button_set_adjustment$MH();
        try {
            mh$.invokeExact(spin_button, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.gtk_spin_button_get_adjustment$MH,"gtk_spin_button_get_adjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_spin_button_get_adjustment(GtkSpinButton* spin_button);
     * }
     */
    public static MemorySegment gtk_spin_button_get_adjustment(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.gtk_spin_button_set_digits$MH,"gtk_spin_button_set_digits");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_digits(GtkSpinButton* spin_button, guint digits);
     * }
     */
    public static void gtk_spin_button_set_digits(MemorySegment spin_button, int digits) {
        var mh$ = gtk_spin_button_set_digits$MH();
        try {
            mh$.invokeExact(spin_button, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.gtk_spin_button_get_digits$MH,"gtk_spin_button_get_digits");
    }
    /**
     * {@snippet :
     * guint gtk_spin_button_get_digits(GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_digits(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_digits$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.gtk_spin_button_set_increments$MH,"gtk_spin_button_set_increments");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_increments(GtkSpinButton* spin_button, double step, double page);
     * }
     */
    public static void gtk_spin_button_set_increments(MemorySegment spin_button, double step, double page) {
        var mh$ = gtk_spin_button_set_increments$MH();
        try {
            mh$.invokeExact(spin_button, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.gtk_spin_button_get_increments$MH,"gtk_spin_button_get_increments");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_get_increments(GtkSpinButton* spin_button, double* step, double* page);
     * }
     */
    public static void gtk_spin_button_get_increments(MemorySegment spin_button, MemorySegment step, MemorySegment page) {
        var mh$ = gtk_spin_button_get_increments$MH();
        try {
            mh$.invokeExact(spin_button, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.gtk_spin_button_set_range$MH,"gtk_spin_button_set_range");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_range(GtkSpinButton* spin_button, double min, double max);
     * }
     */
    public static void gtk_spin_button_set_range(MemorySegment spin_button, double min, double max) {
        var mh$ = gtk_spin_button_set_range$MH();
        try {
            mh$.invokeExact(spin_button, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.gtk_spin_button_get_range$MH,"gtk_spin_button_get_range");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_get_range(GtkSpinButton* spin_button, double* min, double* max);
     * }
     */
    public static void gtk_spin_button_get_range(MemorySegment spin_button, MemorySegment min, MemorySegment max) {
        var mh$ = gtk_spin_button_get_range$MH();
        try {
            mh$.invokeExact(spin_button, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.gtk_spin_button_get_value$MH,"gtk_spin_button_get_value");
    }
    /**
     * {@snippet :
     * double gtk_spin_button_get_value(GtkSpinButton* spin_button);
     * }
     */
    public static double gtk_spin_button_get_value(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_value$MH();
        try {
            return (double)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_value_as_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.gtk_spin_button_get_value_as_int$MH,"gtk_spin_button_get_value_as_int");
    }
    /**
     * {@snippet :
     * int gtk_spin_button_get_value_as_int(GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_value_as_int(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_value_as_int$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.gtk_spin_button_set_value$MH,"gtk_spin_button_set_value");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_value(GtkSpinButton* spin_button, double value);
     * }
     */
    public static void gtk_spin_button_set_value(MemorySegment spin_button, double value) {
        var mh$ = gtk_spin_button_set_value$MH();
        try {
            mh$.invokeExact(spin_button, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_update_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.gtk_spin_button_set_update_policy$MH,"gtk_spin_button_set_update_policy");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_update_policy(GtkSpinButton* spin_button, GtkSpinButtonUpdatePolicy policy);
     * }
     */
    public static void gtk_spin_button_set_update_policy(MemorySegment spin_button, int policy) {
        var mh$ = gtk_spin_button_set_update_policy$MH();
        try {
            mh$.invokeExact(spin_button, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_update_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.gtk_spin_button_get_update_policy$MH,"gtk_spin_button_get_update_policy");
    }
    /**
     * {@snippet :
     * GtkSpinButtonUpdatePolicy gtk_spin_button_get_update_policy(GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_update_policy(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_update_policy$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_numeric$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.gtk_spin_button_set_numeric$MH,"gtk_spin_button_set_numeric");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_numeric(GtkSpinButton* spin_button, gboolean numeric);
     * }
     */
    public static void gtk_spin_button_set_numeric(MemorySegment spin_button, int numeric) {
        var mh$ = gtk_spin_button_set_numeric$MH();
        try {
            mh$.invokeExact(spin_button, numeric);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_numeric$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.gtk_spin_button_get_numeric$MH,"gtk_spin_button_get_numeric");
    }
    /**
     * {@snippet :
     * gboolean gtk_spin_button_get_numeric(GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_numeric(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_numeric$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_spin$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.gtk_spin_button_spin$MH,"gtk_spin_button_spin");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_spin(GtkSpinButton* spin_button, GtkSpinType direction, double increment);
     * }
     */
    public static void gtk_spin_button_spin(MemorySegment spin_button, int direction, double increment) {
        var mh$ = gtk_spin_button_spin$MH();
        try {
            mh$.invokeExact(spin_button, direction, increment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.gtk_spin_button_set_wrap$MH,"gtk_spin_button_set_wrap");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_wrap(GtkSpinButton* spin_button, gboolean wrap);
     * }
     */
    public static void gtk_spin_button_set_wrap(MemorySegment spin_button, int wrap) {
        var mh$ = gtk_spin_button_set_wrap$MH();
        try {
            mh$.invokeExact(spin_button, wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.gtk_spin_button_get_wrap$MH,"gtk_spin_button_get_wrap");
    }
    /**
     * {@snippet :
     * gboolean gtk_spin_button_get_wrap(GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_wrap(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_wrap$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_snap_to_ticks$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.gtk_spin_button_set_snap_to_ticks$MH,"gtk_spin_button_set_snap_to_ticks");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_snap_to_ticks(GtkSpinButton* spin_button, gboolean snap_to_ticks);
     * }
     */
    public static void gtk_spin_button_set_snap_to_ticks(MemorySegment spin_button, int snap_to_ticks) {
        var mh$ = gtk_spin_button_set_snap_to_ticks$MH();
        try {
            mh$.invokeExact(spin_button, snap_to_ticks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_snap_to_ticks$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.gtk_spin_button_get_snap_to_ticks$MH,"gtk_spin_button_get_snap_to_ticks");
    }
    /**
     * {@snippet :
     * gboolean gtk_spin_button_get_snap_to_ticks(GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_snap_to_ticks(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_snap_to_ticks$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_climb_rate$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.gtk_spin_button_set_climb_rate$MH,"gtk_spin_button_set_climb_rate");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_climb_rate(GtkSpinButton* spin_button, double climb_rate);
     * }
     */
    public static void gtk_spin_button_set_climb_rate(MemorySegment spin_button, double climb_rate) {
        var mh$ = gtk_spin_button_set_climb_rate$MH();
        try {
            mh$.invokeExact(spin_button, climb_rate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_climb_rate$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.gtk_spin_button_get_climb_rate$MH,"gtk_spin_button_get_climb_rate");
    }
    /**
     * {@snippet :
     * double gtk_spin_button_get_climb_rate(GtkSpinButton* spin_button);
     * }
     */
    public static double gtk_spin_button_get_climb_rate(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_climb_rate$MH();
        try {
            return (double)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_update$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.gtk_spin_button_update$MH,"gtk_spin_button_update");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_update(GtkSpinButton* spin_button);
     * }
     */
    public static void gtk_spin_button_update(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_update$MH();
        try {
            mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.gtk_spinner_get_type$MH,"gtk_spinner_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_spinner_get_type();
     * }
     */
    public static long gtk_spinner_get_type() {
        var mh$ = gtk_spinner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.gtk_spinner_new$MH,"gtk_spinner_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_spinner_new();
     * }
     */
    public static MemorySegment gtk_spinner_new() {
        var mh$ = gtk_spinner_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.gtk_spinner_start$MH,"gtk_spinner_start");
    }
    /**
     * {@snippet :
     * void gtk_spinner_start(GtkSpinner* spinner);
     * }
     */
    public static void gtk_spinner_start(MemorySegment spinner) {
        var mh$ = gtk_spinner_start$MH();
        try {
            mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.gtk_spinner_stop$MH,"gtk_spinner_stop");
    }
    /**
     * {@snippet :
     * void gtk_spinner_stop(GtkSpinner* spinner);
     * }
     */
    public static void gtk_spinner_stop(MemorySegment spinner) {
        var mh$ = gtk_spinner_stop$MH();
        try {
            mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_set_spinning$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.gtk_spinner_set_spinning$MH,"gtk_spinner_set_spinning");
    }
    /**
     * {@snippet :
     * void gtk_spinner_set_spinning(GtkSpinner* spinner, gboolean spinning);
     * }
     */
    public static void gtk_spinner_set_spinning(MemorySegment spinner, int spinning) {
        var mh$ = gtk_spinner_set_spinning$MH();
        try {
            mh$.invokeExact(spinner, spinning);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_get_spinning$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.gtk_spinner_get_spinning$MH,"gtk_spinner_get_spinning");
    }
    /**
     * {@snippet :
     * gboolean gtk_spinner_get_spinning(GtkSpinner* spinner);
     * }
     */
    public static int gtk_spinner_get_spinning(MemorySegment spinner) {
        var mh$ = gtk_spinner_get_spinning$MH();
        try {
            return (int)mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.gtk_stack_switcher_get_type$MH,"gtk_stack_switcher_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_stack_switcher_get_type();
     * }
     */
    public static long gtk_stack_switcher_get_type() {
        var mh$ = gtk_stack_switcher_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.gtk_stack_switcher_new$MH,"gtk_stack_switcher_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_stack_switcher_new();
     * }
     */
    public static MemorySegment gtk_stack_switcher_new() {
        var mh$ = gtk_stack_switcher_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_set_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.gtk_stack_switcher_set_stack$MH,"gtk_stack_switcher_set_stack");
    }
    /**
     * {@snippet :
     * void gtk_stack_switcher_set_stack(GtkStackSwitcher* switcher, GtkStack* stack);
     * }
     */
    public static void gtk_stack_switcher_set_stack(MemorySegment switcher, MemorySegment stack) {
        var mh$ = gtk_stack_switcher_set_stack$MH();
        try {
            mh$.invokeExact(switcher, stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_get_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.gtk_stack_switcher_get_stack$MH,"gtk_stack_switcher_get_stack");
    }
    /**
     * {@snippet :
     * GtkStack* gtk_stack_switcher_get_stack(GtkStackSwitcher* switcher);
     * }
     */
    public static MemorySegment gtk_stack_switcher_get_stack(MemorySegment switcher) {
        var mh$ = gtk_stack_switcher_get_stack$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(switcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.gtk_statusbar_get_type$MH,"gtk_statusbar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_statusbar_get_type();
     * }
     */
    public static long gtk_statusbar_get_type() {
        var mh$ = gtk_statusbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.gtk_statusbar_new$MH,"gtk_statusbar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_statusbar_new();
     * }
     */
    public static MemorySegment gtk_statusbar_new() {
        var mh$ = gtk_statusbar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.gtk_statusbar_get_context_id$MH,"gtk_statusbar_get_context_id");
    }
    /**
     * {@snippet :
     * guint gtk_statusbar_get_context_id(GtkStatusbar* statusbar, char* context_description);
     * }
     */
    public static int gtk_statusbar_get_context_id(MemorySegment statusbar, MemorySegment context_description) {
        var mh$ = gtk_statusbar_get_context_id$MH();
        try {
            return (int)mh$.invokeExact(statusbar, context_description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_push$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.gtk_statusbar_push$MH,"gtk_statusbar_push");
    }
    /**
     * {@snippet :
     * guint gtk_statusbar_push(GtkStatusbar* statusbar, guint context_id, char* text);
     * }
     */
    public static int gtk_statusbar_push(MemorySegment statusbar, int context_id, MemorySegment text) {
        var mh$ = gtk_statusbar_push$MH();
        try {
            return (int)mh$.invokeExact(statusbar, context_id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.gtk_statusbar_pop$MH,"gtk_statusbar_pop");
    }
    /**
     * {@snippet :
     * void gtk_statusbar_pop(GtkStatusbar* statusbar, guint context_id);
     * }
     */
    public static void gtk_statusbar_pop(MemorySegment statusbar, int context_id) {
        var mh$ = gtk_statusbar_pop$MH();
        try {
            mh$.invokeExact(statusbar, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.gtk_statusbar_remove$MH,"gtk_statusbar_remove");
    }
    /**
     * {@snippet :
     * void gtk_statusbar_remove(GtkStatusbar* statusbar, guint context_id, guint message_id);
     * }
     */
    public static void gtk_statusbar_remove(MemorySegment statusbar, int context_id, int message_id) {
        var mh$ = gtk_statusbar_remove$MH();
        try {
            mh$.invokeExact(statusbar, context_id, message_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.gtk_statusbar_remove_all$MH,"gtk_statusbar_remove_all");
    }
    /**
     * {@snippet :
     * void gtk_statusbar_remove_all(GtkStatusbar* statusbar, guint context_id);
     * }
     */
    public static void gtk_statusbar_remove_all(MemorySegment statusbar, int context_id) {
        var mh$ = gtk_statusbar_remove_all$MH();
        try {
            mh$.invokeExact(statusbar, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_STRING_FILTER_MATCH_MODE_EXACT = 0;
     * }
     */
    public static int GTK_STRING_FILTER_MATCH_MODE_EXACT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_STRING_FILTER_MATCH_MODE_SUBSTRING = 1;
     * }
     */
    public static int GTK_STRING_FILTER_MATCH_MODE_SUBSTRING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_STRING_FILTER_MATCH_MODE_PREFIX = 2;
     * }
     */
    public static int GTK_STRING_FILTER_MATCH_MODE_PREFIX() {
        return (int)2L;
    }
    public static MethodHandle gtk_string_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.gtk_string_filter_get_type$MH,"gtk_string_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_string_filter_get_type();
     * }
     */
    public static long gtk_string_filter_get_type() {
        var mh$ = gtk_string_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkStringFilter* GtkStringFilter_autoptr;
     * }
     */
    public static final OfAddress GtkStringFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringFilter_listautoptr;
     * }
     */
    public static final OfAddress GtkStringFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringFilter_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringFilter_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkStringFilterClass_autoptr;
     * }
     */
    public static final OfAddress GtkStringFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringFilterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkStringFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringFilterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringFilterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_string_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.gtk_string_filter_new$MH,"gtk_string_filter_new");
    }
    /**
     * {@snippet :
     * GtkStringFilter* gtk_string_filter_new(GtkExpression* expression);
     * }
     */
    public static MemorySegment gtk_string_filter_new(MemorySegment expression) {
        var mh$ = gtk_string_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.gtk_string_filter_get_search$MH,"gtk_string_filter_get_search");
    }
    /**
     * {@snippet :
     * char* gtk_string_filter_get_search(GtkStringFilter* self);
     * }
     */
    public static MemorySegment gtk_string_filter_get_search(MemorySegment self) {
        var mh$ = gtk_string_filter_get_search$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.gtk_string_filter_set_search$MH,"gtk_string_filter_set_search");
    }
    /**
     * {@snippet :
     * void gtk_string_filter_set_search(GtkStringFilter* self, char* search);
     * }
     */
    public static void gtk_string_filter_set_search(MemorySegment self, MemorySegment search) {
        var mh$ = gtk_string_filter_set_search$MH();
        try {
            mh$.invokeExact(self, search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.gtk_string_filter_get_expression$MH,"gtk_string_filter_get_expression");
    }
    /**
     * {@snippet :
     * GtkExpression* gtk_string_filter_get_expression(GtkStringFilter* self);
     * }
     */
    public static MemorySegment gtk_string_filter_get_expression(MemorySegment self) {
        var mh$ = gtk_string_filter_get_expression$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.gtk_string_filter_set_expression$MH,"gtk_string_filter_set_expression");
    }
    /**
     * {@snippet :
     * void gtk_string_filter_set_expression(GtkStringFilter* self, GtkExpression* expression);
     * }
     */
    public static void gtk_string_filter_set_expression(MemorySegment self, MemorySegment expression) {
        var mh$ = gtk_string_filter_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.gtk_string_filter_get_ignore_case$MH,"gtk_string_filter_get_ignore_case");
    }
    /**
     * {@snippet :
     * gboolean gtk_string_filter_get_ignore_case(GtkStringFilter* self);
     * }
     */
    public static int gtk_string_filter_get_ignore_case(MemorySegment self) {
        var mh$ = gtk_string_filter_get_ignore_case$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.gtk_string_filter_set_ignore_case$MH,"gtk_string_filter_set_ignore_case");
    }
    /**
     * {@snippet :
     * void gtk_string_filter_set_ignore_case(GtkStringFilter* self, gboolean ignore_case);
     * }
     */
    public static void gtk_string_filter_set_ignore_case(MemorySegment self, int ignore_case) {
        var mh$ = gtk_string_filter_set_ignore_case$MH();
        try {
            mh$.invokeExact(self, ignore_case);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_match_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.gtk_string_filter_get_match_mode$MH,"gtk_string_filter_get_match_mode");
    }
    /**
     * {@snippet :
     * GtkStringFilterMatchMode gtk_string_filter_get_match_mode(GtkStringFilter* self);
     * }
     */
    public static int gtk_string_filter_get_match_mode(MemorySegment self) {
        var mh$ = gtk_string_filter_get_match_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_match_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.gtk_string_filter_set_match_mode$MH,"gtk_string_filter_set_match_mode");
    }
    /**
     * {@snippet :
     * void gtk_string_filter_set_match_mode(GtkStringFilter* self, GtkStringFilterMatchMode mode);
     * }
     */
    public static void gtk_string_filter_set_match_mode(MemorySegment self, int mode) {
        var mh$ = gtk_string_filter_set_match_mode$MH();
        try {
            mh$.invokeExact(self, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.gtk_string_object_get_type$MH,"gtk_string_object_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_string_object_get_type();
     * }
     */
    public static long gtk_string_object_get_type() {
        var mh$ = gtk_string_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkStringObject* GtkStringObject_autoptr;
     * }
     */
    public static final OfAddress GtkStringObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringObject_listautoptr;
     * }
     */
    public static final OfAddress GtkStringObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringObject_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringObject_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkStringObjectClass_autoptr;
     * }
     */
    public static final OfAddress GtkStringObjectClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringObjectClass_listautoptr;
     * }
     */
    public static final OfAddress GtkStringObjectClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringObjectClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringObjectClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringObjectClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringObjectClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_string_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.gtk_string_object_new$MH,"gtk_string_object_new");
    }
    /**
     * {@snippet :
     * GtkStringObject* gtk_string_object_new(char* string);
     * }
     */
    public static MemorySegment gtk_string_object_new(MemorySegment string) {
        var mh$ = gtk_string_object_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_object_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.gtk_string_object_get_string$MH,"gtk_string_object_get_string");
    }
    /**
     * {@snippet :
     * char* gtk_string_object_get_string(GtkStringObject* self);
     * }
     */
    public static MemorySegment gtk_string_object_get_string(MemorySegment self) {
        var mh$ = gtk_string_object_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.gtk_string_list_get_type$MH,"gtk_string_list_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_string_list_get_type();
     * }
     */
    public static long gtk_string_list_get_type() {
        var mh$ = gtk_string_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkStringList* GtkStringList_autoptr;
     * }
     */
    public static final OfAddress GtkStringList_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringList_listautoptr;
     * }
     */
    public static final OfAddress GtkStringList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringList_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringList_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkStringListClass_autoptr;
     * }
     */
    public static final OfAddress GtkStringListClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringListClass_listautoptr;
     * }
     */
    public static final OfAddress GtkStringListClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringListClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringListClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringListClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringListClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_string_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.gtk_string_list_new$MH,"gtk_string_list_new");
    }
    /**
     * {@snippet :
     * GtkStringList* gtk_string_list_new(char** strings);
     * }
     */
    public static MemorySegment gtk_string_list_new(MemorySegment strings) {
        var mh$ = gtk_string_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(strings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.gtk_string_list_append$MH,"gtk_string_list_append");
    }
    /**
     * {@snippet :
     * void gtk_string_list_append(GtkStringList* self, char* string);
     * }
     */
    public static void gtk_string_list_append(MemorySegment self, MemorySegment string) {
        var mh$ = gtk_string_list_append$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_take$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.gtk_string_list_take$MH,"gtk_string_list_take");
    }
    /**
     * {@snippet :
     * void gtk_string_list_take(GtkStringList* self, char* string);
     * }
     */
    public static void gtk_string_list_take(MemorySegment self, MemorySegment string) {
        var mh$ = gtk_string_list_take$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.gtk_string_list_remove$MH,"gtk_string_list_remove");
    }
    /**
     * {@snippet :
     * void gtk_string_list_remove(GtkStringList* self, guint position);
     * }
     */
    public static void gtk_string_list_remove(MemorySegment self, int position) {
        var mh$ = gtk_string_list_remove$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.gtk_string_list_splice$MH,"gtk_string_list_splice");
    }
    /**
     * {@snippet :
     * void gtk_string_list_splice(GtkStringList* self, guint position, guint n_removals, char** additions);
     * }
     */
    public static void gtk_string_list_splice(MemorySegment self, int position, int n_removals, MemorySegment additions) {
        var mh$ = gtk_string_list_splice$MH();
        try {
            mh$.invokeExact(self, position, n_removals, additions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.gtk_string_list_get_string$MH,"gtk_string_list_get_string");
    }
    /**
     * {@snippet :
     * char* gtk_string_list_get_string(GtkStringList* self, guint position);
     * }
     */
    public static MemorySegment gtk_string_list_get_string(MemorySegment self, int position) {
        var mh$ = gtk_string_list_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.gtk_string_sorter_get_type$MH,"gtk_string_sorter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_string_sorter_get_type();
     * }
     */
    public static long gtk_string_sorter_get_type() {
        var mh$ = gtk_string_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkStringSorter* GtkStringSorter_autoptr;
     * }
     */
    public static final OfAddress GtkStringSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringSorter_listautoptr;
     * }
     */
    public static final OfAddress GtkStringSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringSorter_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringSorter_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkStringSorterClass_autoptr;
     * }
     */
    public static final OfAddress GtkStringSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkStringSorterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkStringSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkStringSorterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkStringSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkStringSorterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkStringSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_string_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.gtk_string_sorter_new$MH,"gtk_string_sorter_new");
    }
    /**
     * {@snippet :
     * GtkStringSorter* gtk_string_sorter_new(GtkExpression* expression);
     * }
     */
    public static MemorySegment gtk_string_sorter_new(MemorySegment expression) {
        var mh$ = gtk_string_sorter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.gtk_string_sorter_get_expression$MH,"gtk_string_sorter_get_expression");
    }
    /**
     * {@snippet :
     * GtkExpression* gtk_string_sorter_get_expression(GtkStringSorter* self);
     * }
     */
    public static MemorySegment gtk_string_sorter_get_expression(MemorySegment self) {
        var mh$ = gtk_string_sorter_get_expression$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.gtk_string_sorter_set_expression$MH,"gtk_string_sorter_set_expression");
    }
    /**
     * {@snippet :
     * void gtk_string_sorter_set_expression(GtkStringSorter* self, GtkExpression* expression);
     * }
     */
    public static void gtk_string_sorter_set_expression(MemorySegment self, MemorySegment expression) {
        var mh$ = gtk_string_sorter_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_get_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.gtk_string_sorter_get_ignore_case$MH,"gtk_string_sorter_get_ignore_case");
    }
    /**
     * {@snippet :
     * gboolean gtk_string_sorter_get_ignore_case(GtkStringSorter* self);
     * }
     */
    public static int gtk_string_sorter_get_ignore_case(MemorySegment self) {
        var mh$ = gtk_string_sorter_get_ignore_case$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_set_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.gtk_string_sorter_set_ignore_case$MH,"gtk_string_sorter_set_ignore_case");
    }
    /**
     * {@snippet :
     * void gtk_string_sorter_set_ignore_case(GtkStringSorter* self, gboolean ignore_case);
     * }
     */
    public static void gtk_string_sorter_set_ignore_case(MemorySegment self, int ignore_case) {
        var mh$ = gtk_string_sorter_set_ignore_case$MH();
        try {
            mh$.invokeExact(self, ignore_case);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.gtk_style_provider_get_type$MH,"gtk_style_provider_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_style_provider_get_type();
     * }
     */
    public static long gtk_style_provider_get_type() {
        var mh$ = gtk_style_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.gtk_style_context_get_type$MH,"gtk_style_context_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_style_context_get_type();
     * }
     */
    public static long gtk_style_context_get_type() {
        var mh$ = gtk_style_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.gtk_style_context_add_provider_for_display$MH,"gtk_style_context_add_provider_for_display");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_provider_for_display(GdkDisplay* display, GtkStyleProvider* provider, guint priority);
     * }
     */
    public static void gtk_style_context_add_provider_for_display(MemorySegment display, MemorySegment provider, int priority) {
        var mh$ = gtk_style_context_add_provider_for_display$MH();
        try {
            mh$.invokeExact(display, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.gtk_style_context_remove_provider_for_display$MH,"gtk_style_context_remove_provider_for_display");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_provider_for_display(GdkDisplay* display, GtkStyleProvider* provider);
     * }
     */
    public static void gtk_style_context_remove_provider_for_display(MemorySegment display, MemorySegment provider) {
        var mh$ = gtk_style_context_remove_provider_for_display$MH();
        try {
            mh$.invokeExact(display, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.gtk_style_context_add_provider$MH,"gtk_style_context_add_provider");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_provider(GtkStyleContext* context, GtkStyleProvider* provider, guint priority);
     * }
     */
    public static void gtk_style_context_add_provider(MemorySegment context, MemorySegment provider, int priority) {
        var mh$ = gtk_style_context_add_provider$MH();
        try {
            mh$.invokeExact(context, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.gtk_style_context_remove_provider$MH,"gtk_style_context_remove_provider");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_provider(GtkStyleContext* context, GtkStyleProvider* provider);
     * }
     */
    public static void gtk_style_context_remove_provider(MemorySegment context, MemorySegment provider) {
        var mh$ = gtk_style_context_remove_provider$MH();
        try {
            mh$.invokeExact(context, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.gtk_style_context_save$MH,"gtk_style_context_save");
    }
    /**
     * {@snippet :
     * void gtk_style_context_save(GtkStyleContext* context);
     * }
     */
    public static void gtk_style_context_save(MemorySegment context) {
        var mh$ = gtk_style_context_save$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.gtk_style_context_restore$MH,"gtk_style_context_restore");
    }
    /**
     * {@snippet :
     * void gtk_style_context_restore(GtkStyleContext* context);
     * }
     */
    public static void gtk_style_context_restore(MemorySegment context) {
        var mh$ = gtk_style_context_restore$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.gtk_style_context_set_state$MH,"gtk_style_context_set_state");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_state(GtkStyleContext* context, GtkStateFlags flags);
     * }
     */
    public static void gtk_style_context_set_state(MemorySegment context, int flags) {
        var mh$ = gtk_style_context_set_state$MH();
        try {
            mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.gtk_style_context_get_state$MH,"gtk_style_context_get_state");
    }
    /**
     * {@snippet :
     * GtkStateFlags gtk_style_context_get_state(GtkStyleContext* context);
     * }
     */
    public static int gtk_style_context_get_state(MemorySegment context) {
        var mh$ = gtk_style_context_get_state$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.gtk_style_context_set_scale$MH,"gtk_style_context_set_scale");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_scale(GtkStyleContext* context, int scale);
     * }
     */
    public static void gtk_style_context_set_scale(MemorySegment context, int scale) {
        var mh$ = gtk_style_context_set_scale$MH();
        try {
            mh$.invokeExact(context, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.gtk_style_context_get_scale$MH,"gtk_style_context_get_scale");
    }
    /**
     * {@snippet :
     * int gtk_style_context_get_scale(GtkStyleContext* context);
     * }
     */
    public static int gtk_style_context_get_scale(MemorySegment context) {
        var mh$ = gtk_style_context_get_scale$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.gtk_style_context_add_class$MH,"gtk_style_context_add_class");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_class(GtkStyleContext* context, char* class_name);
     * }
     */
    public static void gtk_style_context_add_class(MemorySegment context, MemorySegment class_name) {
        var mh$ = gtk_style_context_add_class$MH();
        try {
            mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.gtk_style_context_remove_class$MH,"gtk_style_context_remove_class");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_class(GtkStyleContext* context, char* class_name);
     * }
     */
    public static void gtk_style_context_remove_class(MemorySegment context, MemorySegment class_name) {
        var mh$ = gtk_style_context_remove_class$MH();
        try {
            mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_has_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.gtk_style_context_has_class$MH,"gtk_style_context_has_class");
    }
    /**
     * {@snippet :
     * gboolean gtk_style_context_has_class(GtkStyleContext* context, char* class_name);
     * }
     */
    public static int gtk_style_context_has_class(MemorySegment context, MemorySegment class_name) {
        var mh$ = gtk_style_context_has_class$MH();
        try {
            return (int)mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.gtk_style_context_set_display$MH,"gtk_style_context_set_display");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_display(GtkStyleContext* context, GdkDisplay* display);
     * }
     */
    public static void gtk_style_context_set_display(MemorySegment context, MemorySegment display) {
        var mh$ = gtk_style_context_set_display$MH();
        try {
            mh$.invokeExact(context, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.gtk_style_context_get_display$MH,"gtk_style_context_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_style_context_get_display(GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_get_display(MemorySegment context) {
        var mh$ = gtk_style_context_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_lookup_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.gtk_style_context_lookup_color$MH,"gtk_style_context_lookup_color");
    }
    /**
     * {@snippet :
     * gboolean gtk_style_context_lookup_color(GtkStyleContext* context, char* color_name, GdkRGBA* color);
     * }
     */
    public static int gtk_style_context_lookup_color(MemorySegment context, MemorySegment color_name, MemorySegment color) {
        var mh$ = gtk_style_context_lookup_color$MH();
        try {
            return (int)mh$.invokeExact(context, color_name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.gtk_style_context_get_color$MH,"gtk_style_context_get_color");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_color(GtkStyleContext* context, GdkRGBA* color);
     * }
     */
    public static void gtk_style_context_get_color(MemorySegment context, MemorySegment color) {
        var mh$ = gtk_style_context_get_color$MH();
        try {
            mh$.invokeExact(context, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_border$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.gtk_style_context_get_border$MH,"gtk_style_context_get_border");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_border(GtkStyleContext* context, GtkBorder* border);
     * }
     */
    public static void gtk_style_context_get_border(MemorySegment context, MemorySegment border) {
        var mh$ = gtk_style_context_get_border$MH();
        try {
            mh$.invokeExact(context, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.gtk_style_context_get_padding$MH,"gtk_style_context_get_padding");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_padding(GtkStyleContext* context, GtkBorder* padding);
     * }
     */
    public static void gtk_style_context_get_padding(MemorySegment context, MemorySegment padding) {
        var mh$ = gtk_style_context_get_padding$MH();
        try {
            mh$.invokeExact(context, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.gtk_style_context_get_margin$MH,"gtk_style_context_get_margin");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_margin(GtkStyleContext* context, GtkBorder* margin);
     * }
     */
    public static void gtk_style_context_get_margin(MemorySegment context, MemorySegment margin) {
        var mh$ = gtk_style_context_get_margin$MH();
        try {
            mh$.invokeExact(context, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_STYLE_CONTEXT_PRINT_NONE = 0;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_STYLE_CONTEXT_PRINT_RECURSE = 1;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_RECURSE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE = 2;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_STYLE_CONTEXT_PRINT_SHOW_CHANGE = 4;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_SHOW_CHANGE() {
        return (int)4L;
    }
    public static MethodHandle gtk_style_context_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.gtk_style_context_to_string$MH,"gtk_style_context_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_style_context_to_string(GtkStyleContext* context, GtkStyleContextPrintFlags flags);
     * }
     */
    public static MemorySegment gtk_style_context_to_string(MemorySegment context, int flags) {
        var mh$ = gtk_style_context_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.gtk_switch_get_type$MH,"gtk_switch_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_switch_get_type();
     * }
     */
    public static long gtk_switch_get_type() {
        var mh$ = gtk_switch_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.gtk_switch_new$MH,"gtk_switch_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_switch_new();
     * }
     */
    public static MemorySegment gtk_switch_new() {
        var mh$ = gtk_switch_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.gtk_switch_set_active$MH,"gtk_switch_set_active");
    }
    /**
     * {@snippet :
     * void gtk_switch_set_active(GtkSwitch* self, gboolean is_active);
     * }
     */
    public static void gtk_switch_set_active(MemorySegment self, int is_active) {
        var mh$ = gtk_switch_set_active$MH();
        try {
            mh$.invokeExact(self, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.gtk_switch_get_active$MH,"gtk_switch_get_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_switch_get_active(GtkSwitch* self);
     * }
     */
    public static int gtk_switch_get_active(MemorySegment self) {
        var mh$ = gtk_switch_get_active$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.gtk_switch_set_state$MH,"gtk_switch_set_state");
    }
    /**
     * {@snippet :
     * void gtk_switch_set_state(GtkSwitch* self, gboolean state);
     * }
     */
    public static void gtk_switch_set_state(MemorySegment self, int state) {
        var mh$ = gtk_switch_set_state$MH();
        try {
            mh$.invokeExact(self, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.gtk_switch_get_state$MH,"gtk_switch_get_state");
    }
    /**
     * {@snippet :
     * gboolean gtk_switch_get_state(GtkSwitch* self);
     * }
     */
    public static int gtk_switch_get_state(MemorySegment self) {
        var mh$ = gtk_switch_get_state$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_symbolic_paintable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.gtk_symbolic_paintable_get_type$MH,"gtk_symbolic_paintable_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_symbolic_paintable_get_type();
     * }
     */
    public static long gtk_symbolic_paintable_get_type() {
        var mh$ = gtk_symbolic_paintable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkSymbolicPaintable* GtkSymbolicPaintable_autoptr;
     * }
     */
    public static final OfAddress GtkSymbolicPaintable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSymbolicPaintable_listautoptr;
     * }
     */
    public static final OfAddress GtkSymbolicPaintable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSymbolicPaintable_slistautoptr;
     * }
     */
    public static final OfAddress GtkSymbolicPaintable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSymbolicPaintable_queueautoptr;
     * }
     */
    public static final OfAddress GtkSymbolicPaintable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_symbolic_paintable_snapshot_symbolic$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.gtk_symbolic_paintable_snapshot_symbolic$MH,"gtk_symbolic_paintable_snapshot_symbolic");
    }
    /**
     * {@snippet :
     * void gtk_symbolic_paintable_snapshot_symbolic(GtkSymbolicPaintable* paintable, GdkSnapshot* snapshot, double width, double height, const GdkRGBA* colors, gsize n_colors);
     * }
     */
    public static void gtk_symbolic_paintable_snapshot_symbolic(MemorySegment paintable, MemorySegment snapshot, double width, double height, MemorySegment colors, long n_colors) {
        var mh$ = gtk_symbolic_paintable_snapshot_symbolic$MH();
        try {
            mh$.invokeExact(paintable, snapshot, width, height, colors, n_colors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.gtk_text_get_type$MH,"gtk_text_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_get_type();
     * }
     */
    public static long gtk_text_get_type() {
        var mh$ = gtk_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.gtk_text_new$MH,"gtk_text_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_text_new();
     * }
     */
    public static MemorySegment gtk_text_new() {
        var mh$ = gtk_text_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_new_with_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.gtk_text_new_with_buffer$MH,"gtk_text_new_with_buffer");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_text_new_with_buffer(GtkEntryBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_new_with_buffer(MemorySegment buffer) {
        var mh$ = gtk_text_new_with_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.gtk_text_get_buffer$MH,"gtk_text_get_buffer");
    }
    /**
     * {@snippet :
     * GtkEntryBuffer* gtk_text_get_buffer(GtkText* self);
     * }
     */
    public static MemorySegment gtk_text_get_buffer(MemorySegment self) {
        var mh$ = gtk_text_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.gtk_text_set_buffer$MH,"gtk_text_set_buffer");
    }
    /**
     * {@snippet :
     * void gtk_text_set_buffer(GtkText* self, GtkEntryBuffer* buffer);
     * }
     */
    public static void gtk_text_set_buffer(MemorySegment self, MemorySegment buffer) {
        var mh$ = gtk_text_set_buffer$MH();
        try {
            mh$.invokeExact(self, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.gtk_text_set_visibility$MH,"gtk_text_set_visibility");
    }
    /**
     * {@snippet :
     * void gtk_text_set_visibility(GtkText* self, gboolean visible);
     * }
     */
    public static void gtk_text_set_visibility(MemorySegment self, int visible) {
        var mh$ = gtk_text_set_visibility$MH();
        try {
            mh$.invokeExact(self, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.gtk_text_get_visibility$MH,"gtk_text_get_visibility");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_get_visibility(GtkText* self);
     * }
     */
    public static int gtk_text_get_visibility(MemorySegment self) {
        var mh$ = gtk_text_get_visibility$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.gtk_text_set_invisible_char$MH,"gtk_text_set_invisible_char");
    }
    /**
     * {@snippet :
     * void gtk_text_set_invisible_char(GtkText* self, gunichar ch);
     * }
     */
    public static void gtk_text_set_invisible_char(MemorySegment self, int ch) {
        var mh$ = gtk_text_set_invisible_char$MH();
        try {
            mh$.invokeExact(self, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.gtk_text_get_invisible_char$MH,"gtk_text_get_invisible_char");
    }
    /**
     * {@snippet :
     * gunichar gtk_text_get_invisible_char(GtkText* self);
     * }
     */
    public static int gtk_text_get_invisible_char(MemorySegment self) {
        var mh$ = gtk_text_get_invisible_char$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_unset_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.gtk_text_unset_invisible_char$MH,"gtk_text_unset_invisible_char");
    }
    /**
     * {@snippet :
     * void gtk_text_unset_invisible_char(GtkText* self);
     * }
     */
    public static void gtk_text_unset_invisible_char(MemorySegment self) {
        var mh$ = gtk_text_unset_invisible_char$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.gtk_text_set_overwrite_mode$MH,"gtk_text_set_overwrite_mode");
    }
    /**
     * {@snippet :
     * void gtk_text_set_overwrite_mode(GtkText* self, gboolean overwrite);
     * }
     */
    public static void gtk_text_set_overwrite_mode(MemorySegment self, int overwrite) {
        var mh$ = gtk_text_set_overwrite_mode$MH();
        try {
            mh$.invokeExact(self, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.gtk_text_get_overwrite_mode$MH,"gtk_text_get_overwrite_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_get_overwrite_mode(GtkText* self);
     * }
     */
    public static int gtk_text_get_overwrite_mode(MemorySegment self) {
        var mh$ = gtk_text_get_overwrite_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.gtk_text_set_max_length$MH,"gtk_text_set_max_length");
    }
    /**
     * {@snippet :
     * void gtk_text_set_max_length(GtkText* self, int length);
     * }
     */
    public static void gtk_text_set_max_length(MemorySegment self, int length) {
        var mh$ = gtk_text_set_max_length$MH();
        try {
            mh$.invokeExact(self, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.gtk_text_get_max_length$MH,"gtk_text_get_max_length");
    }
    /**
     * {@snippet :
     * int gtk_text_get_max_length(GtkText* self);
     * }
     */
    public static int gtk_text_get_max_length(MemorySegment self) {
        var mh$ = gtk_text_get_max_length$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_text_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.gtk_text_get_text_length$MH,"gtk_text_get_text_length");
    }
    /**
     * {@snippet :
     * guint16 gtk_text_get_text_length(GtkText* self);
     * }
     */
    public static short gtk_text_get_text_length(MemorySegment self) {
        var mh$ = gtk_text_get_text_length$MH();
        try {
            return (short)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.gtk_text_set_activates_default$MH,"gtk_text_set_activates_default");
    }
    /**
     * {@snippet :
     * void gtk_text_set_activates_default(GtkText* self, gboolean activates);
     * }
     */
    public static void gtk_text_set_activates_default(MemorySegment self, int activates) {
        var mh$ = gtk_text_set_activates_default$MH();
        try {
            mh$.invokeExact(self, activates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.gtk_text_get_activates_default$MH,"gtk_text_get_activates_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_get_activates_default(GtkText* self);
     * }
     */
    public static int gtk_text_get_activates_default(MemorySegment self) {
        var mh$ = gtk_text_get_activates_default$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.gtk_text_get_placeholder_text$MH,"gtk_text_get_placeholder_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_get_placeholder_text(GtkText* self);
     * }
     */
    public static MemorySegment gtk_text_get_placeholder_text(MemorySegment self) {
        var mh$ = gtk_text_get_placeholder_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.gtk_text_set_placeholder_text$MH,"gtk_text_set_placeholder_text");
    }
    /**
     * {@snippet :
     * void gtk_text_set_placeholder_text(GtkText* self, char* text);
     * }
     */
    public static void gtk_text_set_placeholder_text(MemorySegment self, MemorySegment text) {
        var mh$ = gtk_text_set_placeholder_text$MH();
        try {
            mh$.invokeExact(self, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.gtk_text_set_input_purpose$MH,"gtk_text_set_input_purpose");
    }
    /**
     * {@snippet :
     * void gtk_text_set_input_purpose(GtkText* self, GtkInputPurpose purpose);
     * }
     */
    public static void gtk_text_set_input_purpose(MemorySegment self, int purpose) {
        var mh$ = gtk_text_set_input_purpose$MH();
        try {
            mh$.invokeExact(self, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.gtk_text_get_input_purpose$MH,"gtk_text_get_input_purpose");
    }
    /**
     * {@snippet :
     * GtkInputPurpose gtk_text_get_input_purpose(GtkText* self);
     * }
     */
    public static int gtk_text_get_input_purpose(MemorySegment self) {
        var mh$ = gtk_text_get_input_purpose$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.gtk_text_set_input_hints$MH,"gtk_text_set_input_hints");
    }
    /**
     * {@snippet :
     * void gtk_text_set_input_hints(GtkText* self, GtkInputHints hints);
     * }
     */
    public static void gtk_text_set_input_hints(MemorySegment self, int hints) {
        var mh$ = gtk_text_set_input_hints$MH();
        try {
            mh$.invokeExact(self, hints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.gtk_text_get_input_hints$MH,"gtk_text_get_input_hints");
    }
    /**
     * {@snippet :
     * GtkInputHints gtk_text_get_input_hints(GtkText* self);
     * }
     */
    public static int gtk_text_get_input_hints(MemorySegment self) {
        var mh$ = gtk_text_get_input_hints$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.gtk_text_set_attributes$MH,"gtk_text_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_text_set_attributes(GtkText* self, PangoAttrList* attrs);
     * }
     */
    public static void gtk_text_set_attributes(MemorySegment self, MemorySegment attrs) {
        var mh$ = gtk_text_set_attributes$MH();
        try {
            mh$.invokeExact(self, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.gtk_text_get_attributes$MH,"gtk_text_get_attributes");
    }
    /**
     * {@snippet :
     * PangoAttrList* gtk_text_get_attributes(GtkText* self);
     * }
     */
    public static MemorySegment gtk_text_get_attributes(MemorySegment self) {
        var mh$ = gtk_text_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.gtk_text_set_tabs$MH,"gtk_text_set_tabs");
    }
    /**
     * {@snippet :
     * void gtk_text_set_tabs(GtkText* self, PangoTabArray* tabs);
     * }
     */
    public static void gtk_text_set_tabs(MemorySegment self, MemorySegment tabs) {
        var mh$ = gtk_text_set_tabs$MH();
        try {
            mh$.invokeExact(self, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.gtk_text_get_tabs$MH,"gtk_text_get_tabs");
    }
    /**
     * {@snippet :
     * PangoTabArray* gtk_text_get_tabs(GtkText* self);
     * }
     */
    public static MemorySegment gtk_text_get_tabs(MemorySegment self) {
        var mh$ = gtk_text_get_tabs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_grab_focus_without_selecting$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.gtk_text_grab_focus_without_selecting$MH,"gtk_text_grab_focus_without_selecting");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_grab_focus_without_selecting(GtkText* self);
     * }
     */
    public static int gtk_text_grab_focus_without_selecting(MemorySegment self) {
        var mh$ = gtk_text_grab_focus_without_selecting$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.gtk_text_set_extra_menu$MH,"gtk_text_set_extra_menu");
    }
    /**
     * {@snippet :
     * void gtk_text_set_extra_menu(GtkText* self, GMenuModel* model);
     * }
     */
    public static void gtk_text_set_extra_menu(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_text_set_extra_menu$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.gtk_text_get_extra_menu$MH,"gtk_text_get_extra_menu");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_text_get_extra_menu(GtkText* self);
     * }
     */
    public static MemorySegment gtk_text_get_extra_menu(MemorySegment self) {
        var mh$ = gtk_text_get_extra_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_enable_emoji_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.gtk_text_set_enable_emoji_completion$MH,"gtk_text_set_enable_emoji_completion");
    }
    /**
     * {@snippet :
     * void gtk_text_set_enable_emoji_completion(GtkText* self, gboolean enable_emoji_completion);
     * }
     */
    public static void gtk_text_set_enable_emoji_completion(MemorySegment self, int enable_emoji_completion) {
        var mh$ = gtk_text_set_enable_emoji_completion$MH();
        try {
            mh$.invokeExact(self, enable_emoji_completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_enable_emoji_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.gtk_text_get_enable_emoji_completion$MH,"gtk_text_get_enable_emoji_completion");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_get_enable_emoji_completion(GtkText* self);
     * }
     */
    public static int gtk_text_get_enable_emoji_completion(MemorySegment self) {
        var mh$ = gtk_text_get_enable_emoji_completion$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_propagate_text_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.gtk_text_set_propagate_text_width$MH,"gtk_text_set_propagate_text_width");
    }
    /**
     * {@snippet :
     * void gtk_text_set_propagate_text_width(GtkText* self, gboolean propagate_text_width);
     * }
     */
    public static void gtk_text_set_propagate_text_width(MemorySegment self, int propagate_text_width) {
        var mh$ = gtk_text_set_propagate_text_width$MH();
        try {
            mh$.invokeExact(self, propagate_text_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_propagate_text_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.gtk_text_get_propagate_text_width$MH,"gtk_text_get_propagate_text_width");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_get_propagate_text_width(GtkText* self);
     * }
     */
    public static int gtk_text_get_propagate_text_width(MemorySegment self) {
        var mh$ = gtk_text_get_propagate_text_width$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_truncate_multiline$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.gtk_text_set_truncate_multiline$MH,"gtk_text_set_truncate_multiline");
    }
    /**
     * {@snippet :
     * void gtk_text_set_truncate_multiline(GtkText* self, gboolean truncate_multiline);
     * }
     */
    public static void gtk_text_set_truncate_multiline(MemorySegment self, int truncate_multiline) {
        var mh$ = gtk_text_set_truncate_multiline$MH();
        try {
            mh$.invokeExact(self, truncate_multiline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_truncate_multiline$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.gtk_text_get_truncate_multiline$MH,"gtk_text_get_truncate_multiline");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_get_truncate_multiline(GtkText* self);
     * }
     */
    public static int gtk_text_get_truncate_multiline(MemorySegment self) {
        var mh$ = gtk_text_get_truncate_multiline$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_compute_cursor_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.gtk_text_compute_cursor_extents$MH,"gtk_text_compute_cursor_extents");
    }
    /**
     * {@snippet :
     * void gtk_text_compute_cursor_extents(GtkText* self, gsize position, graphene_rect_t* strong, graphene_rect_t* weak);
     * }
     */
    public static void gtk_text_compute_cursor_extents(MemorySegment self, long position, MemorySegment strong, MemorySegment weak) {
        var mh$ = gtk_text_compute_cursor_extents$MH();
        try {
            mh$.invokeExact(self, position, strong, weak);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.gtk_text_tag_get_type$MH,"gtk_text_tag_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_tag_get_type();
     * }
     */
    public static long gtk_text_tag_get_type() {
        var mh$ = gtk_text_tag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.gtk_text_tag_new$MH,"gtk_text_tag_new");
    }
    /**
     * {@snippet :
     * GtkTextTag* gtk_text_tag_new(char* name);
     * }
     */
    public static MemorySegment gtk_text_tag_new(MemorySegment name) {
        var mh$ = gtk_text_tag_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.gtk_text_tag_get_priority$MH,"gtk_text_tag_get_priority");
    }
    /**
     * {@snippet :
     * int gtk_text_tag_get_priority(GtkTextTag* tag);
     * }
     */
    public static int gtk_text_tag_get_priority(MemorySegment tag) {
        var mh$ = gtk_text_tag_get_priority$MH();
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.gtk_text_tag_set_priority$MH,"gtk_text_tag_set_priority");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_set_priority(GtkTextTag* tag, int priority);
     * }
     */
    public static void gtk_text_tag_set_priority(MemorySegment tag, int priority) {
        var mh$ = gtk_text_tag_set_priority$MH();
        try {
            mh$.invokeExact(tag, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.gtk_text_tag_changed$MH,"gtk_text_tag_changed");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_changed(GtkTextTag* tag, gboolean size_changed);
     * }
     */
    public static void gtk_text_tag_changed(MemorySegment tag, int size_changed) {
        var mh$ = gtk_text_tag_changed$MH();
        try {
            mh$.invokeExact(tag, size_changed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.gtk_text_tag_table_get_type$MH,"gtk_text_tag_table_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_tag_table_get_type();
     * }
     */
    public static long gtk_text_tag_table_get_type() {
        var mh$ = gtk_text_tag_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.gtk_text_tag_table_new$MH,"gtk_text_tag_table_new");
    }
    /**
     * {@snippet :
     * GtkTextTagTable* gtk_text_tag_table_new();
     * }
     */
    public static MemorySegment gtk_text_tag_table_new() {
        var mh$ = gtk_text_tag_table_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.gtk_text_tag_table_add$MH,"gtk_text_tag_table_add");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_tag_table_add(GtkTextTagTable* table, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_tag_table_add(MemorySegment table, MemorySegment tag) {
        var mh$ = gtk_text_tag_table_add$MH();
        try {
            return (int)mh$.invokeExact(table, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.gtk_text_tag_table_remove$MH,"gtk_text_tag_table_remove");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_table_remove(GtkTextTagTable* table, GtkTextTag* tag);
     * }
     */
    public static void gtk_text_tag_table_remove(MemorySegment table, MemorySegment tag) {
        var mh$ = gtk_text_tag_table_remove$MH();
        try {
            mh$.invokeExact(table, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.gtk_text_tag_table_lookup$MH,"gtk_text_tag_table_lookup");
    }
    /**
     * {@snippet :
     * GtkTextTag* gtk_text_tag_table_lookup(GtkTextTagTable* table, char* name);
     * }
     */
    public static MemorySegment gtk_text_tag_table_lookup(MemorySegment table, MemorySegment name) {
        var mh$ = gtk_text_tag_table_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.gtk_text_tag_table_foreach$MH,"gtk_text_tag_table_foreach");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_table_foreach(GtkTextTagTable* table, GtkTextTagTableForeach func, gpointer data);
     * }
     */
    public static void gtk_text_tag_table_foreach(MemorySegment table, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_text_tag_table_foreach$MH();
        try {
            mh$.invokeExact(table, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.gtk_text_tag_table_get_size$MH,"gtk_text_tag_table_get_size");
    }
    /**
     * {@snippet :
     * int gtk_text_tag_table_get_size(GtkTextTagTable* table);
     * }
     */
    public static int gtk_text_tag_table_get_size(MemorySegment table) {
        var mh$ = gtk_text_tag_table_get_size$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.gtk_text_child_anchor_get_type$MH,"gtk_text_child_anchor_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_child_anchor_get_type();
     * }
     */
    public static long gtk_text_child_anchor_get_type() {
        var mh$ = gtk_text_child_anchor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.gtk_text_child_anchor_new$MH,"gtk_text_child_anchor_new");
    }
    /**
     * {@snippet :
     * GtkTextChildAnchor* gtk_text_child_anchor_new();
     * }
     */
    public static MemorySegment gtk_text_child_anchor_new() {
        var mh$ = gtk_text_child_anchor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_new_with_replacement$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.gtk_text_child_anchor_new_with_replacement$MH,"gtk_text_child_anchor_new_with_replacement");
    }
    /**
     * {@snippet :
     * GtkTextChildAnchor* gtk_text_child_anchor_new_with_replacement(char* character);
     * }
     */
    public static MemorySegment gtk_text_child_anchor_new_with_replacement(MemorySegment character) {
        var mh$ = gtk_text_child_anchor_new_with_replacement$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.gtk_text_child_anchor_get_widgets$MH,"gtk_text_child_anchor_get_widgets");
    }
    /**
     * {@snippet :
     * GtkWidget** gtk_text_child_anchor_get_widgets(GtkTextChildAnchor* anchor, guint* out_len);
     * }
     */
    public static MemorySegment gtk_text_child_anchor_get_widgets(MemorySegment anchor, MemorySegment out_len) {
        var mh$ = gtk_text_child_anchor_get_widgets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(anchor, out_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.gtk_text_child_anchor_get_deleted$MH,"gtk_text_child_anchor_get_deleted");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_child_anchor_get_deleted(GtkTextChildAnchor* anchor);
     * }
     */
    public static int gtk_text_child_anchor_get_deleted(MemorySegment anchor) {
        var mh$ = gtk_text_child_anchor_get_deleted$MH();
        try {
            return (int)mh$.invokeExact(anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_TEXT_SEARCH_VISIBLE_ONLY = 1;
     * }
     */
    public static int GTK_TEXT_SEARCH_VISIBLE_ONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_TEXT_SEARCH_TEXT_ONLY = 2;
     * }
     */
    public static int GTK_TEXT_SEARCH_TEXT_ONLY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_TEXT_SEARCH_CASE_INSENSITIVE = 4;
     * }
     */
    public static int GTK_TEXT_SEARCH_CASE_INSENSITIVE() {
        return (int)4L;
    }
    public static MethodHandle gtk_text_iter_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.gtk_text_iter_get_buffer$MH,"gtk_text_iter_get_buffer");
    }
    /**
     * {@snippet :
     * GtkTextBuffer* gtk_text_iter_get_buffer(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_buffer(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.gtk_text_iter_copy$MH,"gtk_text_iter_copy");
    }
    /**
     * {@snippet :
     * GtkTextIter* gtk_text_iter_copy(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_copy(MemorySegment iter) {
        var mh$ = gtk_text_iter_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.gtk_text_iter_free$MH,"gtk_text_iter_free");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_free(GtkTextIter* iter);
     * }
     */
    public static void gtk_text_iter_free(MemorySegment iter) {
        var mh$ = gtk_text_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_assign$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.gtk_text_iter_assign$MH,"gtk_text_iter_assign");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_assign(GtkTextIter* iter, const GtkTextIter* other);
     * }
     */
    public static void gtk_text_iter_assign(MemorySegment iter, MemorySegment other) {
        var mh$ = gtk_text_iter_assign$MH();
        try {
            mh$.invokeExact(iter, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.gtk_text_iter_get_type$MH,"gtk_text_iter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_iter_get_type();
     * }
     */
    public static long gtk_text_iter_get_type() {
        var mh$ = gtk_text_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.gtk_text_iter_get_offset$MH,"gtk_text_iter_get_offset");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_offset(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_offset(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.gtk_text_iter_get_line$MH,"gtk_text_iter_get_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_line(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.gtk_text_iter_get_line_offset$MH,"gtk_text_iter_get_line_offset");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_line_offset(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_line_offset(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_line_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.gtk_text_iter_get_line_index$MH,"gtk_text_iter_get_line_index");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_line_index(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_line_index(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_line_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.gtk_text_iter_get_visible_line_offset$MH,"gtk_text_iter_get_visible_line_offset");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_visible_line_offset(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_visible_line_offset(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_visible_line_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.gtk_text_iter_get_visible_line_index$MH,"gtk_text_iter_get_visible_line_index");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_visible_line_index(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_visible_line_index(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_visible_line_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.gtk_text_iter_get_char$MH,"gtk_text_iter_get_char");
    }
    /**
     * {@snippet :
     * gunichar gtk_text_iter_get_char(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_char(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.gtk_text_iter_get_slice$MH,"gtk_text_iter_get_slice");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_slice(const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_slice(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_slice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.gtk_text_iter_get_text$MH,"gtk_text_iter_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_text(const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_text(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.gtk_text_iter_get_visible_slice$MH,"gtk_text_iter_get_visible_slice");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_visible_slice(const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_visible_slice(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_visible_slice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.gtk_text_iter_get_visible_text$MH,"gtk_text_iter_get_visible_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_visible_text(const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_visible_text(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_visible_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.gtk_text_iter_get_paintable$MH,"gtk_text_iter_get_paintable");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_text_iter_get_paintable(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_paintable(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.gtk_text_iter_get_marks$MH,"gtk_text_iter_get_marks");
    }
    /**
     * {@snippet :
     * GSList* gtk_text_iter_get_marks(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_marks(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_marks$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.gtk_text_iter_get_child_anchor$MH,"gtk_text_iter_get_child_anchor");
    }
    /**
     * {@snippet :
     * GtkTextChildAnchor* gtk_text_iter_get_child_anchor(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_child_anchor(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_child_anchor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_toggled_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.gtk_text_iter_get_toggled_tags$MH,"gtk_text_iter_get_toggled_tags");
    }
    /**
     * {@snippet :
     * GSList* gtk_text_iter_get_toggled_tags(const GtkTextIter* iter, gboolean toggled_on);
     * }
     */
    public static MemorySegment gtk_text_iter_get_toggled_tags(MemorySegment iter, int toggled_on) {
        var mh$ = gtk_text_iter_get_toggled_tags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter, toggled_on);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.gtk_text_iter_starts_tag$MH,"gtk_text_iter_starts_tag");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_starts_tag(const GtkTextIter* iter, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_starts_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_starts_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.gtk_text_iter_ends_tag$MH,"gtk_text_iter_ends_tag");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_ends_tag(const GtkTextIter* iter, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_ends_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_ends_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_toggles_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.gtk_text_iter_toggles_tag$MH,"gtk_text_iter_toggles_tag");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_toggles_tag(const GtkTextIter* iter, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_toggles_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_toggles_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_has_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.gtk_text_iter_has_tag$MH,"gtk_text_iter_has_tag");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_has_tag(const GtkTextIter* iter, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_has_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_has_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.gtk_text_iter_get_tags$MH,"gtk_text_iter_get_tags");
    }
    /**
     * {@snippet :
     * GSList* gtk_text_iter_get_tags(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_tags(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_tags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.gtk_text_iter_editable$MH,"gtk_text_iter_editable");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_editable(const GtkTextIter* iter, gboolean default_setting);
     * }
     */
    public static int gtk_text_iter_editable(MemorySegment iter, int default_setting) {
        var mh$ = gtk_text_iter_editable$MH();
        try {
            return (int)mh$.invokeExact(iter, default_setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_can_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.gtk_text_iter_can_insert$MH,"gtk_text_iter_can_insert");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_can_insert(const GtkTextIter* iter, gboolean default_editability);
     * }
     */
    public static int gtk_text_iter_can_insert(MemorySegment iter, int default_editability) {
        var mh$ = gtk_text_iter_can_insert$MH();
        try {
            return (int)mh$.invokeExact(iter, default_editability);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_word$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.gtk_text_iter_starts_word$MH,"gtk_text_iter_starts_word");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_starts_word(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_starts_word(MemorySegment iter) {
        var mh$ = gtk_text_iter_starts_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_word$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.gtk_text_iter_ends_word$MH,"gtk_text_iter_ends_word");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_ends_word(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_ends_word(MemorySegment iter) {
        var mh$ = gtk_text_iter_ends_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_inside_word$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.gtk_text_iter_inside_word$MH,"gtk_text_iter_inside_word");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_inside_word(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_inside_word(MemorySegment iter) {
        var mh$ = gtk_text_iter_inside_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.gtk_text_iter_starts_sentence$MH,"gtk_text_iter_starts_sentence");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_starts_sentence(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_starts_sentence(MemorySegment iter) {
        var mh$ = gtk_text_iter_starts_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.gtk_text_iter_ends_sentence$MH,"gtk_text_iter_ends_sentence");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_ends_sentence(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_ends_sentence(MemorySegment iter) {
        var mh$ = gtk_text_iter_ends_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_inside_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.gtk_text_iter_inside_sentence$MH,"gtk_text_iter_inside_sentence");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_inside_sentence(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_inside_sentence(MemorySegment iter) {
        var mh$ = gtk_text_iter_inside_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.gtk_text_iter_starts_line$MH,"gtk_text_iter_starts_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_starts_line(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_starts_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_starts_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.gtk_text_iter_ends_line$MH,"gtk_text_iter_ends_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_ends_line(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_ends_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_ends_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.gtk_text_iter_is_cursor_position$MH,"gtk_text_iter_is_cursor_position");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_is_cursor_position(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_is_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_is_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_chars_in_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.gtk_text_iter_get_chars_in_line$MH,"gtk_text_iter_get_chars_in_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_chars_in_line(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_chars_in_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_chars_in_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_bytes_in_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.gtk_text_iter_get_bytes_in_line$MH,"gtk_text_iter_get_bytes_in_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_bytes_in_line(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_bytes_in_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_bytes_in_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.gtk_text_iter_get_language$MH,"gtk_text_iter_get_language");
    }
    /**
     * {@snippet :
     * PangoLanguage* gtk_text_iter_get_language(const GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_language(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.gtk_text_iter_is_end$MH,"gtk_text_iter_is_end");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_is_end(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_is_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_is_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.gtk_text_iter_is_start$MH,"gtk_text_iter_is_start");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_is_start(const GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_is_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_is_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.gtk_text_iter_forward_char$MH,"gtk_text_iter_forward_char");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_char(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_char(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.gtk_text_iter_backward_char$MH,"gtk_text_iter_backward_char");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_char(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_char(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.gtk_text_iter_forward_chars$MH,"gtk_text_iter_forward_chars");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_chars(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_chars(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_chars$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.gtk_text_iter_backward_chars$MH,"gtk_text_iter_backward_chars");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_chars(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_chars(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_chars$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.gtk_text_iter_forward_line$MH,"gtk_text_iter_forward_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_line(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.gtk_text_iter_backward_line$MH,"gtk_text_iter_backward_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_line(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.gtk_text_iter_forward_lines$MH,"gtk_text_iter_forward_lines");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_lines(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.gtk_text_iter_backward_lines$MH,"gtk_text_iter_backward_lines");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_lines(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_word_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.gtk_text_iter_forward_word_end$MH,"gtk_text_iter_forward_word_end");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_word_end(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_word_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_word_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_word_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.gtk_text_iter_backward_word_start$MH,"gtk_text_iter_backward_word_start");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_word_start(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_word_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_word_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_word_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.gtk_text_iter_forward_word_ends$MH,"gtk_text_iter_forward_word_ends");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_word_ends(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_word_ends(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_word_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_word_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.gtk_text_iter_backward_word_starts$MH,"gtk_text_iter_backward_word_starts");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_word_starts(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_word_starts(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_word_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.gtk_text_iter_forward_visible_line$MH,"gtk_text_iter_forward_visible_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_visible_line(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_visible_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_visible_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.gtk_text_iter_backward_visible_line$MH,"gtk_text_iter_backward_visible_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_visible_line(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_visible_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_visible_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.gtk_text_iter_forward_visible_lines$MH,"gtk_text_iter_forward_visible_lines");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_visible_lines(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_visible_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_visible_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.gtk_text_iter_backward_visible_lines$MH,"gtk_text_iter_backward_visible_lines");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_visible_lines(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_visible_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_visible_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_word_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.gtk_text_iter_forward_visible_word_end$MH,"gtk_text_iter_forward_visible_word_end");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_visible_word_end(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_visible_word_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_visible_word_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_word_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.gtk_text_iter_backward_visible_word_start$MH,"gtk_text_iter_backward_visible_word_start");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_visible_word_start(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_visible_word_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_visible_word_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_word_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.gtk_text_iter_forward_visible_word_ends$MH,"gtk_text_iter_forward_visible_word_ends");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_visible_word_ends(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_visible_word_ends(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_visible_word_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_word_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.gtk_text_iter_backward_visible_word_starts$MH,"gtk_text_iter_backward_visible_word_starts");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_visible_word_starts(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_visible_word_starts(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_visible_word_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_sentence_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.gtk_text_iter_forward_sentence_end$MH,"gtk_text_iter_forward_sentence_end");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_sentence_end(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_sentence_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_sentence_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_sentence_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.gtk_text_iter_backward_sentence_start$MH,"gtk_text_iter_backward_sentence_start");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_sentence_start(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_sentence_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_sentence_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_sentence_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.gtk_text_iter_forward_sentence_ends$MH,"gtk_text_iter_forward_sentence_ends");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_sentence_ends(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_sentence_ends(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_sentence_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_sentence_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.gtk_text_iter_backward_sentence_starts$MH,"gtk_text_iter_backward_sentence_starts");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_sentence_starts(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_sentence_starts(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_sentence_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.gtk_text_iter_forward_cursor_position$MH,"gtk_text_iter_forward_cursor_position");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_cursor_position(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.gtk_text_iter_backward_cursor_position$MH,"gtk_text_iter_backward_cursor_position");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_cursor_position(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.gtk_text_iter_forward_cursor_positions$MH,"gtk_text_iter_forward_cursor_positions");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_cursor_positions(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.gtk_text_iter_backward_cursor_positions$MH,"gtk_text_iter_backward_cursor_positions");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_cursor_positions(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.gtk_text_iter_forward_visible_cursor_position$MH,"gtk_text_iter_forward_visible_cursor_position");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_visible_cursor_position(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_visible_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_visible_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.gtk_text_iter_backward_visible_cursor_position$MH,"gtk_text_iter_backward_visible_cursor_position");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_visible_cursor_position(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_visible_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_visible_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.gtk_text_iter_forward_visible_cursor_positions$MH,"gtk_text_iter_forward_visible_cursor_positions");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_visible_cursor_positions(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_visible_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_visible_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.gtk_text_iter_backward_visible_cursor_positions$MH,"gtk_text_iter_backward_visible_cursor_positions");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_visible_cursor_positions(GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_visible_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_visible_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.gtk_text_iter_set_offset$MH,"gtk_text_iter_set_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_offset(GtkTextIter* iter, int char_offset);
     * }
     */
    public static void gtk_text_iter_set_offset(MemorySegment iter, int char_offset) {
        var mh$ = gtk_text_iter_set_offset$MH();
        try {
            mh$.invokeExact(iter, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.gtk_text_iter_set_line$MH,"gtk_text_iter_set_line");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_line(GtkTextIter* iter, int line_number);
     * }
     */
    public static void gtk_text_iter_set_line(MemorySegment iter, int line_number) {
        var mh$ = gtk_text_iter_set_line$MH();
        try {
            mh$.invokeExact(iter, line_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.gtk_text_iter_set_line_offset$MH,"gtk_text_iter_set_line_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_line_offset(GtkTextIter* iter, int char_on_line);
     * }
     */
    public static void gtk_text_iter_set_line_offset(MemorySegment iter, int char_on_line) {
        var mh$ = gtk_text_iter_set_line_offset$MH();
        try {
            mh$.invokeExact(iter, char_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.gtk_text_iter_set_line_index$MH,"gtk_text_iter_set_line_index");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_line_index(GtkTextIter* iter, int byte_on_line);
     * }
     */
    public static void gtk_text_iter_set_line_index(MemorySegment iter, int byte_on_line) {
        var mh$ = gtk_text_iter_set_line_index$MH();
        try {
            mh$.invokeExact(iter, byte_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.gtk_text_iter_forward_to_end$MH,"gtk_text_iter_forward_to_end");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_forward_to_end(GtkTextIter* iter);
     * }
     */
    public static void gtk_text_iter_forward_to_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_to_end$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_line_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.gtk_text_iter_forward_to_line_end$MH,"gtk_text_iter_forward_to_line_end");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_to_line_end(GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_to_line_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_to_line_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_visible_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.gtk_text_iter_set_visible_line_offset$MH,"gtk_text_iter_set_visible_line_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_visible_line_offset(GtkTextIter* iter, int char_on_line);
     * }
     */
    public static void gtk_text_iter_set_visible_line_offset(MemorySegment iter, int char_on_line) {
        var mh$ = gtk_text_iter_set_visible_line_offset$MH();
        try {
            mh$.invokeExact(iter, char_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_visible_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.gtk_text_iter_set_visible_line_index$MH,"gtk_text_iter_set_visible_line_index");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_visible_line_index(GtkTextIter* iter, int byte_on_line);
     * }
     */
    public static void gtk_text_iter_set_visible_line_index(MemorySegment iter, int byte_on_line) {
        var mh$ = gtk_text_iter_set_visible_line_index$MH();
        try {
            mh$.invokeExact(iter, byte_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_tag_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.gtk_text_iter_forward_to_tag_toggle$MH,"gtk_text_iter_forward_to_tag_toggle");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_to_tag_toggle(GtkTextIter* iter, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_forward_to_tag_toggle(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_forward_to_tag_toggle$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_to_tag_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.gtk_text_iter_backward_to_tag_toggle$MH,"gtk_text_iter_backward_to_tag_toggle");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_to_tag_toggle(GtkTextIter* iter, GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_backward_to_tag_toggle(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_backward_to_tag_toggle$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_find_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.gtk_text_iter_forward_find_char$MH,"gtk_text_iter_forward_find_char");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_find_char(GtkTextIter* iter, GtkTextCharPredicate pred, gpointer user_data, const GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_forward_find_char(MemorySegment iter, MemorySegment pred, MemorySegment user_data, MemorySegment limit) {
        var mh$ = gtk_text_iter_forward_find_char$MH();
        try {
            return (int)mh$.invokeExact(iter, pred, user_data, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_find_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.gtk_text_iter_backward_find_char$MH,"gtk_text_iter_backward_find_char");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_find_char(GtkTextIter* iter, GtkTextCharPredicate pred, gpointer user_data, const GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_backward_find_char(MemorySegment iter, MemorySegment pred, MemorySegment user_data, MemorySegment limit) {
        var mh$ = gtk_text_iter_backward_find_char$MH();
        try {
            return (int)mh$.invokeExact(iter, pred, user_data, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.gtk_text_iter_forward_search$MH,"gtk_text_iter_forward_search");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_forward_search(const GtkTextIter* iter, char* str, GtkTextSearchFlags flags, GtkTextIter* match_start, GtkTextIter* match_end, const GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_forward_search(MemorySegment iter, MemorySegment str, int flags, MemorySegment match_start, MemorySegment match_end, MemorySegment limit) {
        var mh$ = gtk_text_iter_forward_search$MH();
        try {
            return (int)mh$.invokeExact(iter, str, flags, match_start, match_end, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.gtk_text_iter_backward_search$MH,"gtk_text_iter_backward_search");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_backward_search(const GtkTextIter* iter, char* str, GtkTextSearchFlags flags, GtkTextIter* match_start, GtkTextIter* match_end, const GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_backward_search(MemorySegment iter, MemorySegment str, int flags, MemorySegment match_start, MemorySegment match_end, MemorySegment limit) {
        var mh$ = gtk_text_iter_backward_search$MH();
        try {
            return (int)mh$.invokeExact(iter, str, flags, match_start, match_end, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.gtk_text_iter_equal$MH,"gtk_text_iter_equal");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_equal(const GtkTextIter* lhs, const GtkTextIter* rhs);
     * }
     */
    public static int gtk_text_iter_equal(MemorySegment lhs, MemorySegment rhs) {
        var mh$ = gtk_text_iter_equal$MH();
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.gtk_text_iter_compare$MH,"gtk_text_iter_compare");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_compare(const GtkTextIter* lhs, const GtkTextIter* rhs);
     * }
     */
    public static int gtk_text_iter_compare(MemorySegment lhs, MemorySegment rhs) {
        var mh$ = gtk_text_iter_compare$MH();
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_in_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.gtk_text_iter_in_range$MH,"gtk_text_iter_in_range");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_iter_in_range(const GtkTextIter* iter, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static int gtk_text_iter_in_range(MemorySegment iter, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_in_range$MH();
        try {
            return (int)mh$.invokeExact(iter, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.gtk_text_iter_order$MH,"gtk_text_iter_order");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_order(GtkTextIter* first, GtkTextIter* second);
     * }
     */
    public static void gtk_text_iter_order(MemorySegment first, MemorySegment second) {
        var mh$ = gtk_text_iter_order$MH();
        try {
            mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.gtk_text_mark_get_type$MH,"gtk_text_mark_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_mark_get_type();
     * }
     */
    public static long gtk_text_mark_get_type() {
        var mh$ = gtk_text_mark_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.gtk_text_mark_new$MH,"gtk_text_mark_new");
    }
    /**
     * {@snippet :
     * GtkTextMark* gtk_text_mark_new(char* name, gboolean left_gravity);
     * }
     */
    public static MemorySegment gtk_text_mark_new(MemorySegment name, int left_gravity) {
        var mh$ = gtk_text_mark_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, left_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.gtk_text_mark_set_visible$MH,"gtk_text_mark_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_text_mark_set_visible(GtkTextMark* mark, gboolean setting);
     * }
     */
    public static void gtk_text_mark_set_visible(MemorySegment mark, int setting) {
        var mh$ = gtk_text_mark_set_visible$MH();
        try {
            mh$.invokeExact(mark, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.gtk_text_mark_get_visible$MH,"gtk_text_mark_get_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_mark_get_visible(GtkTextMark* mark);
     * }
     */
    public static int gtk_text_mark_get_visible(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_visible$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.gtk_text_mark_get_name$MH,"gtk_text_mark_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_text_mark_get_name(GtkTextMark* mark);
     * }
     */
    public static MemorySegment gtk_text_mark_get_name(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.gtk_text_mark_get_deleted$MH,"gtk_text_mark_get_deleted");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_mark_get_deleted(GtkTextMark* mark);
     * }
     */
    public static int gtk_text_mark_get_deleted(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_deleted$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.gtk_text_mark_get_buffer$MH,"gtk_text_mark_get_buffer");
    }
    /**
     * {@snippet :
     * GtkTextBuffer* gtk_text_mark_get_buffer(GtkTextMark* mark);
     * }
     */
    public static MemorySegment gtk_text_mark_get_buffer(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_left_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.gtk_text_mark_get_left_gravity$MH,"gtk_text_mark_get_left_gravity");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_mark_get_left_gravity(GtkTextMark* mark);
     * }
     */
    public static int gtk_text_mark_get_left_gravity(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_left_gravity$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.gtk_text_buffer_get_type$MH,"gtk_text_buffer_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_buffer_get_type();
     * }
     */
    public static long gtk_text_buffer_get_type() {
        var mh$ = gtk_text_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.gtk_text_buffer_new$MH,"gtk_text_buffer_new");
    }
    /**
     * {@snippet :
     * GtkTextBuffer* gtk_text_buffer_new(GtkTextTagTable* table);
     * }
     */
    public static MemorySegment gtk_text_buffer_new(MemorySegment table) {
        var mh$ = gtk_text_buffer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_line_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.gtk_text_buffer_get_line_count$MH,"gtk_text_buffer_get_line_count");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_line_count(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_line_count(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_line_count$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_char_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.gtk_text_buffer_get_char_count$MH,"gtk_text_buffer_get_char_count");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_char_count(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_char_count(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_char_count$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_tag_table$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.gtk_text_buffer_get_tag_table$MH,"gtk_text_buffer_get_tag_table");
    }
    /**
     * {@snippet :
     * GtkTextTagTable* gtk_text_buffer_get_tag_table(GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_tag_table(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_tag_table$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.gtk_text_buffer_set_text$MH,"gtk_text_buffer_set_text");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_set_text(GtkTextBuffer* buffer, char* text, int len);
     * }
     */
    public static void gtk_text_buffer_set_text(MemorySegment buffer, MemorySegment text, int len) {
        var mh$ = gtk_text_buffer_set_text$MH();
        try {
            mh$.invokeExact(buffer, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.gtk_text_buffer_insert$MH,"gtk_text_buffer_insert");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert(GtkTextBuffer* buffer, GtkTextIter* iter, char* text, int len);
     * }
     */
    public static void gtk_text_buffer_insert(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len) {
        var mh$ = gtk_text_buffer_insert$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_at_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.gtk_text_buffer_insert_at_cursor$MH,"gtk_text_buffer_insert_at_cursor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_at_cursor(GtkTextBuffer* buffer, char* text, int len);
     * }
     */
    public static void gtk_text_buffer_insert_at_cursor(MemorySegment buffer, MemorySegment text, int len) {
        var mh$ = gtk_text_buffer_insert_at_cursor$MH();
        try {
            mh$.invokeExact(buffer, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.gtk_text_buffer_insert_interactive$MH,"gtk_text_buffer_insert_interactive");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_insert_interactive(GtkTextBuffer* buffer, GtkTextIter* iter, char* text, int len, gboolean default_editable);
     * }
     */
    public static int gtk_text_buffer_insert_interactive(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len, int default_editable) {
        var mh$ = gtk_text_buffer_insert_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, text, len, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_interactive_at_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.gtk_text_buffer_insert_interactive_at_cursor$MH,"gtk_text_buffer_insert_interactive_at_cursor");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_insert_interactive_at_cursor(GtkTextBuffer* buffer, char* text, int len, gboolean default_editable);
     * }
     */
    public static int gtk_text_buffer_insert_interactive_at_cursor(MemorySegment buffer, MemorySegment text, int len, int default_editable) {
        var mh$ = gtk_text_buffer_insert_interactive_at_cursor$MH();
        try {
            return (int)mh$.invokeExact(buffer, text, len, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.gtk_text_buffer_insert_range$MH,"gtk_text_buffer_insert_range");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_range(GtkTextBuffer* buffer, GtkTextIter* iter, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_insert_range(MemorySegment buffer, MemorySegment iter, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_insert_range$MH();
        try {
            mh$.invokeExact(buffer, iter, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_range_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.gtk_text_buffer_insert_range_interactive$MH,"gtk_text_buffer_insert_range_interactive");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_insert_range_interactive(GtkTextBuffer* buffer, GtkTextIter* iter, const GtkTextIter* start, const GtkTextIter* end, gboolean default_editable);
     * }
     */
    public static int gtk_text_buffer_insert_range_interactive(MemorySegment buffer, MemorySegment iter, MemorySegment start, MemorySegment end, int default_editable) {
        var mh$ = gtk_text_buffer_insert_range_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, start, end, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_with_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.gtk_text_buffer_insert_with_tags$MH,"gtk_text_buffer_insert_with_tags");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_with_tags(GtkTextBuffer* buffer, GtkTextIter* iter, char* text, int len, GtkTextTag* first_tag,...);
     * }
     */
    public static void gtk_text_buffer_insert_with_tags(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len, MemorySegment first_tag, Object... x5) {
        var mh$ = gtk_text_buffer_insert_with_tags$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len, first_tag, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_with_tags_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.gtk_text_buffer_insert_with_tags_by_name$MH,"gtk_text_buffer_insert_with_tags_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_with_tags_by_name(GtkTextBuffer* buffer, GtkTextIter* iter, char* text, int len, char* first_tag_name,...);
     * }
     */
    public static void gtk_text_buffer_insert_with_tags_by_name(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len, MemorySegment first_tag_name, Object... x5) {
        var mh$ = gtk_text_buffer_insert_with_tags_by_name$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len, first_tag_name, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.gtk_text_buffer_insert_markup$MH,"gtk_text_buffer_insert_markup");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_markup(GtkTextBuffer* buffer, GtkTextIter* iter, char* markup, int len);
     * }
     */
    public static void gtk_text_buffer_insert_markup(MemorySegment buffer, MemorySegment iter, MemorySegment markup, int len) {
        var mh$ = gtk_text_buffer_insert_markup$MH();
        try {
            mh$.invokeExact(buffer, iter, markup, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.gtk_text_buffer_delete$MH,"gtk_text_buffer_delete");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_delete(GtkTextBuffer* buffer, GtkTextIter* start, GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_delete(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_delete$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.gtk_text_buffer_delete_interactive$MH,"gtk_text_buffer_delete_interactive");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_delete_interactive(GtkTextBuffer* buffer, GtkTextIter* start_iter, GtkTextIter* end_iter, gboolean default_editable);
     * }
     */
    public static int gtk_text_buffer_delete_interactive(MemorySegment buffer, MemorySegment start_iter, MemorySegment end_iter, int default_editable) {
        var mh$ = gtk_text_buffer_delete_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, start_iter, end_iter, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_backspace$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.gtk_text_buffer_backspace$MH,"gtk_text_buffer_backspace");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_backspace(GtkTextBuffer* buffer, GtkTextIter* iter, gboolean interactive, gboolean default_editable);
     * }
     */
    public static int gtk_text_buffer_backspace(MemorySegment buffer, MemorySegment iter, int interactive, int default_editable) {
        var mh$ = gtk_text_buffer_backspace$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, interactive, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.gtk_text_buffer_get_text$MH,"gtk_text_buffer_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_buffer_get_text(GtkTextBuffer* buffer, const GtkTextIter* start, const GtkTextIter* end, gboolean include_hidden_chars);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_text(MemorySegment buffer, MemorySegment start, MemorySegment end, int include_hidden_chars) {
        var mh$ = gtk_text_buffer_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, start, end, include_hidden_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.gtk_text_buffer_get_slice$MH,"gtk_text_buffer_get_slice");
    }
    /**
     * {@snippet :
     * char* gtk_text_buffer_get_slice(GtkTextBuffer* buffer, const GtkTextIter* start, const GtkTextIter* end, gboolean include_hidden_chars);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_slice(MemorySegment buffer, MemorySegment start, MemorySegment end, int include_hidden_chars) {
        var mh$ = gtk_text_buffer_get_slice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, start, end, include_hidden_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.gtk_text_buffer_insert_paintable$MH,"gtk_text_buffer_insert_paintable");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_paintable(GtkTextBuffer* buffer, GtkTextIter* iter, GdkPaintable* paintable);
     * }
     */
    public static void gtk_text_buffer_insert_paintable(MemorySegment buffer, MemorySegment iter, MemorySegment paintable) {
        var mh$ = gtk_text_buffer_insert_paintable$MH();
        try {
            mh$.invokeExact(buffer, iter, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.gtk_text_buffer_insert_child_anchor$MH,"gtk_text_buffer_insert_child_anchor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_child_anchor(GtkTextBuffer* buffer, GtkTextIter* iter, GtkTextChildAnchor* anchor);
     * }
     */
    public static void gtk_text_buffer_insert_child_anchor(MemorySegment buffer, MemorySegment iter, MemorySegment anchor) {
        var mh$ = gtk_text_buffer_insert_child_anchor$MH();
        try {
            mh$.invokeExact(buffer, iter, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.gtk_text_buffer_create_child_anchor$MH,"gtk_text_buffer_create_child_anchor");
    }
    /**
     * {@snippet :
     * GtkTextChildAnchor* gtk_text_buffer_create_child_anchor(GtkTextBuffer* buffer, GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_buffer_create_child_anchor(MemorySegment buffer, MemorySegment iter) {
        var mh$ = gtk_text_buffer_create_child_anchor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_add_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.gtk_text_buffer_add_mark$MH,"gtk_text_buffer_add_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_add_mark(GtkTextBuffer* buffer, GtkTextMark* mark, const GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_add_mark(MemorySegment buffer, MemorySegment mark, MemorySegment where) {
        var mh$ = gtk_text_buffer_add_mark$MH();
        try {
            mh$.invokeExact(buffer, mark, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.gtk_text_buffer_create_mark$MH,"gtk_text_buffer_create_mark");
    }
    /**
     * {@snippet :
     * GtkTextMark* gtk_text_buffer_create_mark(GtkTextBuffer* buffer, char* mark_name, const GtkTextIter* where, gboolean left_gravity);
     * }
     */
    public static MemorySegment gtk_text_buffer_create_mark(MemorySegment buffer, MemorySegment mark_name, MemorySegment where, int left_gravity) {
        var mh$ = gtk_text_buffer_create_mark$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, mark_name, where, left_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_move_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.gtk_text_buffer_move_mark$MH,"gtk_text_buffer_move_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_move_mark(GtkTextBuffer* buffer, GtkTextMark* mark, const GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_move_mark(MemorySegment buffer, MemorySegment mark, MemorySegment where) {
        var mh$ = gtk_text_buffer_move_mark$MH();
        try {
            mh$.invokeExact(buffer, mark, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.gtk_text_buffer_delete_mark$MH,"gtk_text_buffer_delete_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_delete_mark(GtkTextBuffer* buffer, GtkTextMark* mark);
     * }
     */
    public static void gtk_text_buffer_delete_mark(MemorySegment buffer, MemorySegment mark) {
        var mh$ = gtk_text_buffer_delete_mark$MH();
        try {
            mh$.invokeExact(buffer, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.gtk_text_buffer_get_mark$MH,"gtk_text_buffer_get_mark");
    }
    /**
     * {@snippet :
     * GtkTextMark* gtk_text_buffer_get_mark(GtkTextBuffer* buffer, char* name);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_mark(MemorySegment buffer, MemorySegment name) {
        var mh$ = gtk_text_buffer_get_mark$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_move_mark_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.gtk_text_buffer_move_mark_by_name$MH,"gtk_text_buffer_move_mark_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_move_mark_by_name(GtkTextBuffer* buffer, char* name, const GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_move_mark_by_name(MemorySegment buffer, MemorySegment name, MemorySegment where) {
        var mh$ = gtk_text_buffer_move_mark_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_mark_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.gtk_text_buffer_delete_mark_by_name$MH,"gtk_text_buffer_delete_mark_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_delete_mark_by_name(GtkTextBuffer* buffer, char* name);
     * }
     */
    public static void gtk_text_buffer_delete_mark_by_name(MemorySegment buffer, MemorySegment name) {
        var mh$ = gtk_text_buffer_delete_mark_by_name$MH();
        try {
            mh$.invokeExact(buffer, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.gtk_text_buffer_get_insert$MH,"gtk_text_buffer_get_insert");
    }
    /**
     * {@snippet :
     * GtkTextMark* gtk_text_buffer_get_insert(GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_insert(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_bound$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.gtk_text_buffer_get_selection_bound$MH,"gtk_text_buffer_get_selection_bound");
    }
    /**
     * {@snippet :
     * GtkTextMark* gtk_text_buffer_get_selection_bound(GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_selection_bound(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_selection_bound$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_place_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.gtk_text_buffer_place_cursor$MH,"gtk_text_buffer_place_cursor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_place_cursor(GtkTextBuffer* buffer, const GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_place_cursor(MemorySegment buffer, MemorySegment where) {
        var mh$ = gtk_text_buffer_place_cursor$MH();
        try {
            mh$.invokeExact(buffer, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_select_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.gtk_text_buffer_select_range$MH,"gtk_text_buffer_select_range");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_select_range(GtkTextBuffer* buffer, const GtkTextIter* ins, const GtkTextIter* bound);
     * }
     */
    public static void gtk_text_buffer_select_range(MemorySegment buffer, MemorySegment ins, MemorySegment bound) {
        var mh$ = gtk_text_buffer_select_range$MH();
        try {
            mh$.invokeExact(buffer, ins, bound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_apply_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.gtk_text_buffer_apply_tag$MH,"gtk_text_buffer_apply_tag");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_apply_tag(GtkTextBuffer* buffer, GtkTextTag* tag, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_apply_tag(MemorySegment buffer, MemorySegment tag, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_apply_tag$MH();
        try {
            mh$.invokeExact(buffer, tag, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.gtk_text_buffer_remove_tag$MH,"gtk_text_buffer_remove_tag");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_tag(GtkTextBuffer* buffer, GtkTextTag* tag, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_remove_tag(MemorySegment buffer, MemorySegment tag, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_remove_tag$MH();
        try {
            mh$.invokeExact(buffer, tag, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_apply_tag_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.gtk_text_buffer_apply_tag_by_name$MH,"gtk_text_buffer_apply_tag_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_apply_tag_by_name(GtkTextBuffer* buffer, char* name, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_apply_tag_by_name(MemorySegment buffer, MemorySegment name, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_apply_tag_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_tag_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.gtk_text_buffer_remove_tag_by_name$MH,"gtk_text_buffer_remove_tag_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_tag_by_name(GtkTextBuffer* buffer, char* name, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_remove_tag_by_name(MemorySegment buffer, MemorySegment name, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_remove_tag_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_all_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.gtk_text_buffer_remove_all_tags$MH,"gtk_text_buffer_remove_all_tags");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_all_tags(GtkTextBuffer* buffer, const GtkTextIter* start, const GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_remove_all_tags(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_remove_all_tags$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.gtk_text_buffer_create_tag$MH,"gtk_text_buffer_create_tag");
    }
    /**
     * {@snippet :
     * GtkTextTag* gtk_text_buffer_create_tag(GtkTextBuffer* buffer, char* tag_name, char* first_property_name,...);
     * }
     */
    public static MemorySegment gtk_text_buffer_create_tag(MemorySegment buffer, MemorySegment tag_name, MemorySegment first_property_name, Object... x3) {
        var mh$ = gtk_text_buffer_create_tag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, tag_name, first_property_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.gtk_text_buffer_get_iter_at_line_offset$MH,"gtk_text_buffer_get_iter_at_line_offset");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_iter_at_line_offset(GtkTextBuffer* buffer, GtkTextIter* iter, int line_number, int char_offset);
     * }
     */
    public static int gtk_text_buffer_get_iter_at_line_offset(MemorySegment buffer, MemorySegment iter, int line_number, int char_offset) {
        var mh$ = gtk_text_buffer_get_iter_at_line_offset$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, line_number, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.gtk_text_buffer_get_iter_at_line_index$MH,"gtk_text_buffer_get_iter_at_line_index");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_iter_at_line_index(GtkTextBuffer* buffer, GtkTextIter* iter, int line_number, int byte_index);
     * }
     */
    public static int gtk_text_buffer_get_iter_at_line_index(MemorySegment buffer, MemorySegment iter, int line_number, int byte_index) {
        var mh$ = gtk_text_buffer_get_iter_at_line_index$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, line_number, byte_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.gtk_text_buffer_get_iter_at_offset$MH,"gtk_text_buffer_get_iter_at_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_offset(GtkTextBuffer* buffer, GtkTextIter* iter, int char_offset);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_offset(MemorySegment buffer, MemorySegment iter, int char_offset) {
        var mh$ = gtk_text_buffer_get_iter_at_offset$MH();
        try {
            mh$.invokeExact(buffer, iter, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.gtk_text_buffer_get_iter_at_line$MH,"gtk_text_buffer_get_iter_at_line");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_iter_at_line(GtkTextBuffer* buffer, GtkTextIter* iter, int line_number);
     * }
     */
    public static int gtk_text_buffer_get_iter_at_line(MemorySegment buffer, MemorySegment iter, int line_number) {
        var mh$ = gtk_text_buffer_get_iter_at_line$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, line_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_start_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.gtk_text_buffer_get_start_iter$MH,"gtk_text_buffer_get_start_iter");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_start_iter(GtkTextBuffer* buffer, GtkTextIter* iter);
     * }
     */
    public static void gtk_text_buffer_get_start_iter(MemorySegment buffer, MemorySegment iter) {
        var mh$ = gtk_text_buffer_get_start_iter$MH();
        try {
            mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_end_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.gtk_text_buffer_get_end_iter$MH,"gtk_text_buffer_get_end_iter");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_end_iter(GtkTextBuffer* buffer, GtkTextIter* iter);
     * }
     */
    public static void gtk_text_buffer_get_end_iter(MemorySegment buffer, MemorySegment iter) {
        var mh$ = gtk_text_buffer_get_end_iter$MH();
        try {
            mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.gtk_text_buffer_get_bounds$MH,"gtk_text_buffer_get_bounds");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_bounds(GtkTextBuffer* buffer, GtkTextIter* start, GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_get_bounds(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_get_bounds$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.gtk_text_buffer_get_iter_at_mark$MH,"gtk_text_buffer_get_iter_at_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_mark(GtkTextBuffer* buffer, GtkTextIter* iter, GtkTextMark* mark);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_mark(MemorySegment buffer, MemorySegment iter, MemorySegment mark) {
        var mh$ = gtk_text_buffer_get_iter_at_mark$MH();
        try {
            mh$.invokeExact(buffer, iter, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.gtk_text_buffer_get_iter_at_child_anchor$MH,"gtk_text_buffer_get_iter_at_child_anchor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_child_anchor(GtkTextBuffer* buffer, GtkTextIter* iter, GtkTextChildAnchor* anchor);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_child_anchor(MemorySegment buffer, MemorySegment iter, MemorySegment anchor) {
        var mh$ = gtk_text_buffer_get_iter_at_child_anchor$MH();
        try {
            mh$.invokeExact(buffer, iter, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.gtk_text_buffer_get_modified$MH,"gtk_text_buffer_get_modified");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_modified(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_modified(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_modified$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.gtk_text_buffer_set_modified$MH,"gtk_text_buffer_set_modified");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_set_modified(GtkTextBuffer* buffer, gboolean setting);
     * }
     */
    public static void gtk_text_buffer_set_modified(MemorySegment buffer, int setting) {
        var mh$ = gtk_text_buffer_set_modified$MH();
        try {
            mh$.invokeExact(buffer, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.gtk_text_buffer_get_has_selection$MH,"gtk_text_buffer_get_has_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_has_selection(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_has_selection(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_add_selection_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.gtk_text_buffer_add_selection_clipboard$MH,"gtk_text_buffer_add_selection_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_add_selection_clipboard(GtkTextBuffer* buffer, GdkClipboard* clipboard);
     * }
     */
    public static void gtk_text_buffer_add_selection_clipboard(MemorySegment buffer, MemorySegment clipboard) {
        var mh$ = gtk_text_buffer_add_selection_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_selection_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.gtk_text_buffer_remove_selection_clipboard$MH,"gtk_text_buffer_remove_selection_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_selection_clipboard(GtkTextBuffer* buffer, GdkClipboard* clipboard);
     * }
     */
    public static void gtk_text_buffer_remove_selection_clipboard(MemorySegment buffer, MemorySegment clipboard) {
        var mh$ = gtk_text_buffer_remove_selection_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_cut_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.gtk_text_buffer_cut_clipboard$MH,"gtk_text_buffer_cut_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_cut_clipboard(GtkTextBuffer* buffer, GdkClipboard* clipboard, gboolean default_editable);
     * }
     */
    public static void gtk_text_buffer_cut_clipboard(MemorySegment buffer, MemorySegment clipboard, int default_editable) {
        var mh$ = gtk_text_buffer_cut_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_copy_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.gtk_text_buffer_copy_clipboard$MH,"gtk_text_buffer_copy_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_copy_clipboard(GtkTextBuffer* buffer, GdkClipboard* clipboard);
     * }
     */
    public static void gtk_text_buffer_copy_clipboard(MemorySegment buffer, MemorySegment clipboard) {
        var mh$ = gtk_text_buffer_copy_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_paste_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.gtk_text_buffer_paste_clipboard$MH,"gtk_text_buffer_paste_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_paste_clipboard(GtkTextBuffer* buffer, GdkClipboard* clipboard, GtkTextIter* override_location, gboolean default_editable);
     * }
     */
    public static void gtk_text_buffer_paste_clipboard(MemorySegment buffer, MemorySegment clipboard, MemorySegment override_location, int default_editable) {
        var mh$ = gtk_text_buffer_paste_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard, override_location, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.gtk_text_buffer_get_selection_bounds$MH,"gtk_text_buffer_get_selection_bounds");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_selection_bounds(GtkTextBuffer* buffer, GtkTextIter* start, GtkTextIter* end);
     * }
     */
    public static int gtk_text_buffer_get_selection_bounds(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.gtk_text_buffer_delete_selection$MH,"gtk_text_buffer_delete_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_delete_selection(GtkTextBuffer* buffer, gboolean interactive, gboolean default_editable);
     * }
     */
    public static int gtk_text_buffer_delete_selection(MemorySegment buffer, int interactive, int default_editable) {
        var mh$ = gtk_text_buffer_delete_selection$MH();
        try {
            return (int)mh$.invokeExact(buffer, interactive, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.gtk_text_buffer_get_selection_content$MH,"gtk_text_buffer_get_selection_content");
    }
    /**
     * {@snippet :
     * GdkContentProvider* gtk_text_buffer_get_selection_content(GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_selection_content(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_selection_content$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_can_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.gtk_text_buffer_get_can_undo$MH,"gtk_text_buffer_get_can_undo");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_can_undo(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_can_undo(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_can_undo$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_can_redo$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.gtk_text_buffer_get_can_redo$MH,"gtk_text_buffer_get_can_redo");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_can_redo(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_can_redo(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_can_redo$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_enable_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.gtk_text_buffer_get_enable_undo$MH,"gtk_text_buffer_get_enable_undo");
    }
    /**
     * {@snippet :
     * gboolean gtk_text_buffer_get_enable_undo(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_enable_undo(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_enable_undo$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_enable_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.gtk_text_buffer_set_enable_undo$MH,"gtk_text_buffer_set_enable_undo");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_set_enable_undo(GtkTextBuffer* buffer, gboolean enable_undo);
     * }
     */
    public static void gtk_text_buffer_set_enable_undo(MemorySegment buffer, int enable_undo) {
        var mh$ = gtk_text_buffer_set_enable_undo$MH();
        try {
            mh$.invokeExact(buffer, enable_undo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_max_undo_levels$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.gtk_text_buffer_get_max_undo_levels$MH,"gtk_text_buffer_get_max_undo_levels");
    }
    /**
     * {@snippet :
     * guint gtk_text_buffer_get_max_undo_levels(GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_max_undo_levels(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_max_undo_levels$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_max_undo_levels$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.gtk_text_buffer_set_max_undo_levels$MH,"gtk_text_buffer_set_max_undo_levels");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_set_max_undo_levels(GtkTextBuffer* buffer, guint max_undo_levels);
     * }
     */
    public static void gtk_text_buffer_set_max_undo_levels(MemorySegment buffer, int max_undo_levels) {
        var mh$ = gtk_text_buffer_set_max_undo_levels$MH();
        try {
            mh$.invokeExact(buffer, max_undo_levels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.gtk_text_buffer_undo$MH,"gtk_text_buffer_undo");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_undo(GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_undo(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_undo$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_redo$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.gtk_text_buffer_redo$MH,"gtk_text_buffer_redo");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_redo(GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_redo(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_redo$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_begin_irreversible_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.gtk_text_buffer_begin_irreversible_action$MH,"gtk_text_buffer_begin_irreversible_action");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_begin_irreversible_action(GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_begin_irreversible_action(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_begin_irreversible_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_end_irreversible_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.gtk_text_buffer_end_irreversible_action$MH,"gtk_text_buffer_end_irreversible_action");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_end_irreversible_action(GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_end_irreversible_action(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_end_irreversible_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_begin_user_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.gtk_text_buffer_begin_user_action$MH,"gtk_text_buffer_begin_user_action");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_begin_user_action(GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_begin_user_action(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_begin_user_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_end_user_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.gtk_text_buffer_end_user_action$MH,"gtk_text_buffer_end_user_action");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_end_user_action(GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_end_user_action(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_end_user_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


