// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$348 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$348() {}
    static final FunctionDescriptor pthread_join$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle pthread_join$MH = RuntimeHelper.downcallHandle(
        "pthread_join",
        constants$348.pthread_join$FUNC
    );
    static final FunctionDescriptor pthread_detach$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle pthread_detach$MH = RuntimeHelper.downcallHandle(
        "pthread_detach",
        constants$348.pthread_detach$FUNC
    );
    static final FunctionDescriptor pthread_self$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle pthread_self$MH = RuntimeHelper.downcallHandle(
        "pthread_self",
        constants$348.pthread_self$FUNC
    );
    static final FunctionDescriptor pthread_equal$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle pthread_equal$MH = RuntimeHelper.downcallHandle(
        "pthread_equal",
        constants$348.pthread_equal$FUNC
    );
    static final FunctionDescriptor pthread_attr_init$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle pthread_attr_init$MH = RuntimeHelper.downcallHandle(
        "pthread_attr_init",
        constants$348.pthread_attr_init$FUNC
    );
    static final FunctionDescriptor pthread_attr_destroy$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle pthread_attr_destroy$MH = RuntimeHelper.downcallHandle(
        "pthread_attr_destroy",
        constants$348.pthread_attr_destroy$FUNC
    );
}


