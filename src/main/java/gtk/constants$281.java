// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$281 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$281() {}
    static final FunctionDescriptor g_scanner_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_scanner_error$MH = RuntimeHelper.downcallHandleVariadic(
        "g_scanner_error",
        constants$281.g_scanner_error$FUNC
    );
    static final FunctionDescriptor g_scanner_warn$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_scanner_warn$MH = RuntimeHelper.downcallHandleVariadic(
        "g_scanner_warn",
        constants$281.g_scanner_warn$FUNC
    );
    static final FunctionDescriptor GSequenceIterCompareFunc$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GSequenceIterCompareFunc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GSequenceIterCompareFunc_UP$MH = RuntimeHelper.upcallHandle(GSequenceIterCompareFunc.class, "apply", constants$281.GSequenceIterCompareFunc_UP$FUNC);
    static final FunctionDescriptor GSequenceIterCompareFunc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GSequenceIterCompareFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$281.GSequenceIterCompareFunc_DOWN$FUNC
    );
    static final FunctionDescriptor g_sequence_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_sequence_new$MH = RuntimeHelper.downcallHandle(
        "g_sequence_new",
        constants$281.g_sequence_new$FUNC
    );
    static final FunctionDescriptor g_sequence_free$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_sequence_free$MH = RuntimeHelper.downcallHandle(
        "g_sequence_free",
        constants$281.g_sequence_free$FUNC
    );
}


