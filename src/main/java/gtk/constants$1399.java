// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1399 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1399() {}
    static final FunctionDescriptor gtk_expression_unref$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_expression_unref$MH = RuntimeHelper.downcallHandle(
        "gtk_expression_unref",
        constants$1399.gtk_expression_unref$FUNC
    );
    static final FunctionDescriptor gtk_expression_get_value_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_expression_get_value_type$MH = RuntimeHelper.downcallHandle(
        "gtk_expression_get_value_type",
        constants$1399.gtk_expression_get_value_type$FUNC
    );
    static final FunctionDescriptor gtk_expression_is_static$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_expression_is_static$MH = RuntimeHelper.downcallHandle(
        "gtk_expression_is_static",
        constants$1399.gtk_expression_is_static$FUNC
    );
    static final FunctionDescriptor gtk_expression_evaluate$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_expression_evaluate$MH = RuntimeHelper.downcallHandle(
        "gtk_expression_evaluate",
        constants$1399.gtk_expression_evaluate$FUNC
    );
    static final FunctionDescriptor gtk_expression_watch$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_expression_watch$MH = RuntimeHelper.downcallHandle(
        "gtk_expression_watch",
        constants$1399.gtk_expression_watch$FUNC
    );
    static final FunctionDescriptor gtk_expression_bind$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_expression_bind$MH = RuntimeHelper.downcallHandle(
        "gtk_expression_bind",
        constants$1399.gtk_expression_bind$FUNC
    );
}


