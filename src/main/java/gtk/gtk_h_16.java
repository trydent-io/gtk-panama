// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class gtk_h_16 extends gtk_h_15 {

    public static MethodHandle gtk_tree_view_column_set_min_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_tree_view_column_set_min_width$MH,"gtk_tree_view_column_set_min_width");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_min_width(GtkTreeViewColumn* tree_column, int min_width);
     * }
     */
    public static void gtk_tree_view_column_set_min_width(MemorySegment tree_column, int min_width) {
        var mh$ = gtk_tree_view_column_set_min_width$MH();
        try {
            mh$.invokeExact(tree_column, min_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_min_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_tree_view_column_get_min_width$MH,"gtk_tree_view_column_get_min_width");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_min_width(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_min_width(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_min_width$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_max_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_tree_view_column_set_max_width$MH,"gtk_tree_view_column_set_max_width");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_max_width(GtkTreeViewColumn* tree_column, int max_width);
     * }
     */
    public static void gtk_tree_view_column_set_max_width(MemorySegment tree_column, int max_width) {
        var mh$ = gtk_tree_view_column_set_max_width$MH();
        try {
            mh$.invokeExact(tree_column, max_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_max_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_tree_view_column_get_max_width$MH,"gtk_tree_view_column_get_max_width");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_max_width(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_max_width(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_max_width$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_clicked$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_tree_view_column_clicked$MH,"gtk_tree_view_column_clicked");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_clicked(GtkTreeViewColumn* tree_column);
     * }
     */
    public static void gtk_tree_view_column_clicked(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_clicked$MH();
        try {
            mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_tree_view_column_set_title$MH,"gtk_tree_view_column_set_title");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_title(GtkTreeViewColumn* tree_column, char* title);
     * }
     */
    public static void gtk_tree_view_column_set_title(MemorySegment tree_column, MemorySegment title) {
        var mh$ = gtk_tree_view_column_set_title$MH();
        try {
            mh$.invokeExact(tree_column, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_tree_view_column_get_title$MH,"gtk_tree_view_column_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_tree_view_column_get_title(GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_title(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_tree_view_column_set_expand$MH,"gtk_tree_view_column_set_expand");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_expand(GtkTreeViewColumn* tree_column, gboolean expand);
     * }
     */
    public static void gtk_tree_view_column_set_expand(MemorySegment tree_column, int expand) {
        var mh$ = gtk_tree_view_column_set_expand$MH();
        try {
            mh$.invokeExact(tree_column, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_tree_view_column_get_expand$MH,"gtk_tree_view_column_get_expand");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_column_get_expand(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_expand(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_expand$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_tree_view_column_set_clickable$MH,"gtk_tree_view_column_set_clickable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_clickable(GtkTreeViewColumn* tree_column, gboolean clickable);
     * }
     */
    public static void gtk_tree_view_column_set_clickable(MemorySegment tree_column, int clickable) {
        var mh$ = gtk_tree_view_column_set_clickable$MH();
        try {
            mh$.invokeExact(tree_column, clickable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_tree_view_column_get_clickable$MH,"gtk_tree_view_column_get_clickable");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_column_get_clickable(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_clickable(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_clickable$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_tree_view_column_set_widget$MH,"gtk_tree_view_column_set_widget");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_widget(GtkTreeViewColumn* tree_column, GtkWidget* widget);
     * }
     */
    public static void gtk_tree_view_column_set_widget(MemorySegment tree_column, MemorySegment widget) {
        var mh$ = gtk_tree_view_column_set_widget$MH();
        try {
            mh$.invokeExact(tree_column, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_tree_view_column_get_widget$MH,"gtk_tree_view_column_get_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_column_get_widget(GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_widget(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_tree_view_column_set_alignment$MH,"gtk_tree_view_column_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_alignment(GtkTreeViewColumn* tree_column, float xalign);
     * }
     */
    public static void gtk_tree_view_column_set_alignment(MemorySegment tree_column, float xalign) {
        var mh$ = gtk_tree_view_column_set_alignment$MH();
        try {
            mh$.invokeExact(tree_column, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_tree_view_column_get_alignment$MH,"gtk_tree_view_column_get_alignment");
    }
    /**
     * {@snippet :
     * float gtk_tree_view_column_get_alignment(GtkTreeViewColumn* tree_column);
     * }
     */
    public static float gtk_tree_view_column_get_alignment(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_alignment$MH();
        try {
            return (float)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_tree_view_column_set_reorderable$MH,"gtk_tree_view_column_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_reorderable(GtkTreeViewColumn* tree_column, gboolean reorderable);
     * }
     */
    public static void gtk_tree_view_column_set_reorderable(MemorySegment tree_column, int reorderable) {
        var mh$ = gtk_tree_view_column_set_reorderable$MH();
        try {
            mh$.invokeExact(tree_column, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_tree_view_column_get_reorderable$MH,"gtk_tree_view_column_get_reorderable");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_column_get_reorderable(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_reorderable(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sort_column_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_tree_view_column_set_sort_column_id$MH,"gtk_tree_view_column_set_sort_column_id");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sort_column_id(GtkTreeViewColumn* tree_column, int sort_column_id);
     * }
     */
    public static void gtk_tree_view_column_set_sort_column_id(MemorySegment tree_column, int sort_column_id) {
        var mh$ = gtk_tree_view_column_set_sort_column_id$MH();
        try {
            mh$.invokeExact(tree_column, sort_column_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sort_column_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_tree_view_column_get_sort_column_id$MH,"gtk_tree_view_column_get_sort_column_id");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_sort_column_id(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sort_column_id(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sort_column_id$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sort_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_tree_view_column_set_sort_indicator$MH,"gtk_tree_view_column_set_sort_indicator");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sort_indicator(GtkTreeViewColumn* tree_column, gboolean setting);
     * }
     */
    public static void gtk_tree_view_column_set_sort_indicator(MemorySegment tree_column, int setting) {
        var mh$ = gtk_tree_view_column_set_sort_indicator$MH();
        try {
            mh$.invokeExact(tree_column, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sort_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_tree_view_column_get_sort_indicator$MH,"gtk_tree_view_column_get_sort_indicator");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_column_get_sort_indicator(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sort_indicator(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sort_indicator$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_tree_view_column_set_sort_order$MH,"gtk_tree_view_column_set_sort_order");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sort_order(GtkTreeViewColumn* tree_column, GtkSortType order);
     * }
     */
    public static void gtk_tree_view_column_set_sort_order(MemorySegment tree_column, int order) {
        var mh$ = gtk_tree_view_column_set_sort_order$MH();
        try {
            mh$.invokeExact(tree_column, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_tree_view_column_get_sort_order$MH,"gtk_tree_view_column_get_sort_order");
    }
    /**
     * {@snippet :
     * GtkSortType gtk_tree_view_column_get_sort_order(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sort_order(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sort_order$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_set_cell_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_tree_view_column_cell_set_cell_data$MH,"gtk_tree_view_column_cell_set_cell_data");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_cell_set_cell_data(GtkTreeViewColumn* tree_column, GtkTreeModel* tree_model, GtkTreeIter* iter, gboolean is_expander, gboolean is_expanded);
     * }
     */
    public static void gtk_tree_view_column_cell_set_cell_data(MemorySegment tree_column, MemorySegment tree_model, MemorySegment iter, int is_expander, int is_expanded) {
        var mh$ = gtk_tree_view_column_cell_set_cell_data$MH();
        try {
            mh$.invokeExact(tree_column, tree_model, iter, is_expander, is_expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_tree_view_column_cell_get_size$MH,"gtk_tree_view_column_cell_get_size");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_cell_get_size(GtkTreeViewColumn* tree_column, int* x_offset, int* y_offset, int* width, int* height);
     * }
     */
    public static void gtk_tree_view_column_cell_get_size(MemorySegment tree_column, MemorySegment x_offset, MemorySegment y_offset, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_tree_view_column_cell_get_size$MH();
        try {
            mh$.invokeExact(tree_column, x_offset, y_offset, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_tree_view_column_cell_is_visible$MH,"gtk_tree_view_column_cell_is_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_column_cell_is_visible(GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_cell_is_visible(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_cell_is_visible$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_focus_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_tree_view_column_focus_cell$MH,"gtk_tree_view_column_focus_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_focus_cell(GtkTreeViewColumn* tree_column, GtkCellRenderer* cell);
     * }
     */
    public static void gtk_tree_view_column_focus_cell(MemorySegment tree_column, MemorySegment cell) {
        var mh$ = gtk_tree_view_column_focus_cell$MH();
        try {
            mh$.invokeExact(tree_column, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_tree_view_column_cell_get_position$MH,"gtk_tree_view_column_cell_get_position");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_column_cell_get_position(GtkTreeViewColumn* tree_column, GtkCellRenderer* cell_renderer, int* x_offset, int* width);
     * }
     */
    public static int gtk_tree_view_column_cell_get_position(MemorySegment tree_column, MemorySegment cell_renderer, MemorySegment x_offset, MemorySegment width) {
        var mh$ = gtk_tree_view_column_cell_get_position$MH();
        try {
            return (int)mh$.invokeExact(tree_column, cell_renderer, x_offset, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_queue_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_tree_view_column_queue_resize$MH,"gtk_tree_view_column_queue_resize");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_queue_resize(GtkTreeViewColumn* tree_column);
     * }
     */
    public static void gtk_tree_view_column_queue_resize(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_queue_resize$MH();
        try {
            mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_tree_view$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_tree_view_column_get_tree_view$MH,"gtk_tree_view_column_get_tree_view");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_column_get_tree_view(GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_tree_view(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_tree_view$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_tree_view_column_get_button$MH,"gtk_tree_view_column_get_button");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_column_get_button(GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_button(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_editable_get_type$MH,"gtk_editable_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_editable_get_type();
     * }
     */
    public static long gtk_editable_get_type() {
        var mh$ = gtk_editable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_editable_get_text$MH,"gtk_editable_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_editable_get_text(GtkEditable* editable);
     * }
     */
    public static MemorySegment gtk_editable_get_text(MemorySegment editable) {
        var mh$ = gtk_editable_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_editable_set_text$MH,"gtk_editable_set_text");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_text(GtkEditable* editable, char* text);
     * }
     */
    public static void gtk_editable_set_text(MemorySegment editable, MemorySegment text) {
        var mh$ = gtk_editable_set_text$MH();
        try {
            mh$.invokeExact(editable, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_editable_get_chars$MH,"gtk_editable_get_chars");
    }
    /**
     * {@snippet :
     * char* gtk_editable_get_chars(GtkEditable* editable, int start_pos, int end_pos);
     * }
     */
    public static MemorySegment gtk_editable_get_chars(MemorySegment editable, int start_pos, int end_pos) {
        var mh$ = gtk_editable_get_chars$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_editable_insert_text$MH,"gtk_editable_insert_text");
    }
    /**
     * {@snippet :
     * void gtk_editable_insert_text(GtkEditable* editable, char* text, int length, int* position);
     * }
     */
    public static void gtk_editable_insert_text(MemorySegment editable, MemorySegment text, int length, MemorySegment position) {
        var mh$ = gtk_editable_insert_text$MH();
        try {
            mh$.invokeExact(editable, text, length, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_editable_delete_text$MH,"gtk_editable_delete_text");
    }
    /**
     * {@snippet :
     * void gtk_editable_delete_text(GtkEditable* editable, int start_pos, int end_pos);
     * }
     */
    public static void gtk_editable_delete_text(MemorySegment editable, int start_pos, int end_pos) {
        var mh$ = gtk_editable_delete_text$MH();
        try {
            mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_editable_get_selection_bounds$MH,"gtk_editable_get_selection_bounds");
    }
    /**
     * {@snippet :
     * gboolean gtk_editable_get_selection_bounds(GtkEditable* editable, int* start_pos, int* end_pos);
     * }
     */
    public static int gtk_editable_get_selection_bounds(MemorySegment editable, MemorySegment start_pos, MemorySegment end_pos) {
        var mh$ = gtk_editable_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delete_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_editable_delete_selection$MH,"gtk_editable_delete_selection");
    }
    /**
     * {@snippet :
     * void gtk_editable_delete_selection(GtkEditable* editable);
     * }
     */
    public static void gtk_editable_delete_selection(MemorySegment editable) {
        var mh$ = gtk_editable_delete_selection$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_select_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_editable_select_region$MH,"gtk_editable_select_region");
    }
    /**
     * {@snippet :
     * void gtk_editable_select_region(GtkEditable* editable, int start_pos, int end_pos);
     * }
     */
    public static void gtk_editable_select_region(MemorySegment editable, int start_pos, int end_pos) {
        var mh$ = gtk_editable_select_region$MH();
        try {
            mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_editable_set_position$MH,"gtk_editable_set_position");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_position(GtkEditable* editable, int position);
     * }
     */
    public static void gtk_editable_set_position(MemorySegment editable, int position) {
        var mh$ = gtk_editable_set_position$MH();
        try {
            mh$.invokeExact(editable, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_editable_get_position$MH,"gtk_editable_get_position");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_position(GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_position(MemorySegment editable) {
        var mh$ = gtk_editable_get_position$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_editable_get_editable$MH,"gtk_editable_get_editable");
    }
    /**
     * {@snippet :
     * gboolean gtk_editable_get_editable(GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_editable(MemorySegment editable) {
        var mh$ = gtk_editable_get_editable$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_editable_set_editable$MH,"gtk_editable_set_editable");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_editable(GtkEditable* editable, gboolean is_editable);
     * }
     */
    public static void gtk_editable_set_editable(MemorySegment editable, int is_editable) {
        var mh$ = gtk_editable_set_editable$MH();
        try {
            mh$.invokeExact(editable, is_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_editable_get_alignment$MH,"gtk_editable_get_alignment");
    }
    /**
     * {@snippet :
     * float gtk_editable_get_alignment(GtkEditable* editable);
     * }
     */
    public static float gtk_editable_get_alignment(MemorySegment editable) {
        var mh$ = gtk_editable_get_alignment$MH();
        try {
            return (float)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_editable_set_alignment$MH,"gtk_editable_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_alignment(GtkEditable* editable, float xalign);
     * }
     */
    public static void gtk_editable_set_alignment(MemorySegment editable, float xalign) {
        var mh$ = gtk_editable_set_alignment$MH();
        try {
            mh$.invokeExact(editable, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_editable_get_width_chars$MH,"gtk_editable_get_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_width_chars(GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_width_chars(MemorySegment editable) {
        var mh$ = gtk_editable_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_editable_set_width_chars$MH,"gtk_editable_set_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_width_chars(GtkEditable* editable, int n_chars);
     * }
     */
    public static void gtk_editable_set_width_chars(MemorySegment editable, int n_chars) {
        var mh$ = gtk_editable_set_width_chars$MH();
        try {
            mh$.invokeExact(editable, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_editable_get_max_width_chars$MH,"gtk_editable_get_max_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_max_width_chars(GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_max_width_chars(MemorySegment editable) {
        var mh$ = gtk_editable_get_max_width_chars$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_editable_set_max_width_chars$MH,"gtk_editable_set_max_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_max_width_chars(GtkEditable* editable, int n_chars);
     * }
     */
    public static void gtk_editable_set_max_width_chars(MemorySegment editable, int n_chars) {
        var mh$ = gtk_editable_set_max_width_chars$MH();
        try {
            mh$.invokeExact(editable, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_enable_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_editable_get_enable_undo$MH,"gtk_editable_get_enable_undo");
    }
    /**
     * {@snippet :
     * gboolean gtk_editable_get_enable_undo(GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_enable_undo(MemorySegment editable) {
        var mh$ = gtk_editable_get_enable_undo$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_enable_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_editable_set_enable_undo$MH,"gtk_editable_set_enable_undo");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_enable_undo(GtkEditable* editable, gboolean enable_undo);
     * }
     */
    public static void gtk_editable_set_enable_undo(MemorySegment editable, int enable_undo) {
        var mh$ = gtk_editable_set_enable_undo$MH();
        try {
            mh$.invokeExact(editable, enable_undo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_TEXT = 0;
     * }
     */
    public static int GTK_EDITABLE_PROP_TEXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_CURSOR_POSITION = 1;
     * }
     */
    public static int GTK_EDITABLE_PROP_CURSOR_POSITION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_SELECTION_BOUND = 2;
     * }
     */
    public static int GTK_EDITABLE_PROP_SELECTION_BOUND() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_EDITABLE = 3;
     * }
     */
    public static int GTK_EDITABLE_PROP_EDITABLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_WIDTH_CHARS = 4;
     * }
     */
    public static int GTK_EDITABLE_PROP_WIDTH_CHARS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_MAX_WIDTH_CHARS = 5;
     * }
     */
    public static int GTK_EDITABLE_PROP_MAX_WIDTH_CHARS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_XALIGN = 6;
     * }
     */
    public static int GTK_EDITABLE_PROP_XALIGN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_PROP_ENABLE_UNDO = 7;
     * }
     */
    public static int GTK_EDITABLE_PROP_ENABLE_UNDO() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_EDITABLE_NUM_PROPERTIES = 8;
     * }
     */
    public static int GTK_EDITABLE_NUM_PROPERTIES() {
        return (int)8L;
    }
    public static MethodHandle gtk_editable_install_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_editable_install_properties$MH,"gtk_editable_install_properties");
    }
    /**
     * {@snippet :
     * guint gtk_editable_install_properties(GObjectClass* object_class, guint first_prop);
     * }
     */
    public static int gtk_editable_install_properties(MemorySegment object_class, int first_prop) {
        var mh$ = gtk_editable_install_properties$MH();
        try {
            return (int)mh$.invokeExact(object_class, first_prop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_delegate$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_editable_get_delegate$MH,"gtk_editable_get_delegate");
    }
    /**
     * {@snippet :
     * GtkEditable* gtk_editable_get_delegate(GtkEditable* editable);
     * }
     */
    public static MemorySegment gtk_editable_get_delegate(MemorySegment editable) {
        var mh$ = gtk_editable_get_delegate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_init_delegate$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_editable_init_delegate$MH,"gtk_editable_init_delegate");
    }
    /**
     * {@snippet :
     * void gtk_editable_init_delegate(GtkEditable* editable);
     * }
     */
    public static void gtk_editable_init_delegate(MemorySegment editable) {
        var mh$ = gtk_editable_init_delegate$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_finish_delegate$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_editable_finish_delegate$MH,"gtk_editable_finish_delegate");
    }
    /**
     * {@snippet :
     * void gtk_editable_finish_delegate(GtkEditable* editable);
     * }
     */
    public static void gtk_editable_finish_delegate(MemorySegment editable) {
        var mh$ = gtk_editable_finish_delegate$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delegate_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_editable_delegate_set_property$MH,"gtk_editable_delegate_set_property");
    }
    /**
     * {@snippet :
     * gboolean gtk_editable_delegate_set_property(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec);
     * }
     */
    public static int gtk_editable_delegate_set_property(MemorySegment object, int prop_id, MemorySegment value, MemorySegment pspec) {
        var mh$ = gtk_editable_delegate_set_property$MH();
        try {
            return (int)mh$.invokeExact(object, prop_id, value, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delegate_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_editable_delegate_get_property$MH,"gtk_editable_delegate_get_property");
    }
    /**
     * {@snippet :
     * gboolean gtk_editable_delegate_get_property(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec);
     * }
     */
    public static int gtk_editable_delegate_get_property(MemorySegment object, int prop_id, MemorySegment value, MemorySegment pspec) {
        var mh$ = gtk_editable_delegate_get_property$MH();
        try {
            return (int)mh$.invokeExact(object, prop_id, value, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_im_context_get_type$MH,"gtk_im_context_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_im_context_get_type();
     * }
     */
    public static long gtk_im_context_get_type() {
        var mh$ = gtk_im_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_client_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_im_context_set_client_widget$MH,"gtk_im_context_set_client_widget");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_client_widget(GtkIMContext* context, GtkWidget* widget);
     * }
     */
    public static void gtk_im_context_set_client_widget(MemorySegment context, MemorySegment widget) {
        var mh$ = gtk_im_context_set_client_widget$MH();
        try {
            mh$.invokeExact(context, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_preedit_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_im_context_get_preedit_string$MH,"gtk_im_context_get_preedit_string");
    }
    /**
     * {@snippet :
     * void gtk_im_context_get_preedit_string(GtkIMContext* context, char** str, PangoAttrList** attrs, int* cursor_pos);
     * }
     */
    public static void gtk_im_context_get_preedit_string(MemorySegment context, MemorySegment str, MemorySegment attrs, MemorySegment cursor_pos) {
        var mh$ = gtk_im_context_get_preedit_string$MH();
        try {
            mh$.invokeExact(context, str, attrs, cursor_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_filter_keypress$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_im_context_filter_keypress$MH,"gtk_im_context_filter_keypress");
    }
    /**
     * {@snippet :
     * gboolean gtk_im_context_filter_keypress(GtkIMContext* context, GdkEvent* event);
     * }
     */
    public static int gtk_im_context_filter_keypress(MemorySegment context, MemorySegment event) {
        var mh$ = gtk_im_context_filter_keypress$MH();
        try {
            return (int)mh$.invokeExact(context, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_filter_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_im_context_filter_key$MH,"gtk_im_context_filter_key");
    }
    /**
     * {@snippet :
     * gboolean gtk_im_context_filter_key(GtkIMContext* context, gboolean press, GdkSurface* surface, GdkDevice* device, guint32 time, guint keycode, GdkModifierType state, int group);
     * }
     */
    public static int gtk_im_context_filter_key(MemorySegment context, int press, MemorySegment surface, MemorySegment device, int time, int keycode, int state, int group) {
        var mh$ = gtk_im_context_filter_key$MH();
        try {
            return (int)mh$.invokeExact(context, press, surface, device, time, keycode, state, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_focus_in$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_im_context_focus_in$MH,"gtk_im_context_focus_in");
    }
    /**
     * {@snippet :
     * void gtk_im_context_focus_in(GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_focus_in(MemorySegment context) {
        var mh$ = gtk_im_context_focus_in$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_focus_out$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_im_context_focus_out$MH,"gtk_im_context_focus_out");
    }
    /**
     * {@snippet :
     * void gtk_im_context_focus_out(GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_focus_out(MemorySegment context) {
        var mh$ = gtk_im_context_focus_out$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_im_context_reset$MH,"gtk_im_context_reset");
    }
    /**
     * {@snippet :
     * void gtk_im_context_reset(GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_reset(MemorySegment context) {
        var mh$ = gtk_im_context_reset$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_cursor_location$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_im_context_set_cursor_location$MH,"gtk_im_context_set_cursor_location");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_cursor_location(GtkIMContext* context, const GdkRectangle* area);
     * }
     */
    public static void gtk_im_context_set_cursor_location(MemorySegment context, MemorySegment area) {
        var mh$ = gtk_im_context_set_cursor_location$MH();
        try {
            mh$.invokeExact(context, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_use_preedit$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_im_context_set_use_preedit$MH,"gtk_im_context_set_use_preedit");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_use_preedit(GtkIMContext* context, gboolean use_preedit);
     * }
     */
    public static void gtk_im_context_set_use_preedit(MemorySegment context, int use_preedit) {
        var mh$ = gtk_im_context_set_use_preedit$MH();
        try {
            mh$.invokeExact(context, use_preedit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_im_context_set_surrounding$MH,"gtk_im_context_set_surrounding");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_surrounding(GtkIMContext* context, char* text, int len, int cursor_index);
     * }
     */
    public static void gtk_im_context_set_surrounding(MemorySegment context, MemorySegment text, int len, int cursor_index) {
        var mh$ = gtk_im_context_set_surrounding$MH();
        try {
            mh$.invokeExact(context, text, len, cursor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_im_context_get_surrounding$MH,"gtk_im_context_get_surrounding");
    }
    /**
     * {@snippet :
     * gboolean gtk_im_context_get_surrounding(GtkIMContext* context, char** text, int* cursor_index);
     * }
     */
    public static int gtk_im_context_get_surrounding(MemorySegment context, MemorySegment text, MemorySegment cursor_index) {
        var mh$ = gtk_im_context_get_surrounding$MH();
        try {
            return (int)mh$.invokeExact(context, text, cursor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_surrounding_with_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_im_context_set_surrounding_with_selection$MH,"gtk_im_context_set_surrounding_with_selection");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_surrounding_with_selection(GtkIMContext* context, char* text, int len, int cursor_index, int anchor_index);
     * }
     */
    public static void gtk_im_context_set_surrounding_with_selection(MemorySegment context, MemorySegment text, int len, int cursor_index, int anchor_index) {
        var mh$ = gtk_im_context_set_surrounding_with_selection$MH();
        try {
            mh$.invokeExact(context, text, len, cursor_index, anchor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_surrounding_with_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_im_context_get_surrounding_with_selection$MH,"gtk_im_context_get_surrounding_with_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_im_context_get_surrounding_with_selection(GtkIMContext* context, char** text, int* cursor_index, int* anchor_index);
     * }
     */
    public static int gtk_im_context_get_surrounding_with_selection(MemorySegment context, MemorySegment text, MemorySegment cursor_index, MemorySegment anchor_index) {
        var mh$ = gtk_im_context_get_surrounding_with_selection$MH();
        try {
            return (int)mh$.invokeExact(context, text, cursor_index, anchor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_delete_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_im_context_delete_surrounding$MH,"gtk_im_context_delete_surrounding");
    }
    /**
     * {@snippet :
     * gboolean gtk_im_context_delete_surrounding(GtkIMContext* context, int offset, int n_chars);
     * }
     */
    public static int gtk_im_context_delete_surrounding(MemorySegment context, int offset, int n_chars) {
        var mh$ = gtk_im_context_delete_surrounding$MH();
        try {
            return (int)mh$.invokeExact(context, offset, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_entry_buffer_get_type$MH,"gtk_entry_buffer_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_entry_buffer_get_type();
     * }
     */
    public static long gtk_entry_buffer_get_type() {
        var mh$ = gtk_entry_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_entry_buffer_new$MH,"gtk_entry_buffer_new");
    }
    /**
     * {@snippet :
     * GtkEntryBuffer* gtk_entry_buffer_new(char* initial_chars, int n_initial_chars);
     * }
     */
    public static MemorySegment gtk_entry_buffer_new(MemorySegment initial_chars, int n_initial_chars) {
        var mh$ = gtk_entry_buffer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(initial_chars, n_initial_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_entry_buffer_get_bytes$MH,"gtk_entry_buffer_get_bytes");
    }
    /**
     * {@snippet :
     * gsize gtk_entry_buffer_get_bytes(GtkEntryBuffer* buffer);
     * }
     */
    public static long gtk_entry_buffer_get_bytes(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_bytes$MH();
        try {
            return (long)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_entry_buffer_get_length$MH,"gtk_entry_buffer_get_length");
    }
    /**
     * {@snippet :
     * guint gtk_entry_buffer_get_length(GtkEntryBuffer* buffer);
     * }
     */
    public static int gtk_entry_buffer_get_length(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_entry_buffer_get_text$MH,"gtk_entry_buffer_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_buffer_get_text(GtkEntryBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_entry_buffer_get_text(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_entry_buffer_set_text$MH,"gtk_entry_buffer_set_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_set_text(GtkEntryBuffer* buffer, char* chars, int n_chars);
     * }
     */
    public static void gtk_entry_buffer_set_text(MemorySegment buffer, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_set_text$MH();
        try {
            mh$.invokeExact(buffer, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_set_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_entry_buffer_set_max_length$MH,"gtk_entry_buffer_set_max_length");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_set_max_length(GtkEntryBuffer* buffer, int max_length);
     * }
     */
    public static void gtk_entry_buffer_set_max_length(MemorySegment buffer, int max_length) {
        var mh$ = gtk_entry_buffer_set_max_length$MH();
        try {
            mh$.invokeExact(buffer, max_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_entry_buffer_get_max_length$MH,"gtk_entry_buffer_get_max_length");
    }
    /**
     * {@snippet :
     * int gtk_entry_buffer_get_max_length(GtkEntryBuffer* buffer);
     * }
     */
    public static int gtk_entry_buffer_get_max_length(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_max_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_entry_buffer_insert_text$MH,"gtk_entry_buffer_insert_text");
    }
    /**
     * {@snippet :
     * guint gtk_entry_buffer_insert_text(GtkEntryBuffer* buffer, guint position, char* chars, int n_chars);
     * }
     */
    public static int gtk_entry_buffer_insert_text(MemorySegment buffer, int position, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_insert_text$MH();
        try {
            return (int)mh$.invokeExact(buffer, position, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_entry_buffer_delete_text$MH,"gtk_entry_buffer_delete_text");
    }
    /**
     * {@snippet :
     * guint gtk_entry_buffer_delete_text(GtkEntryBuffer* buffer, guint position, int n_chars);
     * }
     */
    public static int gtk_entry_buffer_delete_text(MemorySegment buffer, int position, int n_chars) {
        var mh$ = gtk_entry_buffer_delete_text$MH();
        try {
            return (int)mh$.invokeExact(buffer, position, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_emit_inserted_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_entry_buffer_emit_inserted_text$MH,"gtk_entry_buffer_emit_inserted_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_emit_inserted_text(GtkEntryBuffer* buffer, guint position, char* chars, guint n_chars);
     * }
     */
    public static void gtk_entry_buffer_emit_inserted_text(MemorySegment buffer, int position, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_emit_inserted_text$MH();
        try {
            mh$.invokeExact(buffer, position, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_emit_deleted_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_entry_buffer_emit_deleted_text$MH,"gtk_entry_buffer_emit_deleted_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_emit_deleted_text(GtkEntryBuffer* buffer, guint position, guint n_chars);
     * }
     */
    public static void gtk_entry_buffer_emit_deleted_text(MemorySegment buffer, int position, int n_chars) {
        var mh$ = gtk_entry_buffer_emit_deleted_text$MH();
        try {
            mh$.invokeExact(buffer, position, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkEntryBuffer* GtkEntryBuffer_autoptr;
     * }
     */
    public static final OfAddress GtkEntryBuffer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkEntryBuffer_listautoptr;
     * }
     */
    public static final OfAddress GtkEntryBuffer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkEntryBuffer_slistautoptr;
     * }
     */
    public static final OfAddress GtkEntryBuffer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkEntryBuffer_queueautoptr;
     * }
     */
    public static final OfAddress GtkEntryBuffer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_list_store_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_list_store_get_type$MH,"gtk_list_store_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_list_store_get_type();
     * }
     */
    public static long gtk_list_store_get_type() {
        var mh$ = gtk_list_store_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_list_store_new$MH,"gtk_list_store_new");
    }
    /**
     * {@snippet :
     * GtkListStore* gtk_list_store_new(int n_columns,...);
     * }
     */
    public static MemorySegment gtk_list_store_new(int n_columns, Object... x1) {
        var mh$ = gtk_list_store_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_columns, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_list_store_newv$MH,"gtk_list_store_newv");
    }
    /**
     * {@snippet :
     * GtkListStore* gtk_list_store_newv(int n_columns, GType* types);
     * }
     */
    public static MemorySegment gtk_list_store_newv(int n_columns, MemorySegment types) {
        var mh$ = gtk_list_store_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_column_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_list_store_set_column_types$MH,"gtk_list_store_set_column_types");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_column_types(GtkListStore* list_store, int n_columns, GType* types);
     * }
     */
    public static void gtk_list_store_set_column_types(MemorySegment list_store, int n_columns, MemorySegment types) {
        var mh$ = gtk_list_store_set_column_types$MH();
        try {
            mh$.invokeExact(list_store, n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_list_store_set_value$MH,"gtk_list_store_set_value");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_value(GtkListStore* list_store, GtkTreeIter* iter, int column, GValue* value);
     * }
     */
    public static void gtk_list_store_set_value(MemorySegment list_store, MemorySegment iter, int column, MemorySegment value) {
        var mh$ = gtk_list_store_set_value$MH();
        try {
            mh$.invokeExact(list_store, iter, column, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_list_store_set$MH,"gtk_list_store_set");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set(GtkListStore* list_store, GtkTreeIter* iter,...);
     * }
     */
    public static void gtk_list_store_set(MemorySegment list_store, MemorySegment iter, Object... x2) {
        var mh$ = gtk_list_store_set$MH();
        try {
            mh$.invokeExact(list_store, iter, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_list_store_set_valuesv$MH,"gtk_list_store_set_valuesv");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_valuesv(GtkListStore* list_store, GtkTreeIter* iter, int* columns, GValue* values, int n_values);
     * }
     */
    public static void gtk_list_store_set_valuesv(MemorySegment list_store, MemorySegment iter, MemorySegment columns, MemorySegment values, int n_values) {
        var mh$ = gtk_list_store_set_valuesv$MH();
        try {
            mh$.invokeExact(list_store, iter, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_list_store_set_valist$MH,"gtk_list_store_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_valist(GtkListStore* list_store, GtkTreeIter* iter, va_list var_args);
     * }
     */
    public static void gtk_list_store_set_valist(MemorySegment list_store, MemorySegment iter, MemorySegment var_args) {
        var mh$ = gtk_list_store_set_valist$MH();
        try {
            mh$.invokeExact(list_store, iter, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_list_store_remove$MH,"gtk_list_store_remove");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_store_remove(GtkListStore* list_store, GtkTreeIter* iter);
     * }
     */
    public static int gtk_list_store_remove(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_remove$MH();
        try {
            return (int)mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_list_store_insert$MH,"gtk_list_store_insert");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert(GtkListStore* list_store, GtkTreeIter* iter, int position);
     * }
     */
    public static void gtk_list_store_insert(MemorySegment list_store, MemorySegment iter, int position) {
        var mh$ = gtk_list_store_insert$MH();
        try {
            mh$.invokeExact(list_store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_list_store_insert_before$MH,"gtk_list_store_insert_before");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_before(GtkListStore* list_store, GtkTreeIter* iter, GtkTreeIter* sibling);
     * }
     */
    public static void gtk_list_store_insert_before(MemorySegment list_store, MemorySegment iter, MemorySegment sibling) {
        var mh$ = gtk_list_store_insert_before$MH();
        try {
            mh$.invokeExact(list_store, iter, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_list_store_insert_after$MH,"gtk_list_store_insert_after");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_after(GtkListStore* list_store, GtkTreeIter* iter, GtkTreeIter* sibling);
     * }
     */
    public static void gtk_list_store_insert_after(MemorySegment list_store, MemorySegment iter, MemorySegment sibling) {
        var mh$ = gtk_list_store_insert_after$MH();
        try {
            mh$.invokeExact(list_store, iter, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_with_values$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_list_store_insert_with_values$MH,"gtk_list_store_insert_with_values");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_with_values(GtkListStore* list_store, GtkTreeIter* iter, int position,...);
     * }
     */
    public static void gtk_list_store_insert_with_values(MemorySegment list_store, MemorySegment iter, int position, Object... x3) {
        var mh$ = gtk_list_store_insert_with_values$MH();
        try {
            mh$.invokeExact(list_store, iter, position, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_with_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_list_store_insert_with_valuesv$MH,"gtk_list_store_insert_with_valuesv");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_with_valuesv(GtkListStore* list_store, GtkTreeIter* iter, int position, int* columns, GValue* values, int n_values);
     * }
     */
    public static void gtk_list_store_insert_with_valuesv(MemorySegment list_store, MemorySegment iter, int position, MemorySegment columns, MemorySegment values, int n_values) {
        var mh$ = gtk_list_store_insert_with_valuesv$MH();
        try {
            mh$.invokeExact(list_store, iter, position, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_list_store_prepend$MH,"gtk_list_store_prepend");
    }
    /**
     * {@snippet :
     * void gtk_list_store_prepend(GtkListStore* list_store, GtkTreeIter* iter);
     * }
     */
    public static void gtk_list_store_prepend(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_prepend$MH();
        try {
            mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_list_store_append$MH,"gtk_list_store_append");
    }
    /**
     * {@snippet :
     * void gtk_list_store_append(GtkListStore* list_store, GtkTreeIter* iter);
     * }
     */
    public static void gtk_list_store_append(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_append$MH();
        try {
            mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_list_store_clear$MH,"gtk_list_store_clear");
    }
    /**
     * {@snippet :
     * void gtk_list_store_clear(GtkListStore* list_store);
     * }
     */
    public static void gtk_list_store_clear(MemorySegment list_store) {
        var mh$ = gtk_list_store_clear$MH();
        try {
            mh$.invokeExact(list_store);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_iter_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_list_store_iter_is_valid$MH,"gtk_list_store_iter_is_valid");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_store_iter_is_valid(GtkListStore* list_store, GtkTreeIter* iter);
     * }
     */
    public static int gtk_list_store_iter_is_valid(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_iter_is_valid$MH();
        try {
            return (int)mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_list_store_reorder$MH,"gtk_list_store_reorder");
    }
    /**
     * {@snippet :
     * void gtk_list_store_reorder(GtkListStore* store, int* new_order);
     * }
     */
    public static void gtk_list_store_reorder(MemorySegment store, MemorySegment new_order) {
        var mh$ = gtk_list_store_reorder$MH();
        try {
            mh$.invokeExact(store, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_list_store_swap$MH,"gtk_list_store_swap");
    }
    /**
     * {@snippet :
     * void gtk_list_store_swap(GtkListStore* store, GtkTreeIter* a, GtkTreeIter* b);
     * }
     */
    public static void gtk_list_store_swap(MemorySegment store, MemorySegment a, MemorySegment b) {
        var mh$ = gtk_list_store_swap$MH();
        try {
            mh$.invokeExact(store, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_move_after$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_list_store_move_after$MH,"gtk_list_store_move_after");
    }
    /**
     * {@snippet :
     * void gtk_list_store_move_after(GtkListStore* store, GtkTreeIter* iter, GtkTreeIter* position);
     * }
     */
    public static void gtk_list_store_move_after(MemorySegment store, MemorySegment iter, MemorySegment position) {
        var mh$ = gtk_list_store_move_after$MH();
        try {
            mh$.invokeExact(store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_move_before$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_list_store_move_before$MH,"gtk_list_store_move_before");
    }
    /**
     * {@snippet :
     * void gtk_list_store_move_before(GtkListStore* store, GtkTreeIter* iter, GtkTreeIter* position);
     * }
     */
    public static void gtk_list_store_move_before(MemorySegment store, MemorySegment iter, MemorySegment position) {
        var mh$ = gtk_list_store_move_before$MH();
        try {
            mh$.invokeExact(store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_tree_model_filter_get_type$MH,"gtk_tree_model_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_model_filter_get_type();
     * }
     */
    public static long gtk_tree_model_filter_get_type() {
        var mh$ = gtk_tree_model_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_tree_model_filter_new$MH,"gtk_tree_model_filter_new");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_tree_model_filter_new(GtkTreeModel* child_model, GtkTreePath* root);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_new(MemorySegment child_model, MemorySegment root) {
        var mh$ = gtk_tree_model_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child_model, root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_set_visible_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_tree_model_filter_set_visible_func$MH,"gtk_tree_model_filter_set_visible_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_set_visible_func(GtkTreeModelFilter* filter, GtkTreeModelFilterVisibleFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_model_filter_set_visible_func(MemorySegment filter, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_model_filter_set_visible_func$MH();
        try {
            mh$.invokeExact(filter, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_set_modify_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_tree_model_filter_set_modify_func$MH,"gtk_tree_model_filter_set_modify_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_set_modify_func(GtkTreeModelFilter* filter, int n_columns, GType* types, GtkTreeModelFilterModifyFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_model_filter_set_modify_func(MemorySegment filter, int n_columns, MemorySegment types, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_model_filter_set_modify_func$MH();
        try {
            mh$.invokeExact(filter, n_columns, types, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_set_visible_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_tree_model_filter_set_visible_column$MH,"gtk_tree_model_filter_set_visible_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_set_visible_column(GtkTreeModelFilter* filter, int column);
     * }
     */
    public static void gtk_tree_model_filter_set_visible_column(MemorySegment filter, int column) {
        var mh$ = gtk_tree_model_filter_set_visible_column$MH();
        try {
            mh$.invokeExact(filter, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_tree_model_filter_get_model$MH,"gtk_tree_model_filter_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_tree_model_filter_get_model(GtkTreeModelFilter* filter);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_get_model(MemorySegment filter) {
        var mh$ = gtk_tree_model_filter_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_child_iter_to_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_tree_model_filter_convert_child_iter_to_iter$MH,"gtk_tree_model_filter_convert_child_iter_to_iter");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_model_filter_convert_child_iter_to_iter(GtkTreeModelFilter* filter, GtkTreeIter* filter_iter, GtkTreeIter* child_iter);
     * }
     */
    public static int gtk_tree_model_filter_convert_child_iter_to_iter(MemorySegment filter, MemorySegment filter_iter, MemorySegment child_iter) {
        var mh$ = gtk_tree_model_filter_convert_child_iter_to_iter$MH();
        try {
            return (int)mh$.invokeExact(filter, filter_iter, child_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_iter_to_child_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_tree_model_filter_convert_iter_to_child_iter$MH,"gtk_tree_model_filter_convert_iter_to_child_iter");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_convert_iter_to_child_iter(GtkTreeModelFilter* filter, GtkTreeIter* child_iter, GtkTreeIter* filter_iter);
     * }
     */
    public static void gtk_tree_model_filter_convert_iter_to_child_iter(MemorySegment filter, MemorySegment child_iter, MemorySegment filter_iter) {
        var mh$ = gtk_tree_model_filter_convert_iter_to_child_iter$MH();
        try {
            mh$.invokeExact(filter, child_iter, filter_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_child_path_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_tree_model_filter_convert_child_path_to_path$MH,"gtk_tree_model_filter_convert_child_path_to_path");
    }
    /**
     * {@snippet :
     * GtkTreePath* gtk_tree_model_filter_convert_child_path_to_path(GtkTreeModelFilter* filter, GtkTreePath* child_path);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_convert_child_path_to_path(MemorySegment filter, MemorySegment child_path) {
        var mh$ = gtk_tree_model_filter_convert_child_path_to_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter, child_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_path_to_child_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_tree_model_filter_convert_path_to_child_path$MH,"gtk_tree_model_filter_convert_path_to_child_path");
    }
    /**
     * {@snippet :
     * GtkTreePath* gtk_tree_model_filter_convert_path_to_child_path(GtkTreeModelFilter* filter, GtkTreePath* filter_path);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_convert_path_to_child_path(MemorySegment filter, MemorySegment filter_path) {
        var mh$ = gtk_tree_model_filter_convert_path_to_child_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter, filter_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_refilter$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_tree_model_filter_refilter$MH,"gtk_tree_model_filter_refilter");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_refilter(GtkTreeModelFilter* filter);
     * }
     */
    public static void gtk_tree_model_filter_refilter(MemorySegment filter) {
        var mh$ = gtk_tree_model_filter_refilter$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_clear_cache$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_tree_model_filter_clear_cache$MH,"gtk_tree_model_filter_clear_cache");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_clear_cache(GtkTreeModelFilter* filter);
     * }
     */
    public static void gtk_tree_model_filter_clear_cache(MemorySegment filter) {
        var mh$ = gtk_tree_model_filter_clear_cache$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_entry_completion_get_type$MH,"gtk_entry_completion_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_entry_completion_get_type();
     * }
     */
    public static long gtk_entry_completion_get_type() {
        var mh$ = gtk_entry_completion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_entry_completion_new$MH,"gtk_entry_completion_new");
    }
    /**
     * {@snippet :
     * GtkEntryCompletion* gtk_entry_completion_new();
     * }
     */
    public static MemorySegment gtk_entry_completion_new() {
        var mh$ = gtk_entry_completion_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_entry_completion_new_with_area$MH,"gtk_entry_completion_new_with_area");
    }
    /**
     * {@snippet :
     * GtkEntryCompletion* gtk_entry_completion_new_with_area(GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_entry_completion_new_with_area(MemorySegment area) {
        var mh$ = gtk_entry_completion_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_entry_completion_get_entry$MH,"gtk_entry_completion_get_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_entry_completion_get_entry(GtkEntryCompletion* completion);
     * }
     */
    public static MemorySegment gtk_entry_completion_get_entry(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_entry_completion_set_model$MH,"gtk_entry_completion_set_model");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_model(GtkEntryCompletion* completion, GtkTreeModel* model);
     * }
     */
    public static void gtk_entry_completion_set_model(MemorySegment completion, MemorySegment model) {
        var mh$ = gtk_entry_completion_set_model$MH();
        try {
            mh$.invokeExact(completion, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_entry_completion_get_model$MH,"gtk_entry_completion_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_entry_completion_get_model(GtkEntryCompletion* completion);
     * }
     */
    public static MemorySegment gtk_entry_completion_get_model(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_match_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_entry_completion_set_match_func$MH,"gtk_entry_completion_set_match_func");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_match_func(GtkEntryCompletion* completion, GtkEntryCompletionMatchFunc func, gpointer func_data, GDestroyNotify func_notify);
     * }
     */
    public static void gtk_entry_completion_set_match_func(MemorySegment completion, MemorySegment func, MemorySegment func_data, MemorySegment func_notify) {
        var mh$ = gtk_entry_completion_set_match_func$MH();
        try {
            mh$.invokeExact(completion, func, func_data, func_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_minimum_key_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_entry_completion_set_minimum_key_length$MH,"gtk_entry_completion_set_minimum_key_length");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_minimum_key_length(GtkEntryCompletion* completion, int length);
     * }
     */
    public static void gtk_entry_completion_set_minimum_key_length(MemorySegment completion, int length) {
        var mh$ = gtk_entry_completion_set_minimum_key_length$MH();
        try {
            mh$.invokeExact(completion, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_minimum_key_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_entry_completion_get_minimum_key_length$MH,"gtk_entry_completion_get_minimum_key_length");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_minimum_key_length(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_minimum_key_length(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_minimum_key_length$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_compute_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_entry_completion_compute_prefix$MH,"gtk_entry_completion_compute_prefix");
    }
    /**
     * {@snippet :
     * char* gtk_entry_completion_compute_prefix(GtkEntryCompletion* completion, char* key);
     * }
     */
    public static MemorySegment gtk_entry_completion_compute_prefix(MemorySegment completion, MemorySegment key) {
        var mh$ = gtk_entry_completion_compute_prefix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_entry_completion_complete$MH,"gtk_entry_completion_complete");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_complete(GtkEntryCompletion* completion);
     * }
     */
    public static void gtk_entry_completion_complete(MemorySegment completion) {
        var mh$ = gtk_entry_completion_complete$MH();
        try {
            mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_insert_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_entry_completion_insert_prefix$MH,"gtk_entry_completion_insert_prefix");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_insert_prefix(GtkEntryCompletion* completion);
     * }
     */
    public static void gtk_entry_completion_insert_prefix(MemorySegment completion) {
        var mh$ = gtk_entry_completion_insert_prefix$MH();
        try {
            mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_inline_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_entry_completion_set_inline_completion$MH,"gtk_entry_completion_set_inline_completion");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_inline_completion(GtkEntryCompletion* completion, gboolean inline_completion);
     * }
     */
    public static void gtk_entry_completion_set_inline_completion(MemorySegment completion, int inline_completion) {
        var mh$ = gtk_entry_completion_set_inline_completion$MH();
        try {
            mh$.invokeExact(completion, inline_completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_inline_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_entry_completion_get_inline_completion$MH,"gtk_entry_completion_get_inline_completion");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_completion_get_inline_completion(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_inline_completion(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_inline_completion$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_inline_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_entry_completion_set_inline_selection$MH,"gtk_entry_completion_set_inline_selection");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_inline_selection(GtkEntryCompletion* completion, gboolean inline_selection);
     * }
     */
    public static void gtk_entry_completion_set_inline_selection(MemorySegment completion, int inline_selection) {
        var mh$ = gtk_entry_completion_set_inline_selection$MH();
        try {
            mh$.invokeExact(completion, inline_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_inline_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_entry_completion_get_inline_selection$MH,"gtk_entry_completion_get_inline_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_completion_get_inline_selection(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_inline_selection(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_inline_selection$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_popup_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_entry_completion_set_popup_completion$MH,"gtk_entry_completion_set_popup_completion");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_popup_completion(GtkEntryCompletion* completion, gboolean popup_completion);
     * }
     */
    public static void gtk_entry_completion_set_popup_completion(MemorySegment completion, int popup_completion) {
        var mh$ = gtk_entry_completion_set_popup_completion$MH();
        try {
            mh$.invokeExact(completion, popup_completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_popup_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_entry_completion_get_popup_completion$MH,"gtk_entry_completion_get_popup_completion");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_completion_get_popup_completion(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_popup_completion(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_popup_completion$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_popup_set_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_entry_completion_set_popup_set_width$MH,"gtk_entry_completion_set_popup_set_width");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_popup_set_width(GtkEntryCompletion* completion, gboolean popup_set_width);
     * }
     */
    public static void gtk_entry_completion_set_popup_set_width(MemorySegment completion, int popup_set_width) {
        var mh$ = gtk_entry_completion_set_popup_set_width$MH();
        try {
            mh$.invokeExact(completion, popup_set_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_popup_set_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_entry_completion_get_popup_set_width$MH,"gtk_entry_completion_get_popup_set_width");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_completion_get_popup_set_width(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_popup_set_width(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_popup_set_width$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_popup_single_match$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_entry_completion_set_popup_single_match$MH,"gtk_entry_completion_set_popup_single_match");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_popup_single_match(GtkEntryCompletion* completion, gboolean popup_single_match);
     * }
     */
    public static void gtk_entry_completion_set_popup_single_match(MemorySegment completion, int popup_single_match) {
        var mh$ = gtk_entry_completion_set_popup_single_match$MH();
        try {
            mh$.invokeExact(completion, popup_single_match);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_popup_single_match$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_entry_completion_get_popup_single_match$MH,"gtk_entry_completion_get_popup_single_match");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_completion_get_popup_single_match(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_popup_single_match(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_popup_single_match$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_completion_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_entry_completion_get_completion_prefix$MH,"gtk_entry_completion_get_completion_prefix");
    }
    /**
     * {@snippet :
     * char* gtk_entry_completion_get_completion_prefix(GtkEntryCompletion* completion);
     * }
     */
    public static MemorySegment gtk_entry_completion_get_completion_prefix(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_completion_prefix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_entry_completion_set_text_column$MH,"gtk_entry_completion_set_text_column");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_text_column(GtkEntryCompletion* completion, int column);
     * }
     */
    public static void gtk_entry_completion_set_text_column(MemorySegment completion, int column) {
        var mh$ = gtk_entry_completion_set_text_column$MH();
        try {
            mh$.invokeExact(completion, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_entry_completion_get_text_column$MH,"gtk_entry_completion_get_text_column");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_text_column(GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_text_column(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_text_column$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_IMAGE_EMPTY = 0;
     * }
     */
    public static int GTK_IMAGE_EMPTY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_IMAGE_ICON_NAME = 1;
     * }
     */
    public static int GTK_IMAGE_ICON_NAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_IMAGE_GICON = 2;
     * }
     */
    public static int GTK_IMAGE_GICON() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_IMAGE_PAINTABLE = 3;
     * }
     */
    public static int GTK_IMAGE_PAINTABLE() {
        return (int)3L;
    }
    public static MethodHandle gtk_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_image_get_type$MH,"gtk_image_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_image_get_type();
     * }
     */
    public static long gtk_image_get_type() {
        var mh$ = gtk_image_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_image_new$MH,"gtk_image_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new();
     * }
     */
    public static MemorySegment gtk_image_new() {
        var mh$ = gtk_image_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_image_new_from_file$MH,"gtk_image_new_from_file");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new_from_file(char* filename);
     * }
     */
    public static MemorySegment gtk_image_new_from_file(MemorySegment filename) {
        var mh$ = gtk_image_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_image_new_from_resource$MH,"gtk_image_new_from_resource");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new_from_resource(char* resource_path);
     * }
     */
    public static MemorySegment gtk_image_new_from_resource(MemorySegment resource_path) {
        var mh$ = gtk_image_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_image_new_from_pixbuf$MH,"gtk_image_new_from_pixbuf");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new_from_pixbuf(GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_image_new_from_pixbuf(MemorySegment pixbuf) {
        var mh$ = gtk_image_new_from_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_image_new_from_paintable$MH,"gtk_image_new_from_paintable");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new_from_paintable(GdkPaintable* paintable);
     * }
     */
    public static MemorySegment gtk_image_new_from_paintable(MemorySegment paintable) {
        var mh$ = gtk_image_new_from_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_image_new_from_icon_name$MH,"gtk_image_new_from_icon_name");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new_from_icon_name(char* icon_name);
     * }
     */
    public static MemorySegment gtk_image_new_from_icon_name(MemorySegment icon_name) {
        var mh$ = gtk_image_new_from_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_image_new_from_gicon$MH,"gtk_image_new_from_gicon");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_image_new_from_gicon(GIcon* icon);
     * }
     */
    public static MemorySegment gtk_image_new_from_gicon(MemorySegment icon) {
        var mh$ = gtk_image_new_from_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_image_clear$MH,"gtk_image_clear");
    }
    /**
     * {@snippet :
     * void gtk_image_clear(GtkImage* image);
     * }
     */
    public static void gtk_image_clear(MemorySegment image) {
        var mh$ = gtk_image_clear$MH();
        try {
            mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_image_set_from_file$MH,"gtk_image_set_from_file");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_file(GtkImage* image, char* filename);
     * }
     */
    public static void gtk_image_set_from_file(MemorySegment image, MemorySegment filename) {
        var mh$ = gtk_image_set_from_file$MH();
        try {
            mh$.invokeExact(image, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_image_set_from_resource$MH,"gtk_image_set_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_resource(GtkImage* image, char* resource_path);
     * }
     */
    public static void gtk_image_set_from_resource(MemorySegment image, MemorySegment resource_path) {
        var mh$ = gtk_image_set_from_resource$MH();
        try {
            mh$.invokeExact(image, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_image_set_from_pixbuf$MH,"gtk_image_set_from_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_pixbuf(GtkImage* image, GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_image_set_from_pixbuf(MemorySegment image, MemorySegment pixbuf) {
        var mh$ = gtk_image_set_from_pixbuf$MH();
        try {
            mh$.invokeExact(image, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_image_set_from_paintable$MH,"gtk_image_set_from_paintable");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_paintable(GtkImage* image, GdkPaintable* paintable);
     * }
     */
    public static void gtk_image_set_from_paintable(MemorySegment image, MemorySegment paintable) {
        var mh$ = gtk_image_set_from_paintable$MH();
        try {
            mh$.invokeExact(image, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_image_set_from_icon_name$MH,"gtk_image_set_from_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_icon_name(GtkImage* image, char* icon_name);
     * }
     */
    public static void gtk_image_set_from_icon_name(MemorySegment image, MemorySegment icon_name) {
        var mh$ = gtk_image_set_from_icon_name$MH();
        try {
            mh$.invokeExact(image, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_image_set_from_gicon$MH,"gtk_image_set_from_gicon");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_gicon(GtkImage* image, GIcon* icon);
     * }
     */
    public static void gtk_image_set_from_gicon(MemorySegment image, MemorySegment icon) {
        var mh$ = gtk_image_set_from_gicon$MH();
        try {
            mh$.invokeExact(image, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_pixel_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_image_set_pixel_size$MH,"gtk_image_set_pixel_size");
    }
    /**
     * {@snippet :
     * void gtk_image_set_pixel_size(GtkImage* image, int pixel_size);
     * }
     */
    public static void gtk_image_set_pixel_size(MemorySegment image, int pixel_size) {
        var mh$ = gtk_image_set_pixel_size$MH();
        try {
            mh$.invokeExact(image, pixel_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_image_set_icon_size$MH,"gtk_image_set_icon_size");
    }
    /**
     * {@snippet :
     * void gtk_image_set_icon_size(GtkImage* image, GtkIconSize icon_size);
     * }
     */
    public static void gtk_image_set_icon_size(MemorySegment image, int icon_size) {
        var mh$ = gtk_image_set_icon_size$MH();
        try {
            mh$.invokeExact(image, icon_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_storage_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_image_get_storage_type$MH,"gtk_image_get_storage_type");
    }
    /**
     * {@snippet :
     * GtkImageType gtk_image_get_storage_type(GtkImage* image);
     * }
     */
    public static int gtk_image_get_storage_type(MemorySegment image) {
        var mh$ = gtk_image_get_storage_type$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_image_get_paintable$MH,"gtk_image_get_paintable");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_image_get_paintable(GtkImage* image);
     * }
     */
    public static MemorySegment gtk_image_get_paintable(MemorySegment image) {
        var mh$ = gtk_image_get_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_image_get_icon_name$MH,"gtk_image_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_image_get_icon_name(GtkImage* image);
     * }
     */
    public static MemorySegment gtk_image_get_icon_name(MemorySegment image) {
        var mh$ = gtk_image_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_image_get_gicon$MH,"gtk_image_get_gicon");
    }
    /**
     * {@snippet :
     * GIcon* gtk_image_get_gicon(GtkImage* image);
     * }
     */
    public static MemorySegment gtk_image_get_gicon(MemorySegment image) {
        var mh$ = gtk_image_get_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_pixel_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_image_get_pixel_size$MH,"gtk_image_get_pixel_size");
    }
    /**
     * {@snippet :
     * int gtk_image_get_pixel_size(GtkImage* image);
     * }
     */
    public static int gtk_image_get_pixel_size(MemorySegment image) {
        var mh$ = gtk_image_get_pixel_size$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_image_get_icon_size$MH,"gtk_image_get_icon_size");
    }
    /**
     * {@snippet :
     * GtkIconSize gtk_image_get_icon_size(GtkImage* image);
     * }
     */
    public static int gtk_image_get_icon_size(MemorySegment image) {
        var mh$ = gtk_image_get_icon_size$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_ENTRY_ICON_PRIMARY = 0;
     * }
     */
    public static int GTK_ENTRY_ICON_PRIMARY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ENTRY_ICON_SECONDARY = 1;
     * }
     */
    public static int GTK_ENTRY_ICON_SECONDARY() {
        return (int)1L;
    }
    public static MethodHandle gtk_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_entry_get_type$MH,"gtk_entry_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_entry_get_type();
     * }
     */
    public static long gtk_entry_get_type() {
        var mh$ = gtk_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_entry_new$MH,"gtk_entry_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_entry_new();
     * }
     */
    public static MemorySegment gtk_entry_new() {
        var mh$ = gtk_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_new_with_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_entry_new_with_buffer$MH,"gtk_entry_new_with_buffer");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_entry_new_with_buffer(GtkEntryBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_entry_new_with_buffer(MemorySegment buffer) {
        var mh$ = gtk_entry_new_with_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_entry_get_buffer$MH,"gtk_entry_get_buffer");
    }
    /**
     * {@snippet :
     * GtkEntryBuffer* gtk_entry_get_buffer(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_buffer(MemorySegment entry) {
        var mh$ = gtk_entry_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_entry_set_buffer$MH,"gtk_entry_set_buffer");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_buffer(GtkEntry* entry, GtkEntryBuffer* buffer);
     * }
     */
    public static void gtk_entry_set_buffer(MemorySegment entry, MemorySegment buffer) {
        var mh$ = gtk_entry_set_buffer$MH();
        try {
            mh$.invokeExact(entry, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_entry_set_visibility$MH,"gtk_entry_set_visibility");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_visibility(GtkEntry* entry, gboolean visible);
     * }
     */
    public static void gtk_entry_set_visibility(MemorySegment entry, int visible) {
        var mh$ = gtk_entry_set_visibility$MH();
        try {
            mh$.invokeExact(entry, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_entry_get_visibility$MH,"gtk_entry_get_visibility");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_get_visibility(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_visibility(MemorySegment entry) {
        var mh$ = gtk_entry_get_visibility$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_entry_set_invisible_char$MH,"gtk_entry_set_invisible_char");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_invisible_char(GtkEntry* entry, gunichar ch);
     * }
     */
    public static void gtk_entry_set_invisible_char(MemorySegment entry, int ch) {
        var mh$ = gtk_entry_set_invisible_char$MH();
        try {
            mh$.invokeExact(entry, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_entry_get_invisible_char$MH,"gtk_entry_get_invisible_char");
    }
    /**
     * {@snippet :
     * gunichar gtk_entry_get_invisible_char(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_invisible_char(MemorySegment entry) {
        var mh$ = gtk_entry_get_invisible_char$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_unset_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_entry_unset_invisible_char$MH,"gtk_entry_unset_invisible_char");
    }
    /**
     * {@snippet :
     * void gtk_entry_unset_invisible_char(GtkEntry* entry);
     * }
     */
    public static void gtk_entry_unset_invisible_char(MemorySegment entry) {
        var mh$ = gtk_entry_unset_invisible_char$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_entry_set_has_frame$MH,"gtk_entry_set_has_frame");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_has_frame(GtkEntry* entry, gboolean setting);
     * }
     */
    public static void gtk_entry_set_has_frame(MemorySegment entry, int setting) {
        var mh$ = gtk_entry_set_has_frame$MH();
        try {
            mh$.invokeExact(entry, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_entry_get_has_frame$MH,"gtk_entry_get_has_frame");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_get_has_frame(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_has_frame(MemorySegment entry) {
        var mh$ = gtk_entry_get_has_frame$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_entry_set_overwrite_mode$MH,"gtk_entry_set_overwrite_mode");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_overwrite_mode(GtkEntry* entry, gboolean overwrite);
     * }
     */
    public static void gtk_entry_set_overwrite_mode(MemorySegment entry, int overwrite) {
        var mh$ = gtk_entry_set_overwrite_mode$MH();
        try {
            mh$.invokeExact(entry, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_entry_get_overwrite_mode$MH,"gtk_entry_get_overwrite_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_get_overwrite_mode(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_overwrite_mode(MemorySegment entry) {
        var mh$ = gtk_entry_get_overwrite_mode$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_entry_set_max_length$MH,"gtk_entry_set_max_length");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_max_length(GtkEntry* entry, int max);
     * }
     */
    public static void gtk_entry_set_max_length(MemorySegment entry, int max) {
        var mh$ = gtk_entry_set_max_length$MH();
        try {
            mh$.invokeExact(entry, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_entry_get_max_length$MH,"gtk_entry_get_max_length");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_max_length(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_max_length(MemorySegment entry) {
        var mh$ = gtk_entry_get_max_length$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_text_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_entry_get_text_length$MH,"gtk_entry_get_text_length");
    }
    /**
     * {@snippet :
     * guint16 gtk_entry_get_text_length(GtkEntry* entry);
     * }
     */
    public static short gtk_entry_get_text_length(MemorySegment entry) {
        var mh$ = gtk_entry_get_text_length$MH();
        try {
            return (short)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_entry_set_activates_default$MH,"gtk_entry_set_activates_default");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_activates_default(GtkEntry* entry, gboolean setting);
     * }
     */
    public static void gtk_entry_set_activates_default(MemorySegment entry, int setting) {
        var mh$ = gtk_entry_set_activates_default$MH();
        try {
            mh$.invokeExact(entry, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_entry_get_activates_default$MH,"gtk_entry_get_activates_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_get_activates_default(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_activates_default(MemorySegment entry) {
        var mh$ = gtk_entry_get_activates_default$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_entry_set_alignment$MH,"gtk_entry_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_alignment(GtkEntry* entry, float xalign);
     * }
     */
    public static void gtk_entry_set_alignment(MemorySegment entry, float xalign) {
        var mh$ = gtk_entry_set_alignment$MH();
        try {
            mh$.invokeExact(entry, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_entry_get_alignment$MH,"gtk_entry_get_alignment");
    }
    /**
     * {@snippet :
     * float gtk_entry_get_alignment(GtkEntry* entry);
     * }
     */
    public static float gtk_entry_get_alignment(MemorySegment entry) {
        var mh$ = gtk_entry_get_alignment$MH();
        try {
            return (float)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_entry_set_completion$MH,"gtk_entry_set_completion");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_completion(GtkEntry* entry, GtkEntryCompletion* completion);
     * }
     */
    public static void gtk_entry_set_completion(MemorySegment entry, MemorySegment completion) {
        var mh$ = gtk_entry_set_completion$MH();
        try {
            mh$.invokeExact(entry, completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_entry_get_completion$MH,"gtk_entry_get_completion");
    }
    /**
     * {@snippet :
     * GtkEntryCompletion* gtk_entry_get_completion(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_completion(MemorySegment entry) {
        var mh$ = gtk_entry_get_completion$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_progress_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_entry_set_progress_fraction$MH,"gtk_entry_set_progress_fraction");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_progress_fraction(GtkEntry* entry, double fraction);
     * }
     */
    public static void gtk_entry_set_progress_fraction(MemorySegment entry, double fraction) {
        var mh$ = gtk_entry_set_progress_fraction$MH();
        try {
            mh$.invokeExact(entry, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_progress_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_entry_get_progress_fraction$MH,"gtk_entry_get_progress_fraction");
    }
    /**
     * {@snippet :
     * double gtk_entry_get_progress_fraction(GtkEntry* entry);
     * }
     */
    public static double gtk_entry_get_progress_fraction(MemorySegment entry) {
        var mh$ = gtk_entry_get_progress_fraction$MH();
        try {
            return (double)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_progress_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_entry_set_progress_pulse_step$MH,"gtk_entry_set_progress_pulse_step");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_progress_pulse_step(GtkEntry* entry, double fraction);
     * }
     */
    public static void gtk_entry_set_progress_pulse_step(MemorySegment entry, double fraction) {
        var mh$ = gtk_entry_set_progress_pulse_step$MH();
        try {
            mh$.invokeExact(entry, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_progress_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_entry_get_progress_pulse_step$MH,"gtk_entry_get_progress_pulse_step");
    }
    /**
     * {@snippet :
     * double gtk_entry_get_progress_pulse_step(GtkEntry* entry);
     * }
     */
    public static double gtk_entry_get_progress_pulse_step(MemorySegment entry) {
        var mh$ = gtk_entry_get_progress_pulse_step$MH();
        try {
            return (double)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_progress_pulse$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_entry_progress_pulse$MH,"gtk_entry_progress_pulse");
    }
    /**
     * {@snippet :
     * void gtk_entry_progress_pulse(GtkEntry* entry);
     * }
     */
    public static void gtk_entry_progress_pulse(MemorySegment entry) {
        var mh$ = gtk_entry_progress_pulse$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_entry_get_placeholder_text$MH,"gtk_entry_get_placeholder_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_placeholder_text(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_placeholder_text(MemorySegment entry) {
        var mh$ = gtk_entry_get_placeholder_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_entry_set_placeholder_text$MH,"gtk_entry_set_placeholder_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_placeholder_text(GtkEntry* entry, char* text);
     * }
     */
    public static void gtk_entry_set_placeholder_text(MemorySegment entry, MemorySegment text) {
        var mh$ = gtk_entry_set_placeholder_text$MH();
        try {
            mh$.invokeExact(entry, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_entry_set_icon_from_paintable$MH,"gtk_entry_set_icon_from_paintable");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_paintable(GtkEntry* entry, GtkEntryIconPosition icon_pos, GdkPaintable* paintable);
     * }
     */
    public static void gtk_entry_set_icon_from_paintable(MemorySegment entry, int icon_pos, MemorySegment paintable) {
        var mh$ = gtk_entry_set_icon_from_paintable$MH();
        try {
            mh$.invokeExact(entry, icon_pos, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_entry_set_icon_from_icon_name$MH,"gtk_entry_set_icon_from_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_icon_name(GtkEntry* entry, GtkEntryIconPosition icon_pos, char* icon_name);
     * }
     */
    public static void gtk_entry_set_icon_from_icon_name(MemorySegment entry, int icon_pos, MemorySegment icon_name) {
        var mh$ = gtk_entry_set_icon_from_icon_name$MH();
        try {
            mh$.invokeExact(entry, icon_pos, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_entry_set_icon_from_gicon$MH,"gtk_entry_set_icon_from_gicon");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_gicon(GtkEntry* entry, GtkEntryIconPosition icon_pos, GIcon* icon);
     * }
     */
    public static void gtk_entry_set_icon_from_gicon(MemorySegment entry, int icon_pos, MemorySegment icon) {
        var mh$ = gtk_entry_set_icon_from_gicon$MH();
        try {
            mh$.invokeExact(entry, icon_pos, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_storage_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_entry_get_icon_storage_type$MH,"gtk_entry_get_icon_storage_type");
    }
    /**
     * {@snippet :
     * GtkImageType gtk_entry_get_icon_storage_type(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static int gtk_entry_get_icon_storage_type(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_storage_type$MH();
        try {
            return (int)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_entry_get_icon_paintable$MH,"gtk_entry_get_icon_paintable");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_entry_get_icon_paintable(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_paintable(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_entry_get_icon_name$MH,"gtk_entry_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_name(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_name(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_entry_get_icon_gicon$MH,"gtk_entry_get_icon_gicon");
    }
    /**
     * {@snippet :
     * GIcon* gtk_entry_get_icon_gicon(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_gicon(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_entry_set_icon_activatable$MH,"gtk_entry_set_icon_activatable");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_activatable(GtkEntry* entry, GtkEntryIconPosition icon_pos, gboolean activatable);
     * }
     */
    public static void gtk_entry_set_icon_activatable(MemorySegment entry, int icon_pos, int activatable) {
        var mh$ = gtk_entry_set_icon_activatable$MH();
        try {
            mh$.invokeExact(entry, icon_pos, activatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_entry_get_icon_activatable$MH,"gtk_entry_get_icon_activatable");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_get_icon_activatable(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static int gtk_entry_get_icon_activatable(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_activatable$MH();
        try {
            return (int)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_entry_set_icon_sensitive$MH,"gtk_entry_set_icon_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_sensitive(GtkEntry* entry, GtkEntryIconPosition icon_pos, gboolean sensitive);
     * }
     */
    public static void gtk_entry_set_icon_sensitive(MemorySegment entry, int icon_pos, int sensitive) {
        var mh$ = gtk_entry_set_icon_sensitive$MH();
        try {
            mh$.invokeExact(entry, icon_pos, sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_entry_get_icon_sensitive$MH,"gtk_entry_get_icon_sensitive");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_get_icon_sensitive(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static int gtk_entry_get_icon_sensitive(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_sensitive$MH();
        try {
            return (int)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_entry_get_icon_at_pos$MH,"gtk_entry_get_icon_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_icon_at_pos(GtkEntry* entry, int x, int y);
     * }
     */
    public static int gtk_entry_get_icon_at_pos(MemorySegment entry, int x, int y) {
        var mh$ = gtk_entry_get_icon_at_pos$MH();
        try {
            return (int)mh$.invokeExact(entry, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_entry_set_icon_tooltip_text$MH,"gtk_entry_set_icon_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_tooltip_text(GtkEntry* entry, GtkEntryIconPosition icon_pos, char* tooltip);
     * }
     */
    public static void gtk_entry_set_icon_tooltip_text(MemorySegment entry, int icon_pos, MemorySegment tooltip) {
        var mh$ = gtk_entry_set_icon_tooltip_text$MH();
        try {
            mh$.invokeExact(entry, icon_pos, tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_entry_get_icon_tooltip_text$MH,"gtk_entry_get_icon_tooltip_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_tooltip_text(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_tooltip_text(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_tooltip_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_entry_set_icon_tooltip_markup$MH,"gtk_entry_set_icon_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_tooltip_markup(GtkEntry* entry, GtkEntryIconPosition icon_pos, char* tooltip);
     * }
     */
    public static void gtk_entry_set_icon_tooltip_markup(MemorySegment entry, int icon_pos, MemorySegment tooltip) {
        var mh$ = gtk_entry_set_icon_tooltip_markup$MH();
        try {
            mh$.invokeExact(entry, icon_pos, tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_entry_get_icon_tooltip_markup$MH,"gtk_entry_get_icon_tooltip_markup");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_tooltip_markup(GtkEntry* entry, GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_tooltip_markup(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_tooltip_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_entry_set_icon_drag_source$MH,"gtk_entry_set_icon_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_drag_source(GtkEntry* entry, GtkEntryIconPosition icon_pos, GdkContentProvider* provider, GdkDragAction actions);
     * }
     */
    public static void gtk_entry_set_icon_drag_source(MemorySegment entry, int icon_pos, MemorySegment provider, int actions) {
        var mh$ = gtk_entry_set_icon_drag_source$MH();
        try {
            mh$.invokeExact(entry, icon_pos, provider, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_current_icon_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_entry_get_current_icon_drag_source$MH,"gtk_entry_get_current_icon_drag_source");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_current_icon_drag_source(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_current_icon_drag_source(MemorySegment entry) {
        var mh$ = gtk_entry_get_current_icon_drag_source$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_entry_get_icon_area$MH,"gtk_entry_get_icon_area");
    }
    /**
     * {@snippet :
     * void gtk_entry_get_icon_area(GtkEntry* entry, GtkEntryIconPosition icon_pos, GdkRectangle* icon_area);
     * }
     */
    public static void gtk_entry_get_icon_area(MemorySegment entry, int icon_pos, MemorySegment icon_area) {
        var mh$ = gtk_entry_get_icon_area$MH();
        try {
            mh$.invokeExact(entry, icon_pos, icon_area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_reset_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_entry_reset_im_context$MH,"gtk_entry_reset_im_context");
    }
    /**
     * {@snippet :
     * void gtk_entry_reset_im_context(GtkEntry* entry);
     * }
     */
    public static void gtk_entry_reset_im_context(MemorySegment entry) {
        var mh$ = gtk_entry_reset_im_context$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_entry_set_input_purpose$MH,"gtk_entry_set_input_purpose");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_input_purpose(GtkEntry* entry, GtkInputPurpose purpose);
     * }
     */
    public static void gtk_entry_set_input_purpose(MemorySegment entry, int purpose) {
        var mh$ = gtk_entry_set_input_purpose$MH();
        try {
            mh$.invokeExact(entry, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_entry_get_input_purpose$MH,"gtk_entry_get_input_purpose");
    }
    /**
     * {@snippet :
     * GtkInputPurpose gtk_entry_get_input_purpose(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_input_purpose(MemorySegment entry) {
        var mh$ = gtk_entry_get_input_purpose$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_entry_set_input_hints$MH,"gtk_entry_set_input_hints");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_input_hints(GtkEntry* entry, GtkInputHints hints);
     * }
     */
    public static void gtk_entry_set_input_hints(MemorySegment entry, int hints) {
        var mh$ = gtk_entry_set_input_hints$MH();
        try {
            mh$.invokeExact(entry, hints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_entry_get_input_hints$MH,"gtk_entry_get_input_hints");
    }
    /**
     * {@snippet :
     * GtkInputHints gtk_entry_get_input_hints(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_input_hints(MemorySegment entry) {
        var mh$ = gtk_entry_get_input_hints$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_entry_set_attributes$MH,"gtk_entry_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_attributes(GtkEntry* entry, PangoAttrList* attrs);
     * }
     */
    public static void gtk_entry_set_attributes(MemorySegment entry, MemorySegment attrs) {
        var mh$ = gtk_entry_set_attributes$MH();
        try {
            mh$.invokeExact(entry, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_entry_get_attributes$MH,"gtk_entry_get_attributes");
    }
    /**
     * {@snippet :
     * PangoAttrList* gtk_entry_get_attributes(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_attributes(MemorySegment entry) {
        var mh$ = gtk_entry_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_entry_set_tabs$MH,"gtk_entry_set_tabs");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_tabs(GtkEntry* entry, PangoTabArray* tabs);
     * }
     */
    public static void gtk_entry_set_tabs(MemorySegment entry, MemorySegment tabs) {
        var mh$ = gtk_entry_set_tabs$MH();
        try {
            mh$.invokeExact(entry, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_entry_get_tabs$MH,"gtk_entry_get_tabs");
    }
    /**
     * {@snippet :
     * PangoTabArray* gtk_entry_get_tabs(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_tabs(MemorySegment entry) {
        var mh$ = gtk_entry_get_tabs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_grab_focus_without_selecting$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_entry_grab_focus_without_selecting$MH,"gtk_entry_grab_focus_without_selecting");
    }
    /**
     * {@snippet :
     * gboolean gtk_entry_grab_focus_without_selecting(GtkEntry* entry);
     * }
     */
    public static int gtk_entry_grab_focus_without_selecting(MemorySegment entry) {
        var mh$ = gtk_entry_grab_focus_without_selecting$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_entry_set_extra_menu$MH,"gtk_entry_set_extra_menu");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_extra_menu(GtkEntry* entry, GMenuModel* model);
     * }
     */
    public static void gtk_entry_set_extra_menu(MemorySegment entry, MemorySegment model) {
        var mh$ = gtk_entry_set_extra_menu$MH();
        try {
            mh$.invokeExact(entry, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_entry_get_extra_menu$MH,"gtk_entry_get_extra_menu");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_entry_get_extra_menu(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_extra_menu(MemorySegment entry) {
        var mh$ = gtk_entry_get_extra_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_BEFORE = 0;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_BEFORE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_AFTER = 1;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_AFTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_INTO_OR_BEFORE = 2;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_INTO_OR_BEFORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_INTO_OR_AFTER = 3;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_INTO_OR_AFTER() {
        return (int)3L;
    }
    public static MethodHandle gtk_tree_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_tree_view_get_type$MH,"gtk_tree_view_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_view_get_type();
     * }
     */
    public static long gtk_tree_view_get_type() {
        var mh$ = gtk_tree_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_tree_view_new$MH,"gtk_tree_view_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_new();
     * }
     */
    public static MemorySegment gtk_tree_view_new() {
        var mh$ = gtk_tree_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_tree_view_new_with_model$MH,"gtk_tree_view_new_with_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_new_with_model(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_tree_view_new_with_model(MemorySegment model) {
        var mh$ = gtk_tree_view_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_tree_view_get_model$MH,"gtk_tree_view_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_tree_view_get_model(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_model(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_tree_view_set_model$MH,"gtk_tree_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_model(GtkTreeView* tree_view, GtkTreeModel* model);
     * }
     */
    public static void gtk_tree_view_set_model(MemorySegment tree_view, MemorySegment model) {
        var mh$ = gtk_tree_view_set_model$MH();
        try {
            mh$.invokeExact(tree_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_tree_view_get_selection$MH,"gtk_tree_view_get_selection");
    }
    /**
     * {@snippet :
     * GtkTreeSelection* gtk_tree_view_get_selection(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_selection(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_headers_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_tree_view_get_headers_visible$MH,"gtk_tree_view_get_headers_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_headers_visible(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_headers_visible(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_headers_visible$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_headers_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_tree_view_set_headers_visible$MH,"gtk_tree_view_set_headers_visible");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_headers_visible(GtkTreeView* tree_view, gboolean headers_visible);
     * }
     */
    public static void gtk_tree_view_set_headers_visible(MemorySegment tree_view, int headers_visible) {
        var mh$ = gtk_tree_view_set_headers_visible$MH();
        try {
            mh$.invokeExact(tree_view, headers_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_columns_autosize$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_tree_view_columns_autosize$MH,"gtk_tree_view_columns_autosize");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_columns_autosize(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_columns_autosize(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_columns_autosize$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_headers_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_tree_view_get_headers_clickable$MH,"gtk_tree_view_get_headers_clickable");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_headers_clickable(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_headers_clickable(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_headers_clickable$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_headers_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_tree_view_set_headers_clickable$MH,"gtk_tree_view_set_headers_clickable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_headers_clickable(GtkTreeView* tree_view, gboolean setting);
     * }
     */
    public static void gtk_tree_view_set_headers_clickable(MemorySegment tree_view, int setting) {
        var mh$ = gtk_tree_view_set_headers_clickable$MH();
        try {
            mh$.invokeExact(tree_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_tree_view_get_activate_on_single_click$MH,"gtk_tree_view_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_activate_on_single_click(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_activate_on_single_click(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_tree_view_set_activate_on_single_click$MH,"gtk_tree_view_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_activate_on_single_click(GtkTreeView* tree_view, gboolean single);
     * }
     */
    public static void gtk_tree_view_set_activate_on_single_click(MemorySegment tree_view, int single) {
        var mh$ = gtk_tree_view_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(tree_view, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_append_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_tree_view_append_column$MH,"gtk_tree_view_append_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_append_column(GtkTreeView* tree_view, GtkTreeViewColumn* column);
     * }
     */
    public static int gtk_tree_view_append_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_append_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_tree_view_remove_column$MH,"gtk_tree_view_remove_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_remove_column(GtkTreeView* tree_view, GtkTreeViewColumn* column);
     * }
     */
    public static int gtk_tree_view_remove_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_remove_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_tree_view_insert_column$MH,"gtk_tree_view_insert_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_insert_column(GtkTreeView* tree_view, GtkTreeViewColumn* column, int position);
     * }
     */
    public static int gtk_tree_view_insert_column(MemorySegment tree_view, MemorySegment column, int position) {
        var mh$ = gtk_tree_view_insert_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column_with_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_tree_view_insert_column_with_attributes$MH,"gtk_tree_view_insert_column_with_attributes");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_insert_column_with_attributes(GtkTreeView* tree_view, int position, char* title, GtkCellRenderer* cell,...);
     * }
     */
    public static int gtk_tree_view_insert_column_with_attributes(MemorySegment tree_view, int position, MemorySegment title, MemorySegment cell, Object... x4) {
        var mh$ = gtk_tree_view_insert_column_with_attributes$MH();
        try {
            return (int)mh$.invokeExact(tree_view, position, title, cell, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column_with_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_tree_view_insert_column_with_data_func$MH,"gtk_tree_view_insert_column_with_data_func");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_insert_column_with_data_func(GtkTreeView* tree_view, int position, char* title, GtkCellRenderer* cell, GtkTreeCellDataFunc func, gpointer data, GDestroyNotify dnotify);
     * }
     */
    public static int gtk_tree_view_insert_column_with_data_func(MemorySegment tree_view, int position, MemorySegment title, MemorySegment cell, MemorySegment func, MemorySegment data, MemorySegment dnotify) {
        var mh$ = gtk_tree_view_insert_column_with_data_func$MH();
        try {
            return (int)mh$.invokeExact(tree_view, position, title, cell, func, data, dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_tree_view_get_n_columns$MH,"gtk_tree_view_get_n_columns");
    }
    /**
     * {@snippet :
     * guint gtk_tree_view_get_n_columns(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_n_columns(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_n_columns$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_tree_view_get_column$MH,"gtk_tree_view_get_column");
    }
    /**
     * {@snippet :
     * GtkTreeViewColumn* gtk_tree_view_get_column(GtkTreeView* tree_view, int n);
     * }
     */
    public static MemorySegment gtk_tree_view_get_column(MemorySegment tree_view, int n) {
        var mh$ = gtk_tree_view_get_column$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_tree_view_get_columns$MH,"gtk_tree_view_get_columns");
    }
    /**
     * {@snippet :
     * GList* gtk_tree_view_get_columns(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_columns(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_columns$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_move_column_after$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_tree_view_move_column_after$MH,"gtk_tree_view_move_column_after");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_move_column_after(GtkTreeView* tree_view, GtkTreeViewColumn* column, GtkTreeViewColumn* base_column);
     * }
     */
    public static void gtk_tree_view_move_column_after(MemorySegment tree_view, MemorySegment column, MemorySegment base_column) {
        var mh$ = gtk_tree_view_move_column_after$MH();
        try {
            mh$.invokeExact(tree_view, column, base_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_expander_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_tree_view_set_expander_column$MH,"gtk_tree_view_set_expander_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_expander_column(GtkTreeView* tree_view, GtkTreeViewColumn* column);
     * }
     */
    public static void gtk_tree_view_set_expander_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_set_expander_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_expander_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_tree_view_get_expander_column$MH,"gtk_tree_view_get_expander_column");
    }
    /**
     * {@snippet :
     * GtkTreeViewColumn* gtk_tree_view_get_expander_column(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_expander_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_expander_column$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_column_drag_function$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_tree_view_set_column_drag_function$MH,"gtk_tree_view_set_column_drag_function");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_column_drag_function(GtkTreeView* tree_view, GtkTreeViewColumnDropFunc func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_view_set_column_drag_function(MemorySegment tree_view, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_column_drag_function$MH();
        try {
            mh$.invokeExact(tree_view, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_scroll_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_tree_view_scroll_to_point$MH,"gtk_tree_view_scroll_to_point");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_scroll_to_point(GtkTreeView* tree_view, int tree_x, int tree_y);
     * }
     */
    public static void gtk_tree_view_scroll_to_point(MemorySegment tree_view, int tree_x, int tree_y) {
        var mh$ = gtk_tree_view_scroll_to_point$MH();
        try {
            mh$.invokeExact(tree_view, tree_x, tree_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_scroll_to_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_tree_view_scroll_to_cell$MH,"gtk_tree_view_scroll_to_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_scroll_to_cell(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, gboolean use_align, float row_align, float col_align);
     * }
     */
    public static void gtk_tree_view_scroll_to_cell(MemorySegment tree_view, MemorySegment path, MemorySegment column, int use_align, float row_align, float col_align) {
        var mh$ = gtk_tree_view_scroll_to_cell$MH();
        try {
            mh$.invokeExact(tree_view, path, column, use_align, row_align, col_align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_row_activated$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_tree_view_row_activated$MH,"gtk_tree_view_row_activated");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_row_activated(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column);
     * }
     */
    public static void gtk_tree_view_row_activated(MemorySegment tree_view, MemorySegment path, MemorySegment column) {
        var mh$ = gtk_tree_view_row_activated$MH();
        try {
            mh$.invokeExact(tree_view, path, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_tree_view_expand_all$MH,"gtk_tree_view_expand_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_expand_all(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_expand_all(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_expand_all$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_collapse_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_tree_view_collapse_all$MH,"gtk_tree_view_collapse_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_collapse_all(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_collapse_all(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_collapse_all$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_tree_view_expand_to_path$MH,"gtk_tree_view_expand_to_path");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_expand_to_path(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static void gtk_tree_view_expand_to_path(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_expand_to_path$MH();
        try {
            mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_tree_view_expand_row$MH,"gtk_tree_view_expand_row");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_expand_row(GtkTreeView* tree_view, GtkTreePath* path, gboolean open_all);
     * }
     */
    public static int gtk_tree_view_expand_row(MemorySegment tree_view, MemorySegment path, int open_all) {
        var mh$ = gtk_tree_view_expand_row$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path, open_all);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_collapse_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_tree_view_collapse_row$MH,"gtk_tree_view_collapse_row");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_collapse_row(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static int gtk_tree_view_collapse_row(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_collapse_row$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_map_expanded_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_tree_view_map_expanded_rows$MH,"gtk_tree_view_map_expanded_rows");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_map_expanded_rows(GtkTreeView* tree_view, GtkTreeViewMappingFunc func, gpointer data);
     * }
     */
    public static void gtk_tree_view_map_expanded_rows(MemorySegment tree_view, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_tree_view_map_expanded_rows$MH();
        try {
            mh$.invokeExact(tree_view, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_row_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_tree_view_row_expanded$MH,"gtk_tree_view_row_expanded");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_row_expanded(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static int gtk_tree_view_row_expanded(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_row_expanded$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_tree_view_set_reorderable$MH,"gtk_tree_view_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_reorderable(GtkTreeView* tree_view, gboolean reorderable);
     * }
     */
    public static void gtk_tree_view_set_reorderable(MemorySegment tree_view, int reorderable) {
        var mh$ = gtk_tree_view_set_reorderable$MH();
        try {
            mh$.invokeExact(tree_view, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_tree_view_get_reorderable$MH,"gtk_tree_view_get_reorderable");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_reorderable(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_reorderable(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_tree_view_set_cursor$MH,"gtk_tree_view_set_cursor");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_cursor(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* focus_column, gboolean start_editing);
     * }
     */
    public static void gtk_tree_view_set_cursor(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column, int start_editing) {
        var mh$ = gtk_tree_view_set_cursor$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_cursor_on_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_tree_view_set_cursor_on_cell$MH,"gtk_tree_view_set_cursor_on_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_cursor_on_cell(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* focus_column, GtkCellRenderer* focus_cell, gboolean start_editing);
     * }
     */
    public static void gtk_tree_view_set_cursor_on_cell(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column, MemorySegment focus_cell, int start_editing) {
        var mh$ = gtk_tree_view_set_cursor_on_cell$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column, focus_cell, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_tree_view_get_cursor$MH,"gtk_tree_view_get_cursor");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_cursor(GtkTreeView* tree_view, GtkTreePath** path, GtkTreeViewColumn** focus_column);
     * }
     */
    public static void gtk_tree_view_get_cursor(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column) {
        var mh$ = gtk_tree_view_get_cursor$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_path_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_tree_view_get_path_at_pos$MH,"gtk_tree_view_get_path_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_path_at_pos(GtkTreeView* tree_view, int x, int y, GtkTreePath** path, GtkTreeViewColumn** column, int* cell_x, int* cell_y);
     * }
     */
    public static int gtk_tree_view_get_path_at_pos(MemorySegment tree_view, int x, int y, MemorySegment path, MemorySegment column, MemorySegment cell_x, MemorySegment cell_y) {
        var mh$ = gtk_tree_view_get_path_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, path, column, cell_x, cell_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_cell_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_tree_view_get_cell_area$MH,"gtk_tree_view_get_cell_area");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_cell_area(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, GdkRectangle* rect);
     * }
     */
    public static void gtk_tree_view_get_cell_area(MemorySegment tree_view, MemorySegment path, MemorySegment column, MemorySegment rect) {
        var mh$ = gtk_tree_view_get_cell_area$MH();
        try {
            mh$.invokeExact(tree_view, path, column, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_background_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_tree_view_get_background_area$MH,"gtk_tree_view_get_background_area");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_background_area(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, GdkRectangle* rect);
     * }
     */
    public static void gtk_tree_view_get_background_area(MemorySegment tree_view, MemorySegment path, MemorySegment column, MemorySegment rect) {
        var mh$ = gtk_tree_view_get_background_area$MH();
        try {
            mh$.invokeExact(tree_view, path, column, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_visible_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_tree_view_get_visible_rect$MH,"gtk_tree_view_get_visible_rect");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_visible_rect(GtkTreeView* tree_view, GdkRectangle* visible_rect);
     * }
     */
    public static void gtk_tree_view_get_visible_rect(MemorySegment tree_view, MemorySegment visible_rect) {
        var mh$ = gtk_tree_view_get_visible_rect$MH();
        try {
            mh$.invokeExact(tree_view, visible_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_visible_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_tree_view_get_visible_range$MH,"gtk_tree_view_get_visible_range");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_visible_range(GtkTreeView* tree_view, GtkTreePath** start_path, GtkTreePath** end_path);
     * }
     */
    public static int gtk_tree_view_get_visible_range(MemorySegment tree_view, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_tree_view_get_visible_range$MH();
        try {
            return (int)mh$.invokeExact(tree_view, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_is_blank_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_tree_view_is_blank_at_pos$MH,"gtk_tree_view_is_blank_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_is_blank_at_pos(GtkTreeView* tree_view, int x, int y, GtkTreePath** path, GtkTreeViewColumn** column, int* cell_x, int* cell_y);
     * }
     */
    public static int gtk_tree_view_is_blank_at_pos(MemorySegment tree_view, int x, int y, MemorySegment path, MemorySegment column, MemorySegment cell_x, MemorySegment cell_y) {
        var mh$ = gtk_tree_view_is_blank_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, path, column, cell_x, cell_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_enable_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_tree_view_enable_model_drag_source$MH,"gtk_tree_view_enable_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_enable_model_drag_source(GtkTreeView* tree_view, GdkModifierType start_button_mask, GdkContentFormats* formats, GdkDragAction actions);
     * }
     */
    public static void gtk_tree_view_enable_model_drag_source(MemorySegment tree_view, int start_button_mask, MemorySegment formats, int actions) {
        var mh$ = gtk_tree_view_enable_model_drag_source$MH();
        try {
            mh$.invokeExact(tree_view, start_button_mask, formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_enable_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_tree_view_enable_model_drag_dest$MH,"gtk_tree_view_enable_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_enable_model_drag_dest(GtkTreeView* tree_view, GdkContentFormats* formats, GdkDragAction actions);
     * }
     */
    public static void gtk_tree_view_enable_model_drag_dest(MemorySegment tree_view, MemorySegment formats, int actions) {
        var mh$ = gtk_tree_view_enable_model_drag_dest$MH();
        try {
            mh$.invokeExact(tree_view, formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_unset_rows_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_tree_view_unset_rows_drag_source$MH,"gtk_tree_view_unset_rows_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_unset_rows_drag_source(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_unset_rows_drag_source(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_unset_rows_drag_source$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_unset_rows_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_tree_view_unset_rows_drag_dest$MH,"gtk_tree_view_unset_rows_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_unset_rows_drag_dest(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_unset_rows_drag_dest(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_unset_rows_drag_dest$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_drag_dest_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_tree_view_set_drag_dest_row$MH,"gtk_tree_view_set_drag_dest_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_drag_dest_row(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewDropPosition pos);
     * }
     */
    public static void gtk_tree_view_set_drag_dest_row(MemorySegment tree_view, MemorySegment path, int pos) {
        var mh$ = gtk_tree_view_set_drag_dest_row$MH();
        try {
            mh$.invokeExact(tree_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_drag_dest_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_tree_view_get_drag_dest_row$MH,"gtk_tree_view_get_drag_dest_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_drag_dest_row(GtkTreeView* tree_view, GtkTreePath** path, GtkTreeViewDropPosition* pos);
     * }
     */
    public static void gtk_tree_view_get_drag_dest_row(MemorySegment tree_view, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_tree_view_get_drag_dest_row$MH();
        try {
            mh$.invokeExact(tree_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_dest_row_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_tree_view_get_dest_row_at_pos$MH,"gtk_tree_view_get_dest_row_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_dest_row_at_pos(GtkTreeView* tree_view, int drag_x, int drag_y, GtkTreePath** path, GtkTreeViewDropPosition* pos);
     * }
     */
    public static int gtk_tree_view_get_dest_row_at_pos(MemorySegment tree_view, int drag_x, int drag_y, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_tree_view_get_dest_row_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, drag_x, drag_y, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_create_row_drag_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_tree_view_create_row_drag_icon$MH,"gtk_tree_view_create_row_drag_icon");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_tree_view_create_row_drag_icon(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_view_create_row_drag_icon(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_create_row_drag_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_tree_view_set_enable_search$MH,"gtk_tree_view_set_enable_search");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_enable_search(GtkTreeView* tree_view, gboolean enable_search);
     * }
     */
    public static void gtk_tree_view_set_enable_search(MemorySegment tree_view, int enable_search) {
        var mh$ = gtk_tree_view_set_enable_search$MH();
        try {
            mh$.invokeExact(tree_view, enable_search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_tree_view_get_enable_search$MH,"gtk_tree_view_get_enable_search");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_enable_search(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_enable_search(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_enable_search$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_tree_view_get_search_column$MH,"gtk_tree_view_get_search_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_search_column(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_search_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_tree_view_set_search_column$MH,"gtk_tree_view_set_search_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_column(GtkTreeView* tree_view, int column);
     * }
     */
    public static void gtk_tree_view_set_search_column(MemorySegment tree_view, int column) {
        var mh$ = gtk_tree_view_set_search_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_tree_view_get_search_equal_func$MH,"gtk_tree_view_get_search_equal_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewSearchEqualFunc gtk_tree_view_get_search_equal_func(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_equal_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_equal_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_tree_view_set_search_equal_func$MH,"gtk_tree_view_set_search_equal_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_equal_func(GtkTreeView* tree_view, GtkTreeViewSearchEqualFunc search_equal_func, gpointer search_user_data, GDestroyNotify search_destroy);
     * }
     */
    public static void gtk_tree_view_set_search_equal_func(MemorySegment tree_view, MemorySegment search_equal_func, MemorySegment search_user_data, MemorySegment search_destroy) {
        var mh$ = gtk_tree_view_set_search_equal_func$MH();
        try {
            mh$.invokeExact(tree_view, search_equal_func, search_user_data, search_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_tree_view_get_search_entry$MH,"gtk_tree_view_get_search_entry");
    }
    /**
     * {@snippet :
     * GtkEditable* gtk_tree_view_get_search_entry(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_entry(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_tree_view_set_search_entry$MH,"gtk_tree_view_set_search_entry");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_entry(GtkTreeView* tree_view, GtkEditable* entry);
     * }
     */
    public static void gtk_tree_view_set_search_entry(MemorySegment tree_view, MemorySegment entry) {
        var mh$ = gtk_tree_view_set_search_entry$MH();
        try {
            mh$.invokeExact(tree_view, entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_widget_to_tree_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_tree_view_convert_widget_to_tree_coords$MH,"gtk_tree_view_convert_widget_to_tree_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_widget_to_tree_coords(GtkTreeView* tree_view, int wx, int wy, int* tx, int* ty);
     * }
     */
    public static void gtk_tree_view_convert_widget_to_tree_coords(MemorySegment tree_view, int wx, int wy, MemorySegment tx, MemorySegment ty) {
        var mh$ = gtk_tree_view_convert_widget_to_tree_coords$MH();
        try {
            mh$.invokeExact(tree_view, wx, wy, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_tree_to_widget_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_tree_view_convert_tree_to_widget_coords$MH,"gtk_tree_view_convert_tree_to_widget_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_tree_to_widget_coords(GtkTreeView* tree_view, int tx, int ty, int* wx, int* wy);
     * }
     */
    public static void gtk_tree_view_convert_tree_to_widget_coords(MemorySegment tree_view, int tx, int ty, MemorySegment wx, MemorySegment wy) {
        var mh$ = gtk_tree_view_convert_tree_to_widget_coords$MH();
        try {
            mh$.invokeExact(tree_view, tx, ty, wx, wy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_widget_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_tree_view_convert_widget_to_bin_window_coords$MH,"gtk_tree_view_convert_widget_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_widget_to_bin_window_coords(GtkTreeView* tree_view, int wx, int wy, int* bx, int* by);
     * }
     */
    public static void gtk_tree_view_convert_widget_to_bin_window_coords(MemorySegment tree_view, int wx, int wy, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_tree_view_convert_widget_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(tree_view, wx, wy, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_bin_window_to_widget_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_tree_view_convert_bin_window_to_widget_coords$MH,"gtk_tree_view_convert_bin_window_to_widget_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_bin_window_to_widget_coords(GtkTreeView* tree_view, int bx, int by, int* wx, int* wy);
     * }
     */
    public static void gtk_tree_view_convert_bin_window_to_widget_coords(MemorySegment tree_view, int bx, int by, MemorySegment wx, MemorySegment wy) {
        var mh$ = gtk_tree_view_convert_bin_window_to_widget_coords$MH();
        try {
            mh$.invokeExact(tree_view, bx, by, wx, wy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_tree_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_tree_view_convert_tree_to_bin_window_coords$MH,"gtk_tree_view_convert_tree_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_tree_to_bin_window_coords(GtkTreeView* tree_view, int tx, int ty, int* bx, int* by);
     * }
     */
    public static void gtk_tree_view_convert_tree_to_bin_window_coords(MemorySegment tree_view, int tx, int ty, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_tree_view_convert_tree_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(tree_view, tx, ty, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_bin_window_to_tree_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_tree_view_convert_bin_window_to_tree_coords$MH,"gtk_tree_view_convert_bin_window_to_tree_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_bin_window_to_tree_coords(GtkTreeView* tree_view, int bx, int by, int* tx, int* ty);
     * }
     */
    public static void gtk_tree_view_convert_bin_window_to_tree_coords(MemorySegment tree_view, int bx, int by, MemorySegment tx, MemorySegment ty) {
        var mh$ = gtk_tree_view_convert_bin_window_to_tree_coords$MH();
        try {
            mh$.invokeExact(tree_view, bx, by, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_fixed_height_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_tree_view_set_fixed_height_mode$MH,"gtk_tree_view_set_fixed_height_mode");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_fixed_height_mode(GtkTreeView* tree_view, gboolean enable);
     * }
     */
    public static void gtk_tree_view_set_fixed_height_mode(MemorySegment tree_view, int enable) {
        var mh$ = gtk_tree_view_set_fixed_height_mode$MH();
        try {
            mh$.invokeExact(tree_view, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_fixed_height_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_tree_view_get_fixed_height_mode$MH,"gtk_tree_view_get_fixed_height_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_fixed_height_mode(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_fixed_height_mode(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_fixed_height_mode$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hover_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_tree_view_set_hover_selection$MH,"gtk_tree_view_set_hover_selection");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hover_selection(GtkTreeView* tree_view, gboolean hover);
     * }
     */
    public static void gtk_tree_view_set_hover_selection(MemorySegment tree_view, int hover) {
        var mh$ = gtk_tree_view_set_hover_selection$MH();
        try {
            mh$.invokeExact(tree_view, hover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hover_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.gtk_tree_view_get_hover_selection$MH,"gtk_tree_view_get_hover_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_hover_selection(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_hover_selection(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hover_selection$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hover_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.gtk_tree_view_set_hover_expand$MH,"gtk_tree_view_set_hover_expand");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hover_expand(GtkTreeView* tree_view, gboolean expand);
     * }
     */
    public static void gtk_tree_view_set_hover_expand(MemorySegment tree_view, int expand) {
        var mh$ = gtk_tree_view_set_hover_expand$MH();
        try {
            mh$.invokeExact(tree_view, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hover_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.gtk_tree_view_get_hover_expand$MH,"gtk_tree_view_get_hover_expand");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_hover_expand(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_hover_expand(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hover_expand$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_rubber_banding$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.gtk_tree_view_set_rubber_banding$MH,"gtk_tree_view_set_rubber_banding");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_rubber_banding(GtkTreeView* tree_view, gboolean enable);
     * }
     */
    public static void gtk_tree_view_set_rubber_banding(MemorySegment tree_view, int enable) {
        var mh$ = gtk_tree_view_set_rubber_banding$MH();
        try {
            mh$.invokeExact(tree_view, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_rubber_banding$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.gtk_tree_view_get_rubber_banding$MH,"gtk_tree_view_get_rubber_banding");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_rubber_banding(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_rubber_banding(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_rubber_banding$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_is_rubber_banding_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.gtk_tree_view_is_rubber_banding_active$MH,"gtk_tree_view_is_rubber_banding_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_is_rubber_banding_active(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_is_rubber_banding_active(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_is_rubber_banding_active$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.gtk_tree_view_get_row_separator_func$MH,"gtk_tree_view_get_row_separator_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewRowSeparatorFunc gtk_tree_view_get_row_separator_func(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_row_separator_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.gtk_tree_view_set_row_separator_func$MH,"gtk_tree_view_set_row_separator_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_row_separator_func(GtkTreeView* tree_view, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_view_set_row_separator_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_row_separator_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_grid_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.gtk_tree_view_get_grid_lines$MH,"gtk_tree_view_get_grid_lines");
    }
    /**
     * {@snippet :
     * GtkTreeViewGridLines gtk_tree_view_get_grid_lines(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_grid_lines(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_grid_lines$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_grid_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.gtk_tree_view_set_grid_lines$MH,"gtk_tree_view_set_grid_lines");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_grid_lines(GtkTreeView* tree_view, GtkTreeViewGridLines grid_lines);
     * }
     */
    public static void gtk_tree_view_set_grid_lines(MemorySegment tree_view, int grid_lines) {
        var mh$ = gtk_tree_view_set_grid_lines$MH();
        try {
            mh$.invokeExact(tree_view, grid_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_enable_tree_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.gtk_tree_view_get_enable_tree_lines$MH,"gtk_tree_view_get_enable_tree_lines");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_enable_tree_lines(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_enable_tree_lines(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_enable_tree_lines$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_enable_tree_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.gtk_tree_view_set_enable_tree_lines$MH,"gtk_tree_view_set_enable_tree_lines");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_enable_tree_lines(GtkTreeView* tree_view, gboolean enabled);
     * }
     */
    public static void gtk_tree_view_set_enable_tree_lines(MemorySegment tree_view, int enabled) {
        var mh$ = gtk_tree_view_set_enable_tree_lines$MH();
        try {
            mh$.invokeExact(tree_view, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_show_expanders$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_tree_view_set_show_expanders$MH,"gtk_tree_view_set_show_expanders");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_show_expanders(GtkTreeView* tree_view, gboolean enabled);
     * }
     */
    public static void gtk_tree_view_set_show_expanders(MemorySegment tree_view, int enabled) {
        var mh$ = gtk_tree_view_set_show_expanders$MH();
        try {
            mh$.invokeExact(tree_view, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_show_expanders$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_tree_view_get_show_expanders$MH,"gtk_tree_view_get_show_expanders");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_show_expanders(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_show_expanders(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_show_expanders$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_level_indentation$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_tree_view_set_level_indentation$MH,"gtk_tree_view_set_level_indentation");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_level_indentation(GtkTreeView* tree_view, int indentation);
     * }
     */
    public static void gtk_tree_view_set_level_indentation(MemorySegment tree_view, int indentation) {
        var mh$ = gtk_tree_view_set_level_indentation$MH();
        try {
            mh$.invokeExact(tree_view, indentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_level_indentation$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_tree_view_get_level_indentation$MH,"gtk_tree_view_get_level_indentation");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_level_indentation(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_level_indentation(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_level_indentation$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_tree_view_set_tooltip_row$MH,"gtk_tree_view_set_tooltip_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_row(GtkTreeView* tree_view, GtkTooltip* tooltip, GtkTreePath* path);
     * }
     */
    public static void gtk_tree_view_set_tooltip_row(MemorySegment tree_view, MemorySegment tooltip, MemorySegment path) {
        var mh$ = gtk_tree_view_set_tooltip_row$MH();
        try {
            mh$.invokeExact(tree_view, tooltip, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_tree_view_set_tooltip_cell$MH,"gtk_tree_view_set_tooltip_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_cell(GtkTreeView* tree_view, GtkTooltip* tooltip, GtkTreePath* path, GtkTreeViewColumn* column, GtkCellRenderer* cell);
     * }
     */
    public static void gtk_tree_view_set_tooltip_cell(MemorySegment tree_view, MemorySegment tooltip, MemorySegment path, MemorySegment column, MemorySegment cell) {
        var mh$ = gtk_tree_view_set_tooltip_cell$MH();
        try {
            mh$.invokeExact(tree_view, tooltip, path, column, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_tooltip_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_tree_view_get_tooltip_context$MH,"gtk_tree_view_get_tooltip_context");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_tooltip_context(GtkTreeView* tree_view, int x, int y, gboolean keyboard_tip, GtkTreeModel** model, GtkTreePath** path, GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_view_get_tooltip_context(MemorySegment tree_view, int x, int y, int keyboard_tip, MemorySegment model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_tree_view_get_tooltip_context$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, keyboard_tip, model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_tree_view_set_tooltip_column$MH,"gtk_tree_view_set_tooltip_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_column(GtkTreeView* tree_view, int column);
     * }
     */
    public static void gtk_tree_view_set_tooltip_column(MemorySegment tree_view, int column) {
        var mh$ = gtk_tree_view_set_tooltip_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_tree_view_get_tooltip_column$MH,"gtk_tree_view_get_tooltip_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_tooltip_column(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_tooltip_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_tooltip_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_combo_box_get_type$MH,"gtk_combo_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_combo_box_get_type();
     * }
     */
    public static long gtk_combo_box_get_type() {
        var mh$ = gtk_combo_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_combo_box_new$MH,"gtk_combo_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new();
     * }
     */
    public static MemorySegment gtk_combo_box_new() {
        var mh$ = gtk_combo_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_combo_box_new_with_entry$MH,"gtk_combo_box_new_with_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_entry();
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_entry() {
        var mh$ = gtk_combo_box_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_combo_box_new_with_model$MH,"gtk_combo_box_new_with_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_model(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_model(MemorySegment model) {
        var mh$ = gtk_combo_box_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_model_and_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_combo_box_new_with_model_and_entry$MH,"gtk_combo_box_new_with_model_and_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_model_and_entry(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_model_and_entry(MemorySegment model) {
        var mh$ = gtk_combo_box_new_with_model_and_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_combo_box_get_active$MH,"gtk_combo_box_get_active");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_active(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_active(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_active$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_combo_box_set_active$MH,"gtk_combo_box_set_active");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_active(GtkComboBox* combo_box, int index_);
     * }
     */
    public static void gtk_combo_box_set_active(MemorySegment combo_box, int index_) {
        var mh$ = gtk_combo_box_set_active$MH();
        try {
            mh$.invokeExact(combo_box, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_combo_box_get_active_iter$MH,"gtk_combo_box_get_active_iter");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_active_iter(GtkComboBox* combo_box, GtkTreeIter* iter);
     * }
     */
    public static int gtk_combo_box_get_active_iter(MemorySegment combo_box, MemorySegment iter) {
        var mh$ = gtk_combo_box_get_active_iter$MH();
        try {
            return (int)mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_combo_box_set_active_iter$MH,"gtk_combo_box_set_active_iter");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_active_iter(GtkComboBox* combo_box, GtkTreeIter* iter);
     * }
     */
    public static void gtk_combo_box_set_active_iter(MemorySegment combo_box, MemorySegment iter) {
        var mh$ = gtk_combo_box_set_active_iter$MH();
        try {
            mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_combo_box_set_model$MH,"gtk_combo_box_set_model");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_model(GtkComboBox* combo_box, GtkTreeModel* model);
     * }
     */
    public static void gtk_combo_box_set_model(MemorySegment combo_box, MemorySegment model) {
        var mh$ = gtk_combo_box_set_model$MH();
        try {
            mh$.invokeExact(combo_box, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_combo_box_get_model$MH,"gtk_combo_box_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_combo_box_get_model(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_model(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_combo_box_get_row_separator_func$MH,"gtk_combo_box_get_row_separator_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewRowSeparatorFunc gtk_combo_box_get_row_separator_func(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_row_separator_func(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_combo_box_set_row_separator_func$MH,"gtk_combo_box_set_row_separator_func");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_row_separator_func(GtkComboBox* combo_box, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_combo_box_set_row_separator_func(MemorySegment combo_box, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_combo_box_set_row_separator_func$MH();
        try {
            mh$.invokeExact(combo_box, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_combo_box_set_button_sensitivity$MH,"gtk_combo_box_set_button_sensitivity");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_button_sensitivity(GtkComboBox* combo_box, GtkSensitivityType sensitivity);
     * }
     */
    public static void gtk_combo_box_set_button_sensitivity(MemorySegment combo_box, int sensitivity) {
        var mh$ = gtk_combo_box_set_button_sensitivity$MH();
        try {
            mh$.invokeExact(combo_box, sensitivity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_combo_box_get_button_sensitivity$MH,"gtk_combo_box_get_button_sensitivity");
    }
    /**
     * {@snippet :
     * GtkSensitivityType gtk_combo_box_get_button_sensitivity(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_button_sensitivity(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_button_sensitivity$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_has_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_combo_box_get_has_entry$MH,"gtk_combo_box_get_has_entry");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_has_entry(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_has_entry(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_has_entry$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_combo_box_set_entry_text_column$MH,"gtk_combo_box_set_entry_text_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_entry_text_column(GtkComboBox* combo_box, int text_column);
     * }
     */
    public static void gtk_combo_box_set_entry_text_column(MemorySegment combo_box, int text_column) {
        var mh$ = gtk_combo_box_set_entry_text_column$MH();
        try {
            mh$.invokeExact(combo_box, text_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_combo_box_get_entry_text_column$MH,"gtk_combo_box_get_entry_text_column");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_entry_text_column(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_entry_text_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_entry_text_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_combo_box_set_popup_fixed_width$MH,"gtk_combo_box_set_popup_fixed_width");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_popup_fixed_width(GtkComboBox* combo_box, gboolean fixed);
     * }
     */
    public static void gtk_combo_box_set_popup_fixed_width(MemorySegment combo_box, int fixed) {
        var mh$ = gtk_combo_box_set_popup_fixed_width$MH();
        try {
            mh$.invokeExact(combo_box, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_combo_box_get_popup_fixed_width$MH,"gtk_combo_box_get_popup_fixed_width");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_popup_fixed_width(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_popup_fixed_width(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_popup_fixed_width$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_combo_box_popup$MH,"gtk_combo_box_popup");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popup(GtkComboBox* combo_box);
     * }
     */
    public static void gtk_combo_box_popup(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_popup$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_combo_box_popup_for_device$MH,"gtk_combo_box_popup_for_device");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popup_for_device(GtkComboBox* combo_box, GdkDevice* device);
     * }
     */
    public static void gtk_combo_box_popup_for_device(MemorySegment combo_box, MemorySegment device) {
        var mh$ = gtk_combo_box_popup_for_device$MH();
        try {
            mh$.invokeExact(combo_box, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_combo_box_popdown$MH,"gtk_combo_box_popdown");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popdown(GtkComboBox* combo_box);
     * }
     */
    public static void gtk_combo_box_popdown(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_popdown$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_combo_box_get_id_column$MH,"gtk_combo_box_get_id_column");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_id_column(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_id_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_id_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_combo_box_set_id_column$MH,"gtk_combo_box_set_id_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_id_column(GtkComboBox* combo_box, int id_column);
     * }
     */
    public static void gtk_combo_box_set_id_column(MemorySegment combo_box, int id_column) {
        var mh$ = gtk_combo_box_set_id_column$MH();
        try {
            mh$.invokeExact(combo_box, id_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_combo_box_get_active_id$MH,"gtk_combo_box_get_active_id");
    }
    /**
     * {@snippet :
     * char* gtk_combo_box_get_active_id(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_active_id(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_active_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_combo_box_set_active_id$MH,"gtk_combo_box_set_active_id");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_set_active_id(GtkComboBox* combo_box, char* active_id);
     * }
     */
    public static int gtk_combo_box_set_active_id(MemorySegment combo_box, MemorySegment active_id) {
        var mh$ = gtk_combo_box_set_active_id$MH();
        try {
            return (int)mh$.invokeExact(combo_box, active_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_combo_box_set_child$MH,"gtk_combo_box_set_child");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_child(GtkComboBox* combo_box, GtkWidget* child);
     * }
     */
    public static void gtk_combo_box_set_child(MemorySegment combo_box, MemorySegment child) {
        var mh$ = gtk_combo_box_set_child$MH();
        try {
            mh$.invokeExact(combo_box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_combo_box_get_child$MH,"gtk_combo_box_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_get_child(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_child(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_combo_box_text_get_type$MH,"gtk_combo_box_text_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_combo_box_text_get_type();
     * }
     */
    public static long gtk_combo_box_text_get_type() {
        var mh$ = gtk_combo_box_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_combo_box_text_new$MH,"gtk_combo_box_text_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_text_new();
     * }
     */
    public static MemorySegment gtk_combo_box_text_new() {
        var mh$ = gtk_combo_box_text_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_combo_box_text_new_with_entry$MH,"gtk_combo_box_text_new_with_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_text_new_with_entry();
     * }
     */
    public static MemorySegment gtk_combo_box_text_new_with_entry() {
        var mh$ = gtk_combo_box_text_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_combo_box_text_append_text$MH,"gtk_combo_box_text_append_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_append_text(GtkComboBoxText* combo_box, char* text);
     * }
     */
    public static void gtk_combo_box_text_append_text(MemorySegment combo_box, MemorySegment text) {
        var mh$ = gtk_combo_box_text_append_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_combo_box_text_insert_text$MH,"gtk_combo_box_text_insert_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_insert_text(GtkComboBoxText* combo_box, int position, char* text);
     * }
     */
    public static void gtk_combo_box_text_insert_text(MemorySegment combo_box, int position, MemorySegment text) {
        var mh$ = gtk_combo_box_text_insert_text$MH();
        try {
            mh$.invokeExact(combo_box, position, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_combo_box_text_prepend_text$MH,"gtk_combo_box_text_prepend_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_prepend_text(GtkComboBoxText* combo_box, char* text);
     * }
     */
    public static void gtk_combo_box_text_prepend_text(MemorySegment combo_box, MemorySegment text) {
        var mh$ = gtk_combo_box_text_prepend_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_combo_box_text_remove$MH,"gtk_combo_box_text_remove");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_remove(GtkComboBoxText* combo_box, int position);
     * }
     */
    public static void gtk_combo_box_text_remove(MemorySegment combo_box, int position) {
        var mh$ = gtk_combo_box_text_remove$MH();
        try {
            mh$.invokeExact(combo_box, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_combo_box_text_remove_all$MH,"gtk_combo_box_text_remove_all");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_remove_all(GtkComboBoxText* combo_box);
     * }
     */
    public static void gtk_combo_box_text_remove_all(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_text_remove_all$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_active_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_combo_box_text_get_active_text$MH,"gtk_combo_box_text_get_active_text");
    }
    /**
     * {@snippet :
     * char* gtk_combo_box_text_get_active_text(GtkComboBoxText* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_text_get_active_text(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_text_get_active_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_combo_box_text_insert$MH,"gtk_combo_box_text_insert");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_insert(GtkComboBoxText* combo_box, int position, char* id, char* text);
     * }
     */
    public static void gtk_combo_box_text_insert(MemorySegment combo_box, int position, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_insert$MH();
        try {
            mh$.invokeExact(combo_box, position, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_combo_box_text_append$MH,"gtk_combo_box_text_append");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_append(GtkComboBoxText* combo_box, char* id, char* text);
     * }
     */
    public static void gtk_combo_box_text_append(MemorySegment combo_box, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_append$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_combo_box_text_prepend$MH,"gtk_combo_box_text_prepend");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_prepend(GtkComboBoxText* combo_box, char* id, char* text);
     * }
     */
    public static void gtk_combo_box_text_prepend(MemorySegment combo_box, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_prepend$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_constraint_target_get_type$MH,"gtk_constraint_target_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_target_get_type();
     * }
     */
    public static long gtk_constraint_target_get_type() {
        var mh$ = gtk_constraint_target_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkConstraintTarget* GtkConstraintTarget_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintTarget_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintTarget_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintTarget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintTarget_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintTarget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintTarget_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintTarget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_constraint_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_constraint_get_type$MH,"gtk_constraint_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_get_type();
     * }
     */
    public static long gtk_constraint_get_type() {
        var mh$ = gtk_constraint_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkConstraint* GtkConstraint_autoptr;
     * }
     */
    public static final OfAddress GtkConstraint_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraint_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraint_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraint_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraint_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraint_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraint_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkConstraintClass_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintClass_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_constraint_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_constraint_new$MH,"gtk_constraint_new");
    }
    /**
     * {@snippet :
     * GtkConstraint* gtk_constraint_new(gpointer target, GtkConstraintAttribute target_attribute, GtkConstraintRelation relation, gpointer source, GtkConstraintAttribute source_attribute, double multiplier, double constant, int strength);
     * }
     */
    public static MemorySegment gtk_constraint_new(MemorySegment target, int target_attribute, int relation, MemorySegment source, int source_attribute, double multiplier, double constant, int strength) {
        var mh$ = gtk_constraint_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target, target_attribute, relation, source, source_attribute, multiplier, constant, strength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_new_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_constraint_new_constant$MH,"gtk_constraint_new_constant");
    }
    /**
     * {@snippet :
     * GtkConstraint* gtk_constraint_new_constant(gpointer target, GtkConstraintAttribute target_attribute, GtkConstraintRelation relation, double constant, int strength);
     * }
     */
    public static MemorySegment gtk_constraint_new_constant(MemorySegment target, int target_attribute, int relation, double constant, int strength) {
        var mh$ = gtk_constraint_new_constant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target, target_attribute, relation, constant, strength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_constraint_get_target$MH,"gtk_constraint_get_target");
    }
    /**
     * {@snippet :
     * GtkConstraintTarget* gtk_constraint_get_target(GtkConstraint* constraint);
     * }
     */
    public static MemorySegment gtk_constraint_get_target(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_target_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_constraint_get_target_attribute$MH,"gtk_constraint_get_target_attribute");
    }
    /**
     * {@snippet :
     * GtkConstraintAttribute gtk_constraint_get_target_attribute(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_get_target_attribute(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_target_attribute$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_constraint_get_source$MH,"gtk_constraint_get_source");
    }
    /**
     * {@snippet :
     * GtkConstraintTarget* gtk_constraint_get_source(GtkConstraint* constraint);
     * }
     */
    public static MemorySegment gtk_constraint_get_source(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_source_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_constraint_get_source_attribute$MH,"gtk_constraint_get_source_attribute");
    }
    /**
     * {@snippet :
     * GtkConstraintAttribute gtk_constraint_get_source_attribute(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_get_source_attribute(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_source_attribute$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_relation$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_constraint_get_relation$MH,"gtk_constraint_get_relation");
    }
    /**
     * {@snippet :
     * GtkConstraintRelation gtk_constraint_get_relation(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_get_relation(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_relation$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_multiplier$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_constraint_get_multiplier$MH,"gtk_constraint_get_multiplier");
    }
    /**
     * {@snippet :
     * double gtk_constraint_get_multiplier(GtkConstraint* constraint);
     * }
     */
    public static double gtk_constraint_get_multiplier(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_multiplier$MH();
        try {
            return (double)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_constraint_get_constant$MH,"gtk_constraint_get_constant");
    }
    /**
     * {@snippet :
     * double gtk_constraint_get_constant(GtkConstraint* constraint);
     * }
     */
    public static double gtk_constraint_get_constant(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_constant$MH();
        try {
            return (double)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_get_strength$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_constraint_get_strength$MH,"gtk_constraint_get_strength");
    }
    /**
     * {@snippet :
     * int gtk_constraint_get_strength(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_get_strength(MemorySegment constraint) {
        var mh$ = gtk_constraint_get_strength$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_is_required$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_constraint_is_required$MH,"gtk_constraint_is_required");
    }
    /**
     * {@snippet :
     * gboolean gtk_constraint_is_required(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_is_required(MemorySegment constraint) {
        var mh$ = gtk_constraint_is_required$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_is_attached$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_constraint_is_attached$MH,"gtk_constraint_is_attached");
    }
    /**
     * {@snippet :
     * gboolean gtk_constraint_is_attached(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_is_attached(MemorySegment constraint) {
        var mh$ = gtk_constraint_is_attached$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_is_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_constraint_is_constant$MH,"gtk_constraint_is_constant");
    }
    /**
     * {@snippet :
     * gboolean gtk_constraint_is_constant(GtkConstraint* constraint);
     * }
     */
    public static int gtk_constraint_is_constant(MemorySegment constraint) {
        var mh$ = gtk_constraint_is_constant$MH();
        try {
            return (int)mh$.invokeExact(constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_license_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_license_get_type$MH,"gtk_license_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_license_get_type();
     * }
     */
    public static long gtk_license_get_type() {
        var mh$ = gtk_license_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_inhibit_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_application_inhibit_flags_get_type$MH,"gtk_application_inhibit_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_application_inhibit_flags_get_type();
     * }
     */
    public static long gtk_application_inhibit_flags_get_type() {
        var mh$ = gtk_application_inhibit_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_page_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_assistant_page_type_get_type$MH,"gtk_assistant_page_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_assistant_page_type_get_type();
     * }
     */
    public static long gtk_assistant_page_type_get_type() {
        var mh$ = gtk_assistant_page_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_builder_error_get_type$MH,"gtk_builder_error_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_builder_error_get_type();
     * }
     */
    public static long gtk_builder_error_get_type() {
        var mh$ = gtk_builder_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_closure_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_builder_closure_flags_get_type$MH,"gtk_builder_closure_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_builder_closure_flags_get_type();
     * }
     */
    public static long gtk_builder_closure_flags_get_type() {
        var mh$ = gtk_builder_closure_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_cell_renderer_state_get_type$MH,"gtk_cell_renderer_state_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_state_get_type();
     * }
     */
    public static long gtk_cell_renderer_state_get_type() {
        var mh$ = gtk_cell_renderer_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_cell_renderer_mode_get_type$MH,"gtk_cell_renderer_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_mode_get_type();
     * }
     */
    public static long gtk_cell_renderer_mode_get_type() {
        var mh$ = gtk_cell_renderer_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_accel_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_cell_renderer_accel_mode_get_type$MH,"gtk_cell_renderer_accel_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_accel_mode_get_type();
     * }
     */
    public static long gtk_cell_renderer_accel_mode_get_type() {
        var mh$ = gtk_cell_renderer_accel_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_debug_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_debug_flags_get_type$MH,"gtk_debug_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_debug_flags_get_type();
     * }
     */
    public static long gtk_debug_flags_get_type() {
        var mh$ = gtk_debug_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_dialog_flags_get_type$MH,"gtk_dialog_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_dialog_flags_get_type();
     * }
     */
    public static long gtk_dialog_flags_get_type() {
        var mh$ = gtk_dialog_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_response_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_response_type_get_type$MH,"gtk_response_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_response_type_get_type();
     * }
     */
    public static long gtk_response_type_get_type() {
        var mh$ = gtk_response_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_properties_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_editable_properties_get_type$MH,"gtk_editable_properties_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_editable_properties_get_type();
     * }
     */
    public static long gtk_editable_properties_get_type() {
        var mh$ = gtk_editable_properties_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_icon_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_entry_icon_position_get_type$MH,"gtk_entry_icon_position_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_entry_icon_position_get_type();
     * }
     */
    public static long gtk_entry_icon_position_get_type() {
        var mh$ = gtk_entry_icon_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_align_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_align_get_type$MH,"gtk_align_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_align_get_type();
     * }
     */
    public static long gtk_align_get_type() {
        var mh$ = gtk_align_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_arrow_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_arrow_type_get_type$MH,"gtk_arrow_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_arrow_type_get_type();
     * }
     */
    public static long gtk_arrow_type_get_type() {
        var mh$ = gtk_arrow_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_baseline_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_baseline_position_get_type$MH,"gtk_baseline_position_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_baseline_position_get_type();
     * }
     */
    public static long gtk_baseline_position_get_type() {
        var mh$ = gtk_baseline_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_delete_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_delete_type_get_type$MH,"gtk_delete_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_delete_type_get_type();
     * }
     */
    public static long gtk_delete_type_get_type() {
        var mh$ = gtk_delete_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_direction_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_direction_type_get_type$MH,"gtk_direction_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_direction_type_get_type();
     * }
     */
    public static long gtk_direction_type_get_type() {
        var mh$ = gtk_direction_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_icon_size_get_type$MH,"gtk_icon_size_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_size_get_type();
     * }
     */
    public static long gtk_icon_size_get_type() {
        var mh$ = gtk_icon_size_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_sensitivity_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_sensitivity_type_get_type$MH,"gtk_sensitivity_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_sensitivity_type_get_type();
     * }
     */
    public static long gtk_sensitivity_type_get_type() {
        var mh$ = gtk_sensitivity_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_text_direction_get_type$MH,"gtk_text_direction_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_direction_get_type();
     * }
     */
    public static long gtk_text_direction_get_type() {
        var mh$ = gtk_text_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_justification_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_justification_get_type$MH,"gtk_justification_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_justification_get_type();
     * }
     */
    public static long gtk_justification_get_type() {
        var mh$ = gtk_justification_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_message_type_get_type$MH,"gtk_message_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_message_type_get_type();
     * }
     */
    public static long gtk_message_type_get_type() {
        var mh$ = gtk_message_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_movement_step_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_movement_step_get_type$MH,"gtk_movement_step_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_movement_step_get_type();
     * }
     */
    public static long gtk_movement_step_get_type() {
        var mh$ = gtk_movement_step_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_natural_wrap_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_natural_wrap_mode_get_type$MH,"gtk_natural_wrap_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_natural_wrap_mode_get_type();
     * }
     */
    public static long gtk_natural_wrap_mode_get_type() {
        var mh$ = gtk_natural_wrap_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scroll_step_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_scroll_step_get_type$MH,"gtk_scroll_step_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scroll_step_get_type();
     * }
     */
    public static long gtk_scroll_step_get_type() {
        var mh$ = gtk_scroll_step_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_orientation_get_type$MH,"gtk_orientation_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_orientation_get_type();
     * }
     */
    public static long gtk_orientation_get_type() {
        var mh$ = gtk_orientation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overflow_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_overflow_get_type$MH,"gtk_overflow_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_overflow_get_type();
     * }
     */
    public static long gtk_overflow_get_type() {
        var mh$ = gtk_overflow_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pack_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_pack_type_get_type$MH,"gtk_pack_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_pack_type_get_type();
     * }
     */
    public static long gtk_pack_type_get_type() {
        var mh$ = gtk_pack_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_position_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_position_type_get_type$MH,"gtk_position_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_position_type_get_type();
     * }
     */
    public static long gtk_position_type_get_type() {
        var mh$ = gtk_position_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scroll_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_scroll_type_get_type$MH,"gtk_scroll_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scroll_type_get_type();
     * }
     */
    public static long gtk_scroll_type_get_type() {
        var mh$ = gtk_scroll_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_selection_mode_get_type$MH,"gtk_selection_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_selection_mode_get_type();
     * }
     */
    public static long gtk_selection_mode_get_type() {
        var mh$ = gtk_selection_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_wrap_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_wrap_mode_get_type$MH,"gtk_wrap_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_wrap_mode_get_type();
     * }
     */
    public static long gtk_wrap_mode_get_type() {
        var mh$ = gtk_wrap_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_sort_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_sort_type_get_type$MH,"gtk_sort_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_sort_type_get_type();
     * }
     */
    public static long gtk_sort_type_get_type() {
        var mh$ = gtk_sort_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_pages_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_print_pages_get_type$MH,"gtk_print_pages_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_pages_get_type();
     * }
     */
    public static long gtk_print_pages_get_type() {
        var mh$ = gtk_print_pages_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_page_set_get_type$MH,"gtk_page_set_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_page_set_get_type();
     * }
     */
    public static long gtk_page_set_get_type() {
        var mh$ = gtk_page_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_number_up_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_number_up_layout_get_type$MH,"gtk_number_up_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_number_up_layout_get_type();
     * }
     */
    public static long gtk_number_up_layout_get_type() {
        var mh$ = gtk_number_up_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ordering_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_ordering_get_type$MH,"gtk_ordering_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_ordering_get_type();
     * }
     */
    public static long gtk_ordering_get_type() {
        var mh$ = gtk_ordering_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_orientation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_page_orientation_get_type$MH,"gtk_page_orientation_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_page_orientation_get_type();
     * }
     */
    public static long gtk_page_orientation_get_type() {
        var mh$ = gtk_page_orientation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_quality_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_print_quality_get_type$MH,"gtk_print_quality_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_quality_get_type();
     * }
     */
    public static long gtk_print_quality_get_type() {
        var mh$ = gtk_print_quality_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_duplex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_print_duplex_get_type$MH,"gtk_print_duplex_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_duplex_get_type();
     * }
     */
    public static long gtk_print_duplex_get_type() {
        var mh$ = gtk_print_duplex_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_unit_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_unit_get_type$MH,"gtk_unit_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_unit_get_type();
     * }
     */
    public static long gtk_unit_get_type() {
        var mh$ = gtk_unit_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_grid_lines_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_tree_view_grid_lines_get_type$MH,"gtk_tree_view_grid_lines_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_view_grid_lines_get_type();
     * }
     */
    public static long gtk_tree_view_grid_lines_get_type() {
        var mh$ = gtk_tree_view_grid_lines_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_size_group_mode_get_type$MH,"gtk_size_group_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_size_group_mode_get_type();
     * }
     */
    public static long gtk_size_group_mode_get_type() {
        var mh$ = gtk_size_group_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_request_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_size_request_mode_get_type$MH,"gtk_size_request_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_size_request_mode_get_type();
     * }
     */
    public static long gtk_size_request_mode_get_type() {
        var mh$ = gtk_size_request_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_policy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_scrollable_policy_get_type$MH,"gtk_scrollable_policy_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_scrollable_policy_get_type();
     * }
     */
    public static long gtk_scrollable_policy_get_type() {
        var mh$ = gtk_scrollable_policy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_state_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_state_flags_get_type$MH,"gtk_state_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_state_flags_get_type();
     * }
     */
    public static long gtk_state_flags_get_type() {
        var mh$ = gtk_state_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_border_style_get_type$MH,"gtk_border_style_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_border_style_get_type();
     * }
     */
    public static long gtk_border_style_get_type() {
        var mh$ = gtk_border_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_level_bar_mode_get_type$MH,"gtk_level_bar_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_level_bar_mode_get_type();
     * }
     */
    public static long gtk_level_bar_mode_get_type() {
        var mh$ = gtk_level_bar_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_input_purpose_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_input_purpose_get_type$MH,"gtk_input_purpose_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_input_purpose_get_type();
     * }
     */
    public static long gtk_input_purpose_get_type() {
        var mh$ = gtk_input_purpose_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_input_hints_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_input_hints_get_type$MH,"gtk_input_hints_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_input_hints_get_type();
     * }
     */
    public static long gtk_input_hints_get_type() {
        var mh$ = gtk_input_hints_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_propagation_phase_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_propagation_phase_get_type$MH,"gtk_propagation_phase_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_propagation_phase_get_type();
     * }
     */
    public static long gtk_propagation_phase_get_type() {
        var mh$ = gtk_propagation_phase_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_propagation_limit_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_propagation_limit_get_type$MH,"gtk_propagation_limit_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_propagation_limit_get_type();
     * }
     */
    public static long gtk_propagation_limit_get_type() {
        var mh$ = gtk_propagation_limit_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_sequence_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_event_sequence_state_get_type$MH,"gtk_event_sequence_state_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_sequence_state_get_type();
     * }
     */
    public static long gtk_event_sequence_state_get_type() {
        var mh$ = gtk_event_sequence_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pan_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_pan_direction_get_type$MH,"gtk_pan_direction_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_pan_direction_get_type();
     * }
     */
    public static long gtk_pan_direction_get_type() {
        var mh$ = gtk_pan_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_scope_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_shortcut_scope_get_type$MH,"gtk_shortcut_scope_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_scope_get_type();
     * }
     */
    public static long gtk_shortcut_scope_get_type() {
        var mh$ = gtk_shortcut_scope_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pick_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_pick_flags_get_type$MH,"gtk_pick_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_pick_flags_get_type();
     * }
     */
    public static long gtk_pick_flags_get_type() {
        var mh$ = gtk_pick_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_relation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_constraint_relation_get_type$MH,"gtk_constraint_relation_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_relation_get_type();
     * }
     */
    public static long gtk_constraint_relation_get_type() {
        var mh$ = gtk_constraint_relation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_strength_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_constraint_strength_get_type$MH,"gtk_constraint_strength_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_strength_get_type();
     * }
     */
    public static long gtk_constraint_strength_get_type() {
        var mh$ = gtk_constraint_strength_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_attribute_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_constraint_attribute_get_type$MH,"gtk_constraint_attribute_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_attribute_get_type();
     * }
     */
    public static long gtk_constraint_attribute_get_type() {
        var mh$ = gtk_constraint_attribute_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_vfl_parser_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_constraint_vfl_parser_error_get_type$MH,"gtk_constraint_vfl_parser_error_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_vfl_parser_error_get_type();
     * }
     */
    public static long gtk_constraint_vfl_parser_error_get_type() {
        var mh$ = gtk_constraint_vfl_parser_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_system_setting_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_system_setting_get_type$MH,"gtk_system_setting_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_system_setting_get_type();
     * }
     */
    public static long gtk_system_setting_get_type() {
        var mh$ = gtk_system_setting_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_symbolic_color_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_symbolic_color_get_type$MH,"gtk_symbolic_color_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_symbolic_color_get_type();
     * }
     */
    public static long gtk_symbolic_color_get_type() {
        var mh$ = gtk_symbolic_color_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_role_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_accessible_role_get_type$MH,"gtk_accessible_role_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_role_get_type();
     * }
     */
    public static long gtk_accessible_role_get_type() {
        var mh$ = gtk_accessible_role_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_accessible_state_get_type$MH,"gtk_accessible_state_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_state_get_type();
     * }
     */
    public static long gtk_accessible_state_get_type() {
        var mh$ = gtk_accessible_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_property_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_accessible_property_get_type$MH,"gtk_accessible_property_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_property_get_type();
     * }
     */
    public static long gtk_accessible_property_get_type() {
        var mh$ = gtk_accessible_property_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_relation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_accessible_relation_get_type$MH,"gtk_accessible_relation_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_relation_get_type();
     * }
     */
    public static long gtk_accessible_relation_get_type() {
        var mh$ = gtk_accessible_relation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_tristate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_accessible_tristate_get_type$MH,"gtk_accessible_tristate_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_tristate_get_type();
     * }
     */
    public static long gtk_accessible_tristate_get_type() {
        var mh$ = gtk_accessible_tristate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_invalid_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_accessible_invalid_state_get_type$MH,"gtk_accessible_invalid_state_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_invalid_state_get_type();
     * }
     */
    public static long gtk_accessible_invalid_state_get_type() {
        var mh$ = gtk_accessible_invalid_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_autocomplete_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_accessible_autocomplete_get_type$MH,"gtk_accessible_autocomplete_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_autocomplete_get_type();
     * }
     */
    public static long gtk_accessible_autocomplete_get_type() {
        var mh$ = gtk_accessible_autocomplete_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_sort_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_accessible_sort_get_type$MH,"gtk_accessible_sort_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_accessible_sort_get_type();
     * }
     */
    public static long gtk_accessible_sort_get_type() {
        var mh$ = gtk_accessible_sort_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_scroll_flags_get_type$MH,"gtk_event_controller_scroll_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_scroll_flags_get_type();
     * }
     */
    public static long gtk_event_controller_scroll_flags_get_type() {
        var mh$ = gtk_event_controller_scroll_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_file_chooser_action_get_type$MH,"gtk_file_chooser_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_action_get_type();
     * }
     */
    public static long gtk_file_chooser_action_get_type() {
        var mh$ = gtk_file_chooser_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_file_chooser_error_get_type$MH,"gtk_file_chooser_error_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_error_get_type();
     * }
     */
    public static long gtk_file_chooser_error_get_type() {
        var mh$ = gtk_file_chooser_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_match_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_filter_match_get_type$MH,"gtk_filter_match_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_filter_match_get_type();
     * }
     */
    public static long gtk_filter_match_get_type() {
        var mh$ = gtk_filter_match_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_change_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_filter_change_get_type$MH,"gtk_filter_change_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_filter_change_get_type();
     * }
     */
    public static long gtk_filter_change_get_type() {
        var mh$ = gtk_filter_change_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_level_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_font_chooser_level_get_type$MH,"gtk_font_chooser_level_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_level_get_type();
     * }
     */
    public static long gtk_font_chooser_level_get_type() {
        var mh$ = gtk_font_chooser_level_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_lookup_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_icon_lookup_flags_get_type$MH,"gtk_icon_lookup_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_lookup_flags_get_type();
     * }
     */
    public static long gtk_icon_lookup_flags_get_type() {
        var mh$ = gtk_icon_lookup_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_icon_theme_error_get_type$MH,"gtk_icon_theme_error_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_theme_error_get_type();
     * }
     */
    public static long gtk_icon_theme_error_get_type() {
        var mh$ = gtk_icon_theme_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_drop_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_icon_view_drop_position_get_type$MH,"gtk_icon_view_drop_position_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_view_drop_position_get_type();
     * }
     */
    public static long gtk_icon_view_drop_position_get_type() {
        var mh$ = gtk_icon_view_drop_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_image_type_get_type$MH,"gtk_image_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_image_type_get_type();
     * }
     */
    public static long gtk_image_type_get_type() {
        var mh$ = gtk_image_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buttons_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_buttons_type_get_type$MH,"gtk_buttons_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_buttons_type_get_type();
     * }
     */
    public static long gtk_buttons_type_get_type() {
        var mh$ = gtk_buttons_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_tab_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_notebook_tab_get_type$MH,"gtk_notebook_tab_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_notebook_tab_get_type();
     * }
     */
    public static long gtk_notebook_tab_get_type() {
        var mh$ = gtk_notebook_tab_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_action_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_pad_action_type_get_type$MH,"gtk_pad_action_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_pad_action_type_get_type();
     * }
     */
    public static long gtk_pad_action_type_get_type() {
        var mh$ = gtk_pad_action_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_popover_menu_flags_get_type$MH,"gtk_popover_menu_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_popover_menu_flags_get_type();
     * }
     */
    public static long gtk_popover_menu_flags_get_type() {
        var mh$ = gtk_popover_menu_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_status_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_print_status_get_type$MH,"gtk_print_status_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_status_get_type();
     * }
     */
    public static long gtk_print_status_get_type() {
        var mh$ = gtk_print_status_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_print_operation_result_get_type$MH,"gtk_print_operation_result_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_operation_result_get_type();
     * }
     */
    public static long gtk_print_operation_result_get_type() {
        var mh$ = gtk_print_operation_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_print_operation_action_get_type$MH,"gtk_print_operation_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_operation_action_get_type();
     * }
     */
    public static long gtk_print_operation_action_get_type() {
        var mh$ = gtk_print_operation_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_print_error_get_type$MH,"gtk_print_error_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_error_get_type();
     * }
     */
    public static long gtk_print_error_get_type() {
        var mh$ = gtk_print_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_recent_manager_error_get_type$MH,"gtk_recent_manager_error_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_recent_manager_error_get_type();
     * }
     */
    public static long gtk_recent_manager_error_get_type() {
        var mh$ = gtk_recent_manager_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_transition_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_revealer_transition_type_get_type$MH,"gtk_revealer_transition_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_revealer_transition_type_get_type();
     * }
     */
    public static long gtk_revealer_transition_type_get_type() {
        var mh$ = gtk_revealer_transition_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_corner_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_corner_type_get_type$MH,"gtk_corner_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_corner_type_get_type();
     * }
     */
    public static long gtk_corner_type_get_type() {
        var mh$ = gtk_corner_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_policy_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_policy_type_get_type$MH,"gtk_policy_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_policy_type_get_type();
     * }
     */
    public static long gtk_policy_type_get_type() {
        var mh$ = gtk_policy_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_shortcut_action_flags_get_type$MH,"gtk_shortcut_action_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_action_flags_get_type();
     * }
     */
    public static long gtk_shortcut_action_flags_get_type() {
        var mh$ = gtk_shortcut_action_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_shortcut_type_get_type$MH,"gtk_shortcut_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_type_get_type();
     * }
     */
    public static long gtk_shortcut_type_get_type() {
        var mh$ = gtk_shortcut_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_sorter_order_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_sorter_order_get_type$MH,"gtk_sorter_order_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_sorter_order_get_type();
     * }
     */
    public static long gtk_sorter_order_get_type() {
        var mh$ = gtk_sorter_order_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_sorter_change_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_sorter_change_get_type$MH,"gtk_sorter_change_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_sorter_change_get_type();
     * }
     */
    public static long gtk_sorter_change_get_type() {
        var mh$ = gtk_sorter_change_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_update_policy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_spin_button_update_policy_get_type$MH,"gtk_spin_button_update_policy_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_spin_button_update_policy_get_type();
     * }
     */
    public static long gtk_spin_button_update_policy_get_type() {
        var mh$ = gtk_spin_button_update_policy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_spin_type_get_type$MH,"gtk_spin_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_spin_type_get_type();
     * }
     */
    public static long gtk_spin_type_get_type() {
        var mh$ = gtk_spin_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_transition_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_stack_transition_type_get_type$MH,"gtk_stack_transition_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_stack_transition_type_get_type();
     * }
     */
    public static long gtk_stack_transition_type_get_type() {
        var mh$ = gtk_stack_transition_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_match_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_string_filter_match_mode_get_type$MH,"gtk_string_filter_match_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_string_filter_match_mode_get_type();
     * }
     */
    public static long gtk_string_filter_match_mode_get_type() {
        var mh$ = gtk_string_filter_match_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_print_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_style_context_print_flags_get_type$MH,"gtk_style_context_print_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_style_context_print_flags_get_type();
     * }
     */
    public static long gtk_style_context_print_flags_get_type() {
        var mh$ = gtk_style_context_print_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_search_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_text_search_flags_get_type$MH,"gtk_text_search_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_search_flags_get_type();
     * }
     */
    public static long gtk_text_search_flags_get_type() {
        var mh$ = gtk_text_search_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_window_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_text_window_type_get_type$MH,"gtk_text_window_type_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_window_type_get_type();
     * }
     */
    public static long gtk_text_window_type_get_type() {
        var mh$ = gtk_text_window_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_layer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_text_view_layer_get_type$MH,"gtk_text_view_layer_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_view_layer_get_type();
     * }
     */
    public static long gtk_text_view_layer_get_type() {
        var mh$ = gtk_text_view_layer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_extend_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_text_extend_selection_get_type$MH,"gtk_text_extend_selection_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_text_extend_selection_get_type();
     * }
     */
    public static long gtk_text_extend_selection_get_type() {
        var mh$ = gtk_text_extend_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_tree_model_flags_get_type$MH,"gtk_tree_model_flags_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_model_flags_get_type();
     * }
     */
    public static long gtk_tree_model_flags_get_type() {
        var mh$ = gtk_tree_model_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_drop_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_tree_view_drop_position_get_type$MH,"gtk_tree_view_drop_position_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_view_drop_position_get_type();
     * }
     */
    public static long gtk_tree_view_drop_position_get_type() {
        var mh$ = gtk_tree_view_drop_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_sizing_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_tree_view_column_sizing_get_type$MH,"gtk_tree_view_column_sizing_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_view_column_sizing_get_type();
     * }
     */
    public static long gtk_tree_view_column_sizing_get_type() {
        var mh$ = gtk_tree_view_column_sizing_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_constraint_guide_get_type$MH,"gtk_constraint_guide_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_guide_get_type();
     * }
     */
    public static long gtk_constraint_guide_get_type() {
        var mh$ = gtk_constraint_guide_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkConstraintGuide* GtkConstraintGuide_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuide_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintGuide_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuide_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintGuide_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuide_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintGuide_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuide_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkConstraintGuideClass_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuideClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintGuideClass_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuideClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintGuideClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuideClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintGuideClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintGuideClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_constraint_guide_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_constraint_guide_new$MH,"gtk_constraint_guide_new");
    }
    /**
     * {@snippet :
     * GtkConstraintGuide* gtk_constraint_guide_new();
     * }
     */
    public static MemorySegment gtk_constraint_guide_new() {
        var mh$ = gtk_constraint_guide_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_min_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_constraint_guide_set_min_size$MH,"gtk_constraint_guide_set_min_size");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_set_min_size(GtkConstraintGuide* guide, int width, int height);
     * }
     */
    public static void gtk_constraint_guide_set_min_size(MemorySegment guide, int width, int height) {
        var mh$ = gtk_constraint_guide_set_min_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_min_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_constraint_guide_get_min_size$MH,"gtk_constraint_guide_get_min_size");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_get_min_size(GtkConstraintGuide* guide, int* width, int* height);
     * }
     */
    public static void gtk_constraint_guide_get_min_size(MemorySegment guide, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_constraint_guide_get_min_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_nat_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_constraint_guide_set_nat_size$MH,"gtk_constraint_guide_set_nat_size");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_set_nat_size(GtkConstraintGuide* guide, int width, int height);
     * }
     */
    public static void gtk_constraint_guide_set_nat_size(MemorySegment guide, int width, int height) {
        var mh$ = gtk_constraint_guide_set_nat_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_nat_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_constraint_guide_get_nat_size$MH,"gtk_constraint_guide_get_nat_size");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_get_nat_size(GtkConstraintGuide* guide, int* width, int* height);
     * }
     */
    public static void gtk_constraint_guide_get_nat_size(MemorySegment guide, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_constraint_guide_get_nat_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_max_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_constraint_guide_set_max_size$MH,"gtk_constraint_guide_set_max_size");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_set_max_size(GtkConstraintGuide* guide, int width, int height);
     * }
     */
    public static void gtk_constraint_guide_set_max_size(MemorySegment guide, int width, int height) {
        var mh$ = gtk_constraint_guide_set_max_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_max_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_constraint_guide_get_max_size$MH,"gtk_constraint_guide_get_max_size");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_get_max_size(GtkConstraintGuide* guide, int* width, int* height);
     * }
     */
    public static void gtk_constraint_guide_get_max_size(MemorySegment guide, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_constraint_guide_get_max_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_strength$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_constraint_guide_get_strength$MH,"gtk_constraint_guide_get_strength");
    }
    /**
     * {@snippet :
     * GtkConstraintStrength gtk_constraint_guide_get_strength(GtkConstraintGuide* guide);
     * }
     */
    public static int gtk_constraint_guide_get_strength(MemorySegment guide) {
        var mh$ = gtk_constraint_guide_get_strength$MH();
        try {
            return (int)mh$.invokeExact(guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_strength$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_constraint_guide_set_strength$MH,"gtk_constraint_guide_set_strength");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_set_strength(GtkConstraintGuide* guide, GtkConstraintStrength strength);
     * }
     */
    public static void gtk_constraint_guide_set_strength(MemorySegment guide, int strength) {
        var mh$ = gtk_constraint_guide_set_strength$MH();
        try {
            mh$.invokeExact(guide, strength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_constraint_guide_set_name$MH,"gtk_constraint_guide_set_name");
    }
    /**
     * {@snippet :
     * void gtk_constraint_guide_set_name(GtkConstraintGuide* guide, char* name);
     * }
     */
    public static void gtk_constraint_guide_set_name(MemorySegment guide, MemorySegment name) {
        var mh$ = gtk_constraint_guide_set_name$MH();
        try {
            mh$.invokeExact(guide, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_constraint_guide_get_name$MH,"gtk_constraint_guide_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_constraint_guide_get_name(GtkConstraintGuide* guide);
     * }
     */
    public static MemorySegment gtk_constraint_guide_get_name(MemorySegment guide) {
        var mh$ = gtk_constraint_guide_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_constraint_layout_child_get_type$MH,"gtk_constraint_layout_child_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_layout_child_get_type();
     * }
     */
    public static long gtk_constraint_layout_child_get_type() {
        var mh$ = gtk_constraint_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkConstraintLayoutChild* GtkConstraintLayoutChild_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintLayoutChild_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintLayoutChild_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintLayoutChild_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkConstraintLayoutChildClass_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintLayoutChildClass_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintLayoutChildClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintLayoutChildClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_constraint_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_constraint_layout_get_type$MH,"gtk_constraint_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_constraint_layout_get_type();
     * }
     */
    public static long gtk_constraint_layout_get_type() {
        var mh$ = gtk_constraint_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkConstraintLayout* GtkConstraintLayout_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintLayout_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintLayout_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintLayout_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkConstraintLayoutClass_autoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkConstraintLayoutClass_listautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkConstraintLayoutClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkConstraintLayoutClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkConstraintLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_constraint_vfl_parser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_constraint_vfl_parser_error_quark$MH,"gtk_constraint_vfl_parser_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_constraint_vfl_parser_error_quark();
     * }
     */
    public static int gtk_constraint_vfl_parser_error_quark() {
        var mh$ = gtk_constraint_vfl_parser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_constraint_layout_new$MH,"gtk_constraint_layout_new");
    }
    /**
     * {@snippet :
     * GtkLayoutManager* gtk_constraint_layout_new();
     * }
     */
    public static MemorySegment gtk_constraint_layout_new() {
        var mh$ = gtk_constraint_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_constraint$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_constraint_layout_add_constraint$MH,"gtk_constraint_layout_add_constraint");
    }
    /**
     * {@snippet :
     * void gtk_constraint_layout_add_constraint(GtkConstraintLayout* layout, GtkConstraint* constraint);
     * }
     */
    public static void gtk_constraint_layout_add_constraint(MemorySegment layout, MemorySegment constraint) {
        var mh$ = gtk_constraint_layout_add_constraint$MH();
        try {
            mh$.invokeExact(layout, constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_remove_constraint$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_constraint_layout_remove_constraint$MH,"gtk_constraint_layout_remove_constraint");
    }
    /**
     * {@snippet :
     * void gtk_constraint_layout_remove_constraint(GtkConstraintLayout* layout, GtkConstraint* constraint);
     * }
     */
    public static void gtk_constraint_layout_remove_constraint(MemorySegment layout, MemorySegment constraint) {
        var mh$ = gtk_constraint_layout_remove_constraint$MH();
        try {
            mh$.invokeExact(layout, constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_guide$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_constraint_layout_add_guide$MH,"gtk_constraint_layout_add_guide");
    }
    /**
     * {@snippet :
     * void gtk_constraint_layout_add_guide(GtkConstraintLayout* layout, GtkConstraintGuide* guide);
     * }
     */
    public static void gtk_constraint_layout_add_guide(MemorySegment layout, MemorySegment guide) {
        var mh$ = gtk_constraint_layout_add_guide$MH();
        try {
            mh$.invokeExact(layout, guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_remove_guide$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_constraint_layout_remove_guide$MH,"gtk_constraint_layout_remove_guide");
    }
    /**
     * {@snippet :
     * void gtk_constraint_layout_remove_guide(GtkConstraintLayout* layout, GtkConstraintGuide* guide);
     * }
     */
    public static void gtk_constraint_layout_remove_guide(MemorySegment layout, MemorySegment guide) {
        var mh$ = gtk_constraint_layout_remove_guide$MH();
        try {
            mh$.invokeExact(layout, guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_remove_all_constraints$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_constraint_layout_remove_all_constraints$MH,"gtk_constraint_layout_remove_all_constraints");
    }
    /**
     * {@snippet :
     * void gtk_constraint_layout_remove_all_constraints(GtkConstraintLayout* layout);
     * }
     */
    public static void gtk_constraint_layout_remove_all_constraints(MemorySegment layout) {
        var mh$ = gtk_constraint_layout_remove_all_constraints$MH();
        try {
            mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_constraints_from_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_constraint_layout_add_constraints_from_description$MH,"gtk_constraint_layout_add_constraints_from_description");
    }
    /**
     * {@snippet :
     * GList* gtk_constraint_layout_add_constraints_from_description(GtkConstraintLayout* layout, char* lines[], gsize n_lines, int hspacing, int vspacing, GError** error, char* first_view,...);
     * }
     */
    public static MemorySegment gtk_constraint_layout_add_constraints_from_description(MemorySegment layout, MemorySegment lines, long n_lines, int hspacing, int vspacing, MemorySegment error, MemorySegment first_view, Object... x7) {
        var mh$ = gtk_constraint_layout_add_constraints_from_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, lines, n_lines, hspacing, vspacing, error, first_view, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_constraints_from_descriptionv$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_constraint_layout_add_constraints_from_descriptionv$MH,"gtk_constraint_layout_add_constraints_from_descriptionv");
    }
    /**
     * {@snippet :
     * GList* gtk_constraint_layout_add_constraints_from_descriptionv(GtkConstraintLayout* layout, char* lines[], gsize n_lines, int hspacing, int vspacing, GHashTable* views, GError** error);
     * }
     */
    public static MemorySegment gtk_constraint_layout_add_constraints_from_descriptionv(MemorySegment layout, MemorySegment lines, long n_lines, int hspacing, int vspacing, MemorySegment views, MemorySegment error) {
        var mh$ = gtk_constraint_layout_add_constraints_from_descriptionv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, lines, n_lines, hspacing, vspacing, views, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_observe_constraints$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_constraint_layout_observe_constraints$MH,"gtk_constraint_layout_observe_constraints");
    }
    /**
     * {@snippet :
     * GListModel* gtk_constraint_layout_observe_constraints(GtkConstraintLayout* layout);
     * }
     */
    public static MemorySegment gtk_constraint_layout_observe_constraints(MemorySegment layout) {
        var mh$ = gtk_constraint_layout_observe_constraints$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_observe_guides$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_constraint_layout_observe_guides$MH,"gtk_constraint_layout_observe_guides");
    }
    /**
     * {@snippet :
     * GListModel* gtk_constraint_layout_observe_guides(GtkConstraintLayout* layout);
     * }
     */
    public static MemorySegment gtk_constraint_layout_observe_guides(MemorySegment layout) {
        var mh$ = gtk_constraint_layout_observe_guides$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_css_provider_get_type$MH,"gtk_css_provider_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_css_provider_get_type();
     * }
     */
    public static long gtk_css_provider_get_type() {
        var mh$ = gtk_css_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_css_provider_new$MH,"gtk_css_provider_new");
    }
    /**
     * {@snippet :
     * GtkCssProvider* gtk_css_provider_new();
     * }
     */
    public static MemorySegment gtk_css_provider_new() {
        var mh$ = gtk_css_provider_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_css_provider_to_string$MH,"gtk_css_provider_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_css_provider_to_string(GtkCssProvider* provider);
     * }
     */
    public static MemorySegment gtk_css_provider_to_string(MemorySegment provider) {
        var mh$ = gtk_css_provider_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_css_provider_load_from_data$MH,"gtk_css_provider_load_from_data");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_from_data(GtkCssProvider* css_provider, char* data, gssize length);
     * }
     */
    public static void gtk_css_provider_load_from_data(MemorySegment css_provider, MemorySegment data, long length) {
        var mh$ = gtk_css_provider_load_from_data$MH();
        try {
            mh$.invokeExact(css_provider, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_css_provider_load_from_file$MH,"gtk_css_provider_load_from_file");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_from_file(GtkCssProvider* css_provider, GFile* file);
     * }
     */
    public static void gtk_css_provider_load_from_file(MemorySegment css_provider, MemorySegment file) {
        var mh$ = gtk_css_provider_load_from_file$MH();
        try {
            mh$.invokeExact(css_provider, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_css_provider_load_from_path$MH,"gtk_css_provider_load_from_path");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_from_path(GtkCssProvider* css_provider, char* path);
     * }
     */
    public static void gtk_css_provider_load_from_path(MemorySegment css_provider, MemorySegment path) {
        var mh$ = gtk_css_provider_load_from_path$MH();
        try {
            mh$.invokeExact(css_provider, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_css_provider_load_from_resource$MH,"gtk_css_provider_load_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_from_resource(GtkCssProvider* css_provider, char* resource_path);
     * }
     */
    public static void gtk_css_provider_load_from_resource(MemorySegment css_provider, MemorySegment resource_path) {
        var mh$ = gtk_css_provider_load_from_resource$MH();
        try {
            mh$.invokeExact(css_provider, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_named$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_css_provider_load_named$MH,"gtk_css_provider_load_named");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_named(GtkCssProvider* provider, char* name, char* variant);
     * }
     */
    public static void gtk_css_provider_load_named(MemorySegment provider, MemorySegment name, MemorySegment variant) {
        var mh$ = gtk_css_provider_load_named$MH();
        try {
            mh$.invokeExact(provider, name, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_custom_layout_get_type$MH,"gtk_custom_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_custom_layout_get_type();
     * }
     */
    public static long gtk_custom_layout_get_type() {
        var mh$ = gtk_custom_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkCustomLayout* GtkCustomLayout_autoptr;
     * }
     */
    public static final OfAddress GtkCustomLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCustomLayout_listautoptr;
     * }
     */
    public static final OfAddress GtkCustomLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCustomLayout_slistautoptr;
     * }
     */
    public static final OfAddress GtkCustomLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCustomLayout_queueautoptr;
     * }
     */
    public static final OfAddress GtkCustomLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkCustomLayoutClass_autoptr;
     * }
     */
    public static final OfAddress GtkCustomLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCustomLayoutClass_listautoptr;
     * }
     */
    public static final OfAddress GtkCustomLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCustomLayoutClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkCustomLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCustomLayoutClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkCustomLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_custom_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_custom_layout_new$MH,"gtk_custom_layout_new");
    }
    /**
     * {@snippet :
     * GtkLayoutManager* gtk_custom_layout_new(GtkCustomRequestModeFunc request_mode, GtkCustomMeasureFunc measure, GtkCustomAllocateFunc allocate);
     * }
     */
    public static MemorySegment gtk_custom_layout_new(MemorySegment request_mode, MemorySegment measure, MemorySegment allocate) {
        var mh$ = gtk_custom_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(request_mode, measure, allocate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_custom_sorter_get_type$MH,"gtk_custom_sorter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_custom_sorter_get_type();
     * }
     */
    public static long gtk_custom_sorter_get_type() {
        var mh$ = gtk_custom_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkCustomSorter* GtkCustomSorter_autoptr;
     * }
     */
    public static final OfAddress GtkCustomSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCustomSorter_listautoptr;
     * }
     */
    public static final OfAddress GtkCustomSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCustomSorter_slistautoptr;
     * }
     */
    public static final OfAddress GtkCustomSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCustomSorter_queueautoptr;
     * }
     */
    public static final OfAddress GtkCustomSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkCustomSorterClass_autoptr;
     * }
     */
    public static final OfAddress GtkCustomSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCustomSorterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkCustomSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCustomSorterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkCustomSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCustomSorterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkCustomSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_custom_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_custom_sorter_new$MH,"gtk_custom_sorter_new");
    }
    /**
     * {@snippet :
     * GtkCustomSorter* gtk_custom_sorter_new(GCompareDataFunc sort_func, gpointer user_data, GDestroyNotify user_destroy);
     * }
     */
    public static MemorySegment gtk_custom_sorter_new(MemorySegment sort_func, MemorySegment user_data, MemorySegment user_destroy) {
        var mh$ = gtk_custom_sorter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sort_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_sorter_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_custom_sorter_set_sort_func$MH,"gtk_custom_sorter_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_custom_sorter_set_sort_func(GtkCustomSorter* self, GCompareDataFunc sort_func, gpointer user_data, GDestroyNotify user_destroy);
     * }
     */
    public static void gtk_custom_sorter_set_sort_func(MemorySegment self, MemorySegment sort_func, MemorySegment user_data, MemorySegment user_destroy) {
        var mh$ = gtk_custom_sorter_set_sort_func$MH();
        try {
            mh$.invokeExact(self, sort_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_TEXT = 1;
     * }
     */
    public static int GTK_DEBUG_TEXT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_TREE = 2;
     * }
     */
    public static int GTK_DEBUG_TREE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_KEYBINDINGS = 4;
     * }
     */
    public static int GTK_DEBUG_KEYBINDINGS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_MODULES = 8;
     * }
     */
    public static int GTK_DEBUG_MODULES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_GEOMETRY = 16;
     * }
     */
    public static int GTK_DEBUG_GEOMETRY() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_ICONTHEME = 32;
     * }
     */
    public static int GTK_DEBUG_ICONTHEME() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_PRINTING = 64;
     * }
     */
    public static int GTK_DEBUG_PRINTING() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_BUILDER = 128;
     * }
     */
    public static int GTK_DEBUG_BUILDER() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_SIZE_REQUEST = 256;
     * }
     */
    public static int GTK_DEBUG_SIZE_REQUEST() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_NO_CSS_CACHE = 512;
     * }
     */
    public static int GTK_DEBUG_NO_CSS_CACHE() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_INTERACTIVE = 1024;
     * }
     */
    public static int GTK_DEBUG_INTERACTIVE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_TOUCHSCREEN = 2048;
     * }
     */
    public static int GTK_DEBUG_TOUCHSCREEN() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_ACTIONS = 4096;
     * }
     */
    public static int GTK_DEBUG_ACTIONS() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_LAYOUT = 8192;
     * }
     */
    public static int GTK_DEBUG_LAYOUT() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_SNAPSHOT = 16384;
     * }
     */
    public static int GTK_DEBUG_SNAPSHOT() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_CONSTRAINTS = 32768;
     * }
     */
    public static int GTK_DEBUG_CONSTRAINTS() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_BUILDER_OBJECTS = 65536;
     * }
     */
    public static int GTK_DEBUG_BUILDER_OBJECTS() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_A11Y = 131072;
     * }
     */
    public static int GTK_DEBUG_A11Y() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_ICONFALLBACK = 262144;
     * }
     */
    public static int GTK_DEBUG_ICONFALLBACK() {
        return (int)262144L;
    }
    public static MethodHandle gtk_get_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_get_debug_flags$MH,"gtk_get_debug_flags");
    }
    /**
     * {@snippet :
     * GtkDebugFlags gtk_get_debug_flags();
     * }
     */
    public static int gtk_get_debug_flags() {
        var mh$ = gtk_get_debug_flags$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_set_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_set_debug_flags$MH,"gtk_set_debug_flags");
    }
    /**
     * {@snippet :
     * void gtk_set_debug_flags(GtkDebugFlags flags);
     * }
     */
    public static void gtk_set_debug_flags(int flags) {
        var mh$ = gtk_set_debug_flags$MH();
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_directory_list_get_type$MH,"gtk_directory_list_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_directory_list_get_type();
     * }
     */
    public static long gtk_directory_list_get_type() {
        var mh$ = gtk_directory_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkDirectoryList* GtkDirectoryList_autoptr;
     * }
     */
    public static final OfAddress GtkDirectoryList_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDirectoryList_listautoptr;
     * }
     */
    public static final OfAddress GtkDirectoryList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDirectoryList_slistautoptr;
     * }
     */
    public static final OfAddress GtkDirectoryList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDirectoryList_queueautoptr;
     * }
     */
    public static final OfAddress GtkDirectoryList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkDirectoryListClass_autoptr;
     * }
     */
    public static final OfAddress GtkDirectoryListClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDirectoryListClass_listautoptr;
     * }
     */
    public static final OfAddress GtkDirectoryListClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDirectoryListClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkDirectoryListClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDirectoryListClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkDirectoryListClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_directory_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_directory_list_new$MH,"gtk_directory_list_new");
    }
    /**
     * {@snippet :
     * GtkDirectoryList* gtk_directory_list_new(char* attributes, GFile* file);
     * }
     */
    public static MemorySegment gtk_directory_list_new(MemorySegment attributes, MemorySegment file) {
        var mh$ = gtk_directory_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attributes, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_directory_list_set_file$MH,"gtk_directory_list_set_file");
    }
    /**
     * {@snippet :
     * void gtk_directory_list_set_file(GtkDirectoryList* self, GFile* file);
     * }
     */
    public static void gtk_directory_list_set_file(MemorySegment self, MemorySegment file) {
        var mh$ = gtk_directory_list_set_file$MH();
        try {
            mh$.invokeExact(self, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_directory_list_get_file$MH,"gtk_directory_list_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_directory_list_get_file(GtkDirectoryList* self);
     * }
     */
    public static MemorySegment gtk_directory_list_get_file(MemorySegment self) {
        var mh$ = gtk_directory_list_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_directory_list_set_attributes$MH,"gtk_directory_list_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_directory_list_set_attributes(GtkDirectoryList* self, char* attributes);
     * }
     */
    public static void gtk_directory_list_set_attributes(MemorySegment self, MemorySegment attributes) {
        var mh$ = gtk_directory_list_set_attributes$MH();
        try {
            mh$.invokeExact(self, attributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_directory_list_get_attributes$MH,"gtk_directory_list_get_attributes");
    }
    /**
     * {@snippet :
     * char* gtk_directory_list_get_attributes(GtkDirectoryList* self);
     * }
     */
    public static MemorySegment gtk_directory_list_get_attributes(MemorySegment self) {
        var mh$ = gtk_directory_list_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_io_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_directory_list_set_io_priority$MH,"gtk_directory_list_set_io_priority");
    }
    /**
     * {@snippet :
     * void gtk_directory_list_set_io_priority(GtkDirectoryList* self, int io_priority);
     * }
     */
    public static void gtk_directory_list_set_io_priority(MemorySegment self, int io_priority) {
        var mh$ = gtk_directory_list_set_io_priority$MH();
        try {
            mh$.invokeExact(self, io_priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_io_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_directory_list_get_io_priority$MH,"gtk_directory_list_get_io_priority");
    }
    /**
     * {@snippet :
     * int gtk_directory_list_get_io_priority(GtkDirectoryList* self);
     * }
     */
    public static int gtk_directory_list_get_io_priority(MemorySegment self) {
        var mh$ = gtk_directory_list_get_io_priority$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_is_loading$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_directory_list_is_loading$MH,"gtk_directory_list_is_loading");
    }
    /**
     * {@snippet :
     * gboolean gtk_directory_list_is_loading(GtkDirectoryList* self);
     * }
     */
    public static int gtk_directory_list_is_loading(MemorySegment self) {
        var mh$ = gtk_directory_list_is_loading$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_directory_list_get_error$MH,"gtk_directory_list_get_error");
    }
    /**
     * {@snippet :
     * const GError* gtk_directory_list_get_error(GtkDirectoryList* self);
     * }
     */
    public static MemorySegment gtk_directory_list_get_error(MemorySegment self) {
        var mh$ = gtk_directory_list_get_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_monitored$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_directory_list_set_monitored$MH,"gtk_directory_list_set_monitored");
    }
    /**
     * {@snippet :
     * void gtk_directory_list_set_monitored(GtkDirectoryList* self, gboolean monitored);
     * }
     */
    public static void gtk_directory_list_set_monitored(MemorySegment self, int monitored) {
        var mh$ = gtk_directory_list_set_monitored$MH();
        try {
            mh$.invokeExact(self, monitored);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_monitored$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_directory_list_get_monitored$MH,"gtk_directory_list_get_monitored");
    }
    /**
     * {@snippet :
     * gboolean gtk_directory_list_get_monitored(GtkDirectoryList* self);
     * }
     */
    public static int gtk_directory_list_get_monitored(MemorySegment self) {
        var mh$ = gtk_directory_list_get_monitored$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_drag_icon_get_type$MH,"gtk_drag_icon_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drag_icon_get_type();
     * }
     */
    public static long gtk_drag_icon_get_type() {
        var mh$ = gtk_drag_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkDragIcon* GtkDragIcon_autoptr;
     * }
     */
    public static final OfAddress GtkDragIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDragIcon_listautoptr;
     * }
     */
    public static final OfAddress GtkDragIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDragIcon_slistautoptr;
     * }
     */
    public static final OfAddress GtkDragIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDragIcon_queueautoptr;
     * }
     */
    public static final OfAddress GtkDragIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkDragIconClass_autoptr;
     * }
     */
    public static final OfAddress GtkDragIconClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDragIconClass_listautoptr;
     * }
     */
    public static final OfAddress GtkDragIconClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDragIconClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkDragIconClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDragIconClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkDragIconClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_drag_icon_get_for_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_drag_icon_get_for_drag$MH,"gtk_drag_icon_get_for_drag");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drag_icon_get_for_drag(GdkDrag* drag);
     * }
     */
    public static MemorySegment gtk_drag_icon_get_for_drag(MemorySegment drag) {
        var mh$ = gtk_drag_icon_get_for_drag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_drag_icon_set_child$MH,"gtk_drag_icon_set_child");
    }
    /**
     * {@snippet :
     * void gtk_drag_icon_set_child(GtkDragIcon* self, GtkWidget* child);
     * }
     */
    public static void gtk_drag_icon_set_child(MemorySegment self, MemorySegment child) {
        var mh$ = gtk_drag_icon_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_drag_icon_get_child$MH,"gtk_drag_icon_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drag_icon_get_child(GtkDragIcon* self);
     * }
     */
    public static MemorySegment gtk_drag_icon_get_child(MemorySegment self) {
        var mh$ = gtk_drag_icon_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_set_from_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_drag_icon_set_from_paintable$MH,"gtk_drag_icon_set_from_paintable");
    }
    /**
     * {@snippet :
     * void gtk_drag_icon_set_from_paintable(GdkDrag* drag, GdkPaintable* paintable, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_icon_set_from_paintable(MemorySegment drag, MemorySegment paintable, int hot_x, int hot_y) {
        var mh$ = gtk_drag_icon_set_from_paintable$MH();
        try {
            mh$.invokeExact(drag, paintable, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_create_widget_for_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_drag_icon_create_widget_for_value$MH,"gtk_drag_icon_create_widget_for_value");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drag_icon_create_widget_for_value(const GValue* value);
     * }
     */
    public static MemorySegment gtk_drag_icon_create_widget_for_value(MemorySegment value) {
        var mh$ = gtk_drag_icon_create_widget_for_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_drag_source_get_type$MH,"gtk_drag_source_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drag_source_get_type();
     * }
     */
    public static long gtk_drag_source_get_type() {
        var mh$ = gtk_drag_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_drag_source_new$MH,"gtk_drag_source_new");
    }
    /**
     * {@snippet :
     * GtkDragSource* gtk_drag_source_new();
     * }
     */
    public static MemorySegment gtk_drag_source_new() {
        var mh$ = gtk_drag_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_drag_source_set_content$MH,"gtk_drag_source_set_content");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_content(GtkDragSource* source, GdkContentProvider* content);
     * }
     */
    public static void gtk_drag_source_set_content(MemorySegment source, MemorySegment content) {
        var mh$ = gtk_drag_source_set_content$MH();
        try {
            mh$.invokeExact(source, content);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_drag_source_get_content$MH,"gtk_drag_source_get_content");
    }
    /**
     * {@snippet :
     * GdkContentProvider* gtk_drag_source_get_content(GtkDragSource* source);
     * }
     */
    public static MemorySegment gtk_drag_source_get_content(MemorySegment source) {
        var mh$ = gtk_drag_source_get_content$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_drag_source_set_actions$MH,"gtk_drag_source_set_actions");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_actions(GtkDragSource* source, GdkDragAction actions);
     * }
     */
    public static void gtk_drag_source_set_actions(MemorySegment source, int actions) {
        var mh$ = gtk_drag_source_set_actions$MH();
        try {
            mh$.invokeExact(source, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_drag_source_get_actions$MH,"gtk_drag_source_get_actions");
    }
    /**
     * {@snippet :
     * GdkDragAction gtk_drag_source_get_actions(GtkDragSource* source);
     * }
     */
    public static int gtk_drag_source_get_actions(MemorySegment source) {
        var mh$ = gtk_drag_source_get_actions$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_drag_source_set_icon$MH,"gtk_drag_source_set_icon");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon(GtkDragSource* source, GdkPaintable* paintable, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_source_set_icon(MemorySegment source, MemorySegment paintable, int hot_x, int hot_y) {
        var mh$ = gtk_drag_source_set_icon$MH();
        try {
            mh$.invokeExact(source, paintable, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_drag_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_drag_source_drag_cancel$MH,"gtk_drag_source_drag_cancel");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_drag_cancel(GtkDragSource* source);
     * }
     */
    public static void gtk_drag_source_drag_cancel(MemorySegment source) {
        var mh$ = gtk_drag_source_drag_cancel$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_drag_source_get_drag$MH,"gtk_drag_source_get_drag");
    }
    /**
     * {@snippet :
     * GdkDrag* gtk_drag_source_get_drag(GtkDragSource* source);
     * }
     */
    public static MemorySegment gtk_drag_source_get_drag(MemorySegment source) {
        var mh$ = gtk_drag_source_get_drag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_check_threshold$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_drag_check_threshold$MH,"gtk_drag_check_threshold");
    }
    /**
     * {@snippet :
     * gboolean gtk_drag_check_threshold(GtkWidget* widget, int start_x, int start_y, int current_x, int current_y);
     * }
     */
    public static int gtk_drag_check_threshold(MemorySegment widget, int start_x, int start_y, int current_x, int current_y) {
        var mh$ = gtk_drag_check_threshold$MH();
        try {
            return (int)mh$.invokeExact(widget, start_x, start_y, current_x, current_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_drawing_area_get_type$MH,"gtk_drawing_area_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drawing_area_get_type();
     * }
     */
    public static long gtk_drawing_area_get_type() {
        var mh$ = gtk_drawing_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_drawing_area_new$MH,"gtk_drawing_area_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drawing_area_new();
     * }
     */
    public static MemorySegment gtk_drawing_area_new() {
        var mh$ = gtk_drawing_area_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_set_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_drawing_area_set_content_width$MH,"gtk_drawing_area_set_content_width");
    }
    /**
     * {@snippet :
     * void gtk_drawing_area_set_content_width(GtkDrawingArea* self, int width);
     * }
     */
    public static void gtk_drawing_area_set_content_width(MemorySegment self, int width) {
        var mh$ = gtk_drawing_area_set_content_width$MH();
        try {
            mh$.invokeExact(self, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_drawing_area_get_content_width$MH,"gtk_drawing_area_get_content_width");
    }
    /**
     * {@snippet :
     * int gtk_drawing_area_get_content_width(GtkDrawingArea* self);
     * }
     */
    public static int gtk_drawing_area_get_content_width(MemorySegment self) {
        var mh$ = gtk_drawing_area_get_content_width$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_set_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_drawing_area_set_content_height$MH,"gtk_drawing_area_set_content_height");
    }
    /**
     * {@snippet :
     * void gtk_drawing_area_set_content_height(GtkDrawingArea* self, int height);
     * }
     */
    public static void gtk_drawing_area_set_content_height(MemorySegment self, int height) {
        var mh$ = gtk_drawing_area_set_content_height$MH();
        try {
            mh$.invokeExact(self, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_drawing_area_get_content_height$MH,"gtk_drawing_area_get_content_height");
    }
    /**
     * {@snippet :
     * int gtk_drawing_area_get_content_height(GtkDrawingArea* self);
     * }
     */
    public static int gtk_drawing_area_get_content_height(MemorySegment self) {
        var mh$ = gtk_drawing_area_get_content_height$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_set_draw_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_drawing_area_set_draw_func$MH,"gtk_drawing_area_set_draw_func");
    }
    /**
     * {@snippet :
     * void gtk_drawing_area_set_draw_func(GtkDrawingArea* self, GtkDrawingAreaDrawFunc draw_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_drawing_area_set_draw_func(MemorySegment self, MemorySegment draw_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_drawing_area_set_draw_func$MH();
        try {
            mh$.invokeExact(self, draw_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_event_controller_get_type$MH,"gtk_event_controller_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_get_type();
     * }
     */
    public static long gtk_event_controller_get_type() {
        var mh$ = gtk_event_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_event_controller_get_widget$MH,"gtk_event_controller_get_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_event_controller_get_widget(GtkEventController* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_get_widget(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_event_controller_reset$MH,"gtk_event_controller_reset");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_reset(GtkEventController* controller);
     * }
     */
    public static void gtk_event_controller_reset(MemorySegment controller) {
        var mh$ = gtk_event_controller_reset$MH();
        try {
            mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_event_controller_get_propagation_phase$MH,"gtk_event_controller_get_propagation_phase");
    }
    /**
     * {@snippet :
     * GtkPropagationPhase gtk_event_controller_get_propagation_phase(GtkEventController* controller);
     * }
     */
    public static int gtk_event_controller_get_propagation_phase(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_propagation_phase$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_event_controller_set_propagation_phase$MH,"gtk_event_controller_set_propagation_phase");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_set_propagation_phase(GtkEventController* controller, GtkPropagationPhase phase);
     * }
     */
    public static void gtk_event_controller_set_propagation_phase(MemorySegment controller, int phase) {
        var mh$ = gtk_event_controller_set_propagation_phase$MH();
        try {
            mh$.invokeExact(controller, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_event_controller_get_propagation_limit$MH,"gtk_event_controller_get_propagation_limit");
    }
    /**
     * {@snippet :
     * GtkPropagationLimit gtk_event_controller_get_propagation_limit(GtkEventController* controller);
     * }
     */
    public static int gtk_event_controller_get_propagation_limit(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_propagation_limit$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_event_controller_set_propagation_limit$MH,"gtk_event_controller_set_propagation_limit");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_set_propagation_limit(GtkEventController* controller, GtkPropagationLimit limit);
     * }
     */
    public static void gtk_event_controller_set_propagation_limit(MemorySegment controller, int limit) {
        var mh$ = gtk_event_controller_set_propagation_limit$MH();
        try {
            mh$.invokeExact(controller, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_event_controller_get_name$MH,"gtk_event_controller_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_event_controller_get_name(GtkEventController* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_get_name(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_event_controller_set_name$MH,"gtk_event_controller_set_name");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_set_name(GtkEventController* controller, char* name);
     * }
     */
    public static void gtk_event_controller_set_name(MemorySegment controller, MemorySegment name) {
        var mh$ = gtk_event_controller_set_name$MH();
        try {
            mh$.invokeExact(controller, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_event_controller_get_current_event$MH,"gtk_event_controller_get_current_event");
    }
    /**
     * {@snippet :
     * GdkEvent* gtk_event_controller_get_current_event(GtkEventController* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_get_current_event(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_current_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_event_controller_get_current_event_time$MH,"gtk_event_controller_get_current_event_time");
    }
    /**
     * {@snippet :
     * guint32 gtk_event_controller_get_current_event_time(GtkEventController* controller);
     * }
     */
    public static int gtk_event_controller_get_current_event_time(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_current_event_time$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_event_controller_get_current_event_device$MH,"gtk_event_controller_get_current_event_device");
    }
    /**
     * {@snippet :
     * GdkDevice* gtk_event_controller_get_current_event_device(GtkEventController* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_get_current_event_device(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_current_event_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_event_controller_get_current_event_state$MH,"gtk_event_controller_get_current_event_state");
    }
    /**
     * {@snippet :
     * GdkModifierType gtk_event_controller_get_current_event_state(GtkEventController* controller);
     * }
     */
    public static int gtk_event_controller_get_current_event_state(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_current_event_state$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_drop_controller_motion_get_type$MH,"gtk_drop_controller_motion_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drop_controller_motion_get_type();
     * }
     */
    public static long gtk_drop_controller_motion_get_type() {
        var mh$ = gtk_drop_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_drop_controller_motion_new$MH,"gtk_drop_controller_motion_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_drop_controller_motion_new();
     * }
     */
    public static MemorySegment gtk_drop_controller_motion_new() {
        var mh$ = gtk_drop_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_contains_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_drop_controller_motion_contains_pointer$MH,"gtk_drop_controller_motion_contains_pointer");
    }
    /**
     * {@snippet :
     * gboolean gtk_drop_controller_motion_contains_pointer(GtkDropControllerMotion* self);
     * }
     */
    public static int gtk_drop_controller_motion_contains_pointer(MemorySegment self) {
        var mh$ = gtk_drop_controller_motion_contains_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_get_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_drop_controller_motion_get_drop$MH,"gtk_drop_controller_motion_get_drop");
    }
    /**
     * {@snippet :
     * GdkDrop* gtk_drop_controller_motion_get_drop(GtkDropControllerMotion* self);
     * }
     */
    public static MemorySegment gtk_drop_controller_motion_get_drop(MemorySegment self) {
        var mh$ = gtk_drop_controller_motion_get_drop$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_is_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_drop_controller_motion_is_pointer$MH,"gtk_drop_controller_motion_is_pointer");
    }
    /**
     * {@snippet :
     * gboolean gtk_drop_controller_motion_is_pointer(GtkDropControllerMotion* self);
     * }
     */
    public static int gtk_drop_controller_motion_is_pointer(MemorySegment self) {
        var mh$ = gtk_drop_controller_motion_is_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_drop_target_get_type$MH,"gtk_drop_target_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drop_target_get_type();
     * }
     */
    public static long gtk_drop_target_get_type() {
        var mh$ = gtk_drop_target_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_drop_target_new$MH,"gtk_drop_target_new");
    }
    /**
     * {@snippet :
     * GtkDropTarget* gtk_drop_target_new(GType type, GdkDragAction actions);
     * }
     */
    public static MemorySegment gtk_drop_target_new(long type, int actions) {
        var mh$ = gtk_drop_target_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_set_gtypes$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_drop_target_set_gtypes$MH,"gtk_drop_target_set_gtypes");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_set_gtypes(GtkDropTarget* self, GType* types, gsize n_types);
     * }
     */
    public static void gtk_drop_target_set_gtypes(MemorySegment self, MemorySegment types, long n_types) {
        var mh$ = gtk_drop_target_set_gtypes$MH();
        try {
            mh$.invokeExact(self, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_gtypes$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_drop_target_get_gtypes$MH,"gtk_drop_target_get_gtypes");
    }
    /**
     * {@snippet :
     * const GType* gtk_drop_target_get_gtypes(GtkDropTarget* self, gsize* n_types);
     * }
     */
    public static MemorySegment gtk_drop_target_get_gtypes(MemorySegment self, MemorySegment n_types) {
        var mh$ = gtk_drop_target_get_gtypes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_drop_target_get_formats$MH,"gtk_drop_target_get_formats");
    }
    /**
     * {@snippet :
     * GdkContentFormats* gtk_drop_target_get_formats(GtkDropTarget* self);
     * }
     */
    public static MemorySegment gtk_drop_target_get_formats(MemorySegment self) {
        var mh$ = gtk_drop_target_get_formats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_set_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_drop_target_set_actions$MH,"gtk_drop_target_set_actions");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_set_actions(GtkDropTarget* self, GdkDragAction actions);
     * }
     */
    public static void gtk_drop_target_set_actions(MemorySegment self, int actions) {
        var mh$ = gtk_drop_target_set_actions$MH();
        try {
            mh$.invokeExact(self, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_drop_target_get_actions$MH,"gtk_drop_target_get_actions");
    }
    /**
     * {@snippet :
     * GdkDragAction gtk_drop_target_get_actions(GtkDropTarget* self);
     * }
     */
    public static int gtk_drop_target_get_actions(MemorySegment self) {
        var mh$ = gtk_drop_target_get_actions$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_set_preload$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_drop_target_set_preload$MH,"gtk_drop_target_set_preload");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_set_preload(GtkDropTarget* self, gboolean preload);
     * }
     */
    public static void gtk_drop_target_set_preload(MemorySegment self, int preload) {
        var mh$ = gtk_drop_target_set_preload$MH();
        try {
            mh$.invokeExact(self, preload);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_preload$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_drop_target_get_preload$MH,"gtk_drop_target_get_preload");
    }
    /**
     * {@snippet :
     * gboolean gtk_drop_target_get_preload(GtkDropTarget* self);
     * }
     */
    public static int gtk_drop_target_get_preload(MemorySegment self) {
        var mh$ = gtk_drop_target_get_preload$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_drop_target_get_drop$MH,"gtk_drop_target_get_drop");
    }
    /**
     * {@snippet :
     * GdkDrop* gtk_drop_target_get_drop(GtkDropTarget* self);
     * }
     */
    public static MemorySegment gtk_drop_target_get_drop(MemorySegment self) {
        var mh$ = gtk_drop_target_get_drop$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_current_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_drop_target_get_current_drop$MH,"gtk_drop_target_get_current_drop");
    }
    /**
     * {@snippet :
     * GdkDrop* gtk_drop_target_get_current_drop(GtkDropTarget* self);
     * }
     */
    public static MemorySegment gtk_drop_target_get_current_drop(MemorySegment self) {
        var mh$ = gtk_drop_target_get_current_drop$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_drop_target_get_value$MH,"gtk_drop_target_get_value");
    }
    /**
     * {@snippet :
     * const GValue* gtk_drop_target_get_value(GtkDropTarget* self);
     * }
     */
    public static MemorySegment gtk_drop_target_get_value(MemorySegment self) {
        var mh$ = gtk_drop_target_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_reject$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_drop_target_reject$MH,"gtk_drop_target_reject");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_reject(GtkDropTarget* self);
     * }
     */
    public static void gtk_drop_target_reject(MemorySegment self) {
        var mh$ = gtk_drop_target_reject$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_drop_target_async_get_type$MH,"gtk_drop_target_async_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drop_target_async_get_type();
     * }
     */
    public static long gtk_drop_target_async_get_type() {
        var mh$ = gtk_drop_target_async_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_drop_target_async_new$MH,"gtk_drop_target_async_new");
    }
    /**
     * {@snippet :
     * GtkDropTargetAsync* gtk_drop_target_async_new(GdkContentFormats* formats, GdkDragAction actions);
     * }
     */
    public static MemorySegment gtk_drop_target_async_new(MemorySegment formats, int actions) {
        var mh$ = gtk_drop_target_async_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_set_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_drop_target_async_set_formats$MH,"gtk_drop_target_async_set_formats");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_async_set_formats(GtkDropTargetAsync* self, GdkContentFormats* formats);
     * }
     */
    public static void gtk_drop_target_async_set_formats(MemorySegment self, MemorySegment formats) {
        var mh$ = gtk_drop_target_async_set_formats$MH();
        try {
            mh$.invokeExact(self, formats);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_get_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_drop_target_async_get_formats$MH,"gtk_drop_target_async_get_formats");
    }
    /**
     * {@snippet :
     * GdkContentFormats* gtk_drop_target_async_get_formats(GtkDropTargetAsync* self);
     * }
     */
    public static MemorySegment gtk_drop_target_async_get_formats(MemorySegment self) {
        var mh$ = gtk_drop_target_async_get_formats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_set_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_drop_target_async_set_actions$MH,"gtk_drop_target_async_set_actions");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_async_set_actions(GtkDropTargetAsync* self, GdkDragAction actions);
     * }
     */
    public static void gtk_drop_target_async_set_actions(MemorySegment self, int actions) {
        var mh$ = gtk_drop_target_async_set_actions$MH();
        try {
            mh$.invokeExact(self, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_drop_target_async_get_actions$MH,"gtk_drop_target_async_get_actions");
    }
    /**
     * {@snippet :
     * GdkDragAction gtk_drop_target_async_get_actions(GtkDropTargetAsync* self);
     * }
     */
    public static int gtk_drop_target_async_get_actions(MemorySegment self) {
        var mh$ = gtk_drop_target_async_get_actions$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_reject_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_drop_target_async_reject_drop$MH,"gtk_drop_target_async_reject_drop");
    }
    /**
     * {@snippet :
     * void gtk_drop_target_async_reject_drop(GtkDropTargetAsync* self, GdkDrop* drop);
     * }
     */
    public static void gtk_drop_target_async_reject_drop(MemorySegment self, MemorySegment drop) {
        var mh$ = gtk_drop_target_async_reject_drop$MH();
        try {
            mh$.invokeExact(self, drop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_drop_down_get_type$MH,"gtk_drop_down_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drop_down_get_type();
     * }
     */
    public static long gtk_drop_down_get_type() {
        var mh$ = gtk_drop_down_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkDropDown* GtkDropDown_autoptr;
     * }
     */
    public static final OfAddress GtkDropDown_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDropDown_listautoptr;
     * }
     */
    public static final OfAddress GtkDropDown_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDropDown_slistautoptr;
     * }
     */
    public static final OfAddress GtkDropDown_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDropDown_queueautoptr;
     * }
     */
    public static final OfAddress GtkDropDown_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkDropDownClass_autoptr;
     * }
     */
    public static final OfAddress GtkDropDownClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDropDownClass_listautoptr;
     * }
     */
    public static final OfAddress GtkDropDownClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDropDownClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkDropDownClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDropDownClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkDropDownClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_drop_down_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_drop_down_new$MH,"gtk_drop_down_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drop_down_new(GListModel* model, GtkExpression* expression);
     * }
     */
    public static MemorySegment gtk_drop_down_new(MemorySegment model, MemorySegment expression) {
        var mh$ = gtk_drop_down_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_new_from_strings$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_drop_down_new_from_strings$MH,"gtk_drop_down_new_from_strings");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drop_down_new_from_strings(char** strings);
     * }
     */
    public static MemorySegment gtk_drop_down_new_from_strings(MemorySegment strings) {
        var mh$ = gtk_drop_down_new_from_strings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(strings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_drop_down_set_model$MH,"gtk_drop_down_set_model");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_model(GtkDropDown* self, GListModel* model);
     * }
     */
    public static void gtk_drop_down_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_drop_down_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_drop_down_get_model$MH,"gtk_drop_down_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_drop_down_get_model(GtkDropDown* self);
     * }
     */
    public static MemorySegment gtk_drop_down_get_model(MemorySegment self) {
        var mh$ = gtk_drop_down_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_drop_down_set_selected$MH,"gtk_drop_down_set_selected");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_selected(GtkDropDown* self, guint position);
     * }
     */
    public static void gtk_drop_down_set_selected(MemorySegment self, int position) {
        var mh$ = gtk_drop_down_set_selected$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_drop_down_get_selected$MH,"gtk_drop_down_get_selected");
    }
    /**
     * {@snippet :
     * guint gtk_drop_down_get_selected(GtkDropDown* self);
     * }
     */
    public static int gtk_drop_down_get_selected(MemorySegment self) {
        var mh$ = gtk_drop_down_get_selected$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_selected_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_drop_down_get_selected_item$MH,"gtk_drop_down_get_selected_item");
    }
    /**
     * {@snippet :
     * gpointer gtk_drop_down_get_selected_item(GtkDropDown* self);
     * }
     */
    public static MemorySegment gtk_drop_down_get_selected_item(MemorySegment self) {
        var mh$ = gtk_drop_down_get_selected_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_drop_down_set_factory$MH,"gtk_drop_down_set_factory");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_factory(GtkDropDown* self, GtkListItemFactory* factory);
     * }
     */
    public static void gtk_drop_down_set_factory(MemorySegment self, MemorySegment factory) {
        var mh$ = gtk_drop_down_set_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_drop_down_get_factory$MH,"gtk_drop_down_get_factory");
    }
    /**
     * {@snippet :
     * GtkListItemFactory* gtk_drop_down_get_factory(GtkDropDown* self);
     * }
     */
    public static MemorySegment gtk_drop_down_get_factory(MemorySegment self) {
        var mh$ = gtk_drop_down_get_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_list_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_drop_down_set_list_factory$MH,"gtk_drop_down_set_list_factory");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_list_factory(GtkDropDown* self, GtkListItemFactory* factory);
     * }
     */
    public static void gtk_drop_down_set_list_factory(MemorySegment self, MemorySegment factory) {
        var mh$ = gtk_drop_down_set_list_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_list_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_drop_down_get_list_factory$MH,"gtk_drop_down_get_list_factory");
    }
    /**
     * {@snippet :
     * GtkListItemFactory* gtk_drop_down_get_list_factory(GtkDropDown* self);
     * }
     */
    public static MemorySegment gtk_drop_down_get_list_factory(MemorySegment self) {
        var mh$ = gtk_drop_down_get_list_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_drop_down_set_expression$MH,"gtk_drop_down_set_expression");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_expression(GtkDropDown* self, GtkExpression* expression);
     * }
     */
    public static void gtk_drop_down_set_expression(MemorySegment self, MemorySegment expression) {
        var mh$ = gtk_drop_down_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_drop_down_get_expression$MH,"gtk_drop_down_get_expression");
    }
    /**
     * {@snippet :
     * GtkExpression* gtk_drop_down_get_expression(GtkDropDown* self);
     * }
     */
    public static MemorySegment gtk_drop_down_get_expression(MemorySegment self) {
        var mh$ = gtk_drop_down_get_expression$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_drop_down_set_enable_search$MH,"gtk_drop_down_set_enable_search");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_enable_search(GtkDropDown* self, gboolean enable_search);
     * }
     */
    public static void gtk_drop_down_set_enable_search(MemorySegment self, int enable_search) {
        var mh$ = gtk_drop_down_set_enable_search$MH();
        try {
            mh$.invokeExact(self, enable_search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_drop_down_get_enable_search$MH,"gtk_drop_down_get_enable_search");
    }
    /**
     * {@snippet :
     * gboolean gtk_drop_down_get_enable_search(GtkDropDown* self);
     * }
     */
    public static int gtk_drop_down_get_enable_search(MemorySegment self) {
        var mh$ = gtk_drop_down_get_enable_search$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_drop_down_set_show_arrow$MH,"gtk_drop_down_set_show_arrow");
    }
    /**
     * {@snippet :
     * void gtk_drop_down_set_show_arrow(GtkDropDown* self, gboolean show_arrow);
     * }
     */
    public static void gtk_drop_down_set_show_arrow(MemorySegment self, int show_arrow) {
        var mh$ = gtk_drop_down_set_show_arrow$MH();
        try {
            mh$.invokeExact(self, show_arrow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_drop_down_get_show_arrow$MH,"gtk_drop_down_get_show_arrow");
    }
    /**
     * {@snippet :
     * gboolean gtk_drop_down_get_show_arrow(GtkDropDown* self);
     * }
     */
    public static int gtk_drop_down_get_show_arrow(MemorySegment self) {
        var mh$ = gtk_drop_down_get_show_arrow$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_editable_label_get_type$MH,"gtk_editable_label_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_editable_label_get_type();
     * }
     */
    public static long gtk_editable_label_get_type() {
        var mh$ = gtk_editable_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkEditableLabel* GtkEditableLabel_autoptr;
     * }
     */
    public static final OfAddress GtkEditableLabel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkEditableLabel_listautoptr;
     * }
     */
    public static final OfAddress GtkEditableLabel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkEditableLabel_slistautoptr;
     * }
     */
    public static final OfAddress GtkEditableLabel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkEditableLabel_queueautoptr;
     * }
     */
    public static final OfAddress GtkEditableLabel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkEditableLabelClass_autoptr;
     * }
     */
    public static final OfAddress GtkEditableLabelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkEditableLabelClass_listautoptr;
     * }
     */
    public static final OfAddress GtkEditableLabelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkEditableLabelClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkEditableLabelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkEditableLabelClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkEditableLabelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_editable_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_editable_label_new$MH,"gtk_editable_label_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_editable_label_new(char* str);
     * }
     */
    public static MemorySegment gtk_editable_label_new(MemorySegment str) {
        var mh$ = gtk_editable_label_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_get_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_editable_label_get_editing$MH,"gtk_editable_label_get_editing");
    }
    /**
     * {@snippet :
     * gboolean gtk_editable_label_get_editing(GtkEditableLabel* self);
     * }
     */
    public static int gtk_editable_label_get_editing(MemorySegment self) {
        var mh$ = gtk_editable_label_get_editing$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_start_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_editable_label_start_editing$MH,"gtk_editable_label_start_editing");
    }
    /**
     * {@snippet :
     * void gtk_editable_label_start_editing(GtkEditableLabel* self);
     * }
     */
    public static void gtk_editable_label_start_editing(MemorySegment self) {
        var mh$ = gtk_editable_label_start_editing$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_stop_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_editable_label_stop_editing$MH,"gtk_editable_label_stop_editing");
    }
    /**
     * {@snippet :
     * void gtk_editable_label_stop_editing(GtkEditableLabel* self, gboolean commit);
     * }
     */
    public static void gtk_editable_label_stop_editing(MemorySegment self, int commit) {
        var mh$ = gtk_editable_label_stop_editing$MH();
        try {
            mh$.invokeExact(self, commit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_emoji_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_emoji_chooser_get_type$MH,"gtk_emoji_chooser_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_emoji_chooser_get_type();
     * }
     */
    public static long gtk_emoji_chooser_get_type() {
        var mh$ = gtk_emoji_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_emoji_chooser_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_emoji_chooser_new$MH,"gtk_emoji_chooser_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_emoji_chooser_new();
     * }
     */
    public static MemorySegment gtk_emoji_chooser_new() {
        var mh$ = gtk_emoji_chooser_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_event_controller_focus_get_type$MH,"gtk_event_controller_focus_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_focus_get_type();
     * }
     */
    public static long gtk_event_controller_focus_get_type() {
        var mh$ = gtk_event_controller_focus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_event_controller_focus_new$MH,"gtk_event_controller_focus_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_focus_new();
     * }
     */
    public static MemorySegment gtk_event_controller_focus_new() {
        var mh$ = gtk_event_controller_focus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_contains_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_event_controller_focus_contains_focus$MH,"gtk_event_controller_focus_contains_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_focus_contains_focus(GtkEventControllerFocus* self);
     * }
     */
    public static int gtk_event_controller_focus_contains_focus(MemorySegment self) {
        var mh$ = gtk_event_controller_focus_contains_focus$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_is_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_event_controller_focus_is_focus$MH,"gtk_event_controller_focus_is_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_focus_is_focus(GtkEventControllerFocus* self);
     * }
     */
    public static int gtk_event_controller_focus_is_focus(MemorySegment self) {
        var mh$ = gtk_event_controller_focus_is_focus$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_event_controller_key_get_type$MH,"gtk_event_controller_key_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_key_get_type();
     * }
     */
    public static long gtk_event_controller_key_get_type() {
        var mh$ = gtk_event_controller_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_event_controller_key_new$MH,"gtk_event_controller_key_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_key_new();
     * }
     */
    public static MemorySegment gtk_event_controller_key_new() {
        var mh$ = gtk_event_controller_key_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_set_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_event_controller_key_set_im_context$MH,"gtk_event_controller_key_set_im_context");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_key_set_im_context(GtkEventControllerKey* controller, GtkIMContext* im_context);
     * }
     */
    public static void gtk_event_controller_key_set_im_context(MemorySegment controller, MemorySegment im_context) {
        var mh$ = gtk_event_controller_key_set_im_context$MH();
        try {
            mh$.invokeExact(controller, im_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_event_controller_key_get_im_context$MH,"gtk_event_controller_key_get_im_context");
    }
    /**
     * {@snippet :
     * GtkIMContext* gtk_event_controller_key_get_im_context(GtkEventControllerKey* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_key_get_im_context(MemorySegment controller) {
        var mh$ = gtk_event_controller_key_get_im_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_forward$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_event_controller_key_forward$MH,"gtk_event_controller_key_forward");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_key_forward(GtkEventControllerKey* controller, GtkWidget* widget);
     * }
     */
    public static int gtk_event_controller_key_forward(MemorySegment controller, MemorySegment widget) {
        var mh$ = gtk_event_controller_key_forward$MH();
        try {
            return (int)mh$.invokeExact(controller, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_event_controller_key_get_group$MH,"gtk_event_controller_key_get_group");
    }
    /**
     * {@snippet :
     * guint gtk_event_controller_key_get_group(GtkEventControllerKey* controller);
     * }
     */
    public static int gtk_event_controller_key_get_group(MemorySegment controller) {
        var mh$ = gtk_event_controller_key_get_group$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_legacy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_event_controller_legacy_get_type$MH,"gtk_event_controller_legacy_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_legacy_get_type();
     * }
     */
    public static long gtk_event_controller_legacy_get_type() {
        var mh$ = gtk_event_controller_legacy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_legacy_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_event_controller_legacy_new$MH,"gtk_event_controller_legacy_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_legacy_new();
     * }
     */
    public static MemorySegment gtk_event_controller_legacy_new() {
        var mh$ = gtk_event_controller_legacy_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_event_controller_motion_get_type$MH,"gtk_event_controller_motion_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_motion_get_type();
     * }
     */
    public static long gtk_event_controller_motion_get_type() {
        var mh$ = gtk_event_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_event_controller_motion_new$MH,"gtk_event_controller_motion_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_motion_new();
     * }
     */
    public static MemorySegment gtk_event_controller_motion_new() {
        var mh$ = gtk_event_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_contains_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_event_controller_motion_contains_pointer$MH,"gtk_event_controller_motion_contains_pointer");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_motion_contains_pointer(GtkEventControllerMotion* self);
     * }
     */
    public static int gtk_event_controller_motion_contains_pointer(MemorySegment self) {
        var mh$ = gtk_event_controller_motion_contains_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_is_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_event_controller_motion_is_pointer$MH,"gtk_event_controller_motion_is_pointer");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_motion_is_pointer(GtkEventControllerMotion* self);
     * }
     */
    public static int gtk_event_controller_motion_is_pointer(MemorySegment self) {
        var mh$ = gtk_event_controller_motion_is_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_NONE = 0;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_VERTICAL = 1;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_VERTICAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL = 2;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_DISCRETE = 4;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_DISCRETE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_KINETIC = 8;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_KINETIC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES = 3;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES() {
        return (int)3L;
    }
    public static MethodHandle gtk_event_controller_scroll_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_event_controller_scroll_get_type$MH,"gtk_event_controller_scroll_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_scroll_get_type();
     * }
     */
    public static long gtk_event_controller_scroll_get_type() {
        var mh$ = gtk_event_controller_scroll_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_event_controller_scroll_new$MH,"gtk_event_controller_scroll_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_scroll_new(GtkEventControllerScrollFlags flags);
     * }
     */
    public static MemorySegment gtk_event_controller_scroll_new(int flags) {
        var mh$ = gtk_event_controller_scroll_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_event_controller_scroll_set_flags$MH,"gtk_event_controller_scroll_set_flags");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_scroll_set_flags(GtkEventControllerScroll* scroll, GtkEventControllerScrollFlags flags);
     * }
     */
    public static void gtk_event_controller_scroll_set_flags(MemorySegment scroll, int flags) {
        var mh$ = gtk_event_controller_scroll_set_flags$MH();
        try {
            mh$.invokeExact(scroll, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_event_controller_scroll_get_flags$MH,"gtk_event_controller_scroll_get_flags");
    }
    /**
     * {@snippet :
     * GtkEventControllerScrollFlags gtk_event_controller_scroll_get_flags(GtkEventControllerScroll* scroll);
     * }
     */
    public static int gtk_event_controller_scroll_get_flags(MemorySegment scroll) {
        var mh$ = gtk_event_controller_scroll_get_flags$MH();
        try {
            return (int)mh$.invokeExact(scroll);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_expander_get_type$MH,"gtk_expander_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_expander_get_type();
     * }
     */
    public static long gtk_expander_get_type() {
        var mh$ = gtk_expander_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_expander_new$MH,"gtk_expander_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_new(char* label);
     * }
     */
    public static MemorySegment gtk_expander_new(MemorySegment label) {
        var mh$ = gtk_expander_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_expander_new_with_mnemonic$MH,"gtk_expander_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_expander_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_expander_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_expander_set_expanded$MH,"gtk_expander_set_expanded");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_expanded(GtkExpander* expander, gboolean expanded);
     * }
     */
    public static void gtk_expander_set_expanded(MemorySegment expander, int expanded) {
        var mh$ = gtk_expander_set_expanded$MH();
        try {
            mh$.invokeExact(expander, expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_expander_get_expanded$MH,"gtk_expander_get_expanded");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_expanded(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_expanded(MemorySegment expander) {
        var mh$ = gtk_expander_get_expanded$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_expander_set_label$MH,"gtk_expander_set_label");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label(GtkExpander* expander, char* label);
     * }
     */
    public static void gtk_expander_set_label(MemorySegment expander, MemorySegment label) {
        var mh$ = gtk_expander_set_label$MH();
        try {
            mh$.invokeExact(expander, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_expander_get_label$MH,"gtk_expander_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_expander_get_label(GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_label(MemorySegment expander) {
        var mh$ = gtk_expander_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_expander_set_use_underline$MH,"gtk_expander_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_use_underline(GtkExpander* expander, gboolean use_underline);
     * }
     */
    public static void gtk_expander_set_use_underline(MemorySegment expander, int use_underline) {
        var mh$ = gtk_expander_set_use_underline$MH();
        try {
            mh$.invokeExact(expander, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_expander_get_use_underline$MH,"gtk_expander_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_use_underline(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_use_underline(MemorySegment expander) {
        var mh$ = gtk_expander_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_expander_set_use_markup$MH,"gtk_expander_set_use_markup");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_use_markup(GtkExpander* expander, gboolean use_markup);
     * }
     */
    public static void gtk_expander_set_use_markup(MemorySegment expander, int use_markup) {
        var mh$ = gtk_expander_set_use_markup$MH();
        try {
            mh$.invokeExact(expander, use_markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_expander_get_use_markup$MH,"gtk_expander_get_use_markup");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_use_markup(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_use_markup(MemorySegment expander) {
        var mh$ = gtk_expander_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_expander_set_label_widget$MH,"gtk_expander_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label_widget(GtkExpander* expander, GtkWidget* label_widget);
     * }
     */
    public static void gtk_expander_set_label_widget(MemorySegment expander, MemorySegment label_widget) {
        var mh$ = gtk_expander_set_label_widget$MH();
        try {
            mh$.invokeExact(expander, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_expander_get_label_widget$MH,"gtk_expander_get_label_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_get_label_widget(GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_label_widget(MemorySegment expander) {
        var mh$ = gtk_expander_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_expander_set_resize_toplevel$MH,"gtk_expander_set_resize_toplevel");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_resize_toplevel(GtkExpander* expander, gboolean resize_toplevel);
     * }
     */
    public static void gtk_expander_set_resize_toplevel(MemorySegment expander, int resize_toplevel) {
        var mh$ = gtk_expander_set_resize_toplevel$MH();
        try {
            mh$.invokeExact(expander, resize_toplevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_expander_get_resize_toplevel$MH,"gtk_expander_get_resize_toplevel");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_resize_toplevel(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_resize_toplevel(MemorySegment expander) {
        var mh$ = gtk_expander_get_resize_toplevel$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_expander_set_child$MH,"gtk_expander_set_child");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_child(GtkExpander* expander, GtkWidget* child);
     * }
     */
    public static void gtk_expander_set_child(MemorySegment expander, MemorySegment child) {
        var mh$ = gtk_expander_set_child$MH();
        try {
            mh$.invokeExact(expander, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_expander_get_child$MH,"gtk_expander_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_get_child(GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_child(MemorySegment expander) {
        var mh$ = gtk_expander_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_fixed_get_type$MH,"gtk_fixed_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_fixed_get_type();
     * }
     */
    public static long gtk_fixed_get_type() {
        var mh$ = gtk_fixed_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_fixed_new$MH,"gtk_fixed_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_fixed_new();
     * }
     */
    public static MemorySegment gtk_fixed_new() {
        var mh$ = gtk_fixed_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_put$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_fixed_put$MH,"gtk_fixed_put");
    }
    /**
     * {@snippet :
     * void gtk_fixed_put(GtkFixed* fixed, GtkWidget* widget, double x, double y);
     * }
     */
    public static void gtk_fixed_put(MemorySegment fixed, MemorySegment widget, double x, double y) {
        var mh$ = gtk_fixed_put$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_fixed_remove$MH,"gtk_fixed_remove");
    }
    /**
     * {@snippet :
     * void gtk_fixed_remove(GtkFixed* fixed, GtkWidget* widget);
     * }
     */
    public static void gtk_fixed_remove(MemorySegment fixed, MemorySegment widget) {
        var mh$ = gtk_fixed_remove$MH();
        try {
            mh$.invokeExact(fixed, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_move$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_fixed_move$MH,"gtk_fixed_move");
    }
    /**
     * {@snippet :
     * void gtk_fixed_move(GtkFixed* fixed, GtkWidget* widget, double x, double y);
     * }
     */
    public static void gtk_fixed_move(MemorySegment fixed, MemorySegment widget, double x, double y) {
        var mh$ = gtk_fixed_move$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_child_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_fixed_get_child_position$MH,"gtk_fixed_get_child_position");
    }
    /**
     * {@snippet :
     * void gtk_fixed_get_child_position(GtkFixed* fixed, GtkWidget* widget, double* x, double* y);
     * }
     */
    public static void gtk_fixed_get_child_position(MemorySegment fixed, MemorySegment widget, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_fixed_get_child_position$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_set_child_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_fixed_set_child_transform$MH,"gtk_fixed_set_child_transform");
    }
    /**
     * {@snippet :
     * void gtk_fixed_set_child_transform(GtkFixed* fixed, GtkWidget* widget, GskTransform* transform);
     * }
     */
    public static void gtk_fixed_set_child_transform(MemorySegment fixed, MemorySegment widget, MemorySegment transform) {
        var mh$ = gtk_fixed_set_child_transform$MH();
        try {
            mh$.invokeExact(fixed, widget, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_child_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_fixed_get_child_transform$MH,"gtk_fixed_get_child_transform");
    }
    /**
     * {@snippet :
     * GskTransform* gtk_fixed_get_child_transform(GtkFixed* fixed, GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_fixed_get_child_transform(MemorySegment fixed, MemorySegment widget) {
        var mh$ = gtk_fixed_get_child_transform$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fixed, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_fixed_layout_get_type$MH,"gtk_fixed_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_fixed_layout_get_type();
     * }
     */
    public static long gtk_fixed_layout_get_type() {
        var mh$ = gtk_fixed_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFixedLayout* GtkFixedLayout_autoptr;
     * }
     */
    public static final OfAddress GtkFixedLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFixedLayout_listautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFixedLayout_slistautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFixedLayout_queueautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkFixedLayoutClass_autoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFixedLayoutClass_listautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFixedLayoutClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFixedLayoutClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_fixed_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_fixed_layout_new$MH,"gtk_fixed_layout_new");
    }
    /**
     * {@snippet :
     * GtkLayoutManager* gtk_fixed_layout_new();
     * }
     */
    public static MemorySegment gtk_fixed_layout_new() {
        var mh$ = gtk_fixed_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_fixed_layout_child_get_type$MH,"gtk_fixed_layout_child_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_fixed_layout_child_get_type();
     * }
     */
    public static long gtk_fixed_layout_child_get_type() {
        var mh$ = gtk_fixed_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFixedLayoutChild* GtkFixedLayoutChild_autoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFixedLayoutChild_listautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFixedLayoutChild_slistautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFixedLayoutChild_queueautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkFixedLayoutChildClass_autoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFixedLayoutChildClass_listautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFixedLayoutChildClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFixedLayoutChildClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkFixedLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_fixed_layout_child_set_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_fixed_layout_child_set_transform$MH,"gtk_fixed_layout_child_set_transform");
    }
    /**
     * {@snippet :
     * void gtk_fixed_layout_child_set_transform(GtkFixedLayoutChild* child, GskTransform* transform);
     * }
     */
    public static void gtk_fixed_layout_child_set_transform(MemorySegment child, MemorySegment transform) {
        var mh$ = gtk_fixed_layout_child_set_transform$MH();
        try {
            mh$.invokeExact(child, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_child_get_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_fixed_layout_child_get_transform$MH,"gtk_fixed_layout_child_get_transform");
    }
    /**
     * {@snippet :
     * GskTransform* gtk_fixed_layout_child_get_transform(GtkFixedLayoutChild* child);
     * }
     */
    public static MemorySegment gtk_fixed_layout_child_get_transform(MemorySegment child) {
        var mh$ = gtk_fixed_layout_child_get_transform$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_file_filter_get_type$MH,"gtk_file_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_filter_get_type();
     * }
     */
    public static long gtk_file_filter_get_type() {
        var mh$ = gtk_file_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_file_filter_new$MH,"gtk_file_filter_new");
    }
    /**
     * {@snippet :
     * GtkFileFilter* gtk_file_filter_new();
     * }
     */
    public static MemorySegment gtk_file_filter_new() {
        var mh$ = gtk_file_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_file_filter_set_name$MH,"gtk_file_filter_set_name");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_set_name(GtkFileFilter* filter, char* name);
     * }
     */
    public static void gtk_file_filter_set_name(MemorySegment filter, MemorySegment name) {
        var mh$ = gtk_file_filter_set_name$MH();
        try {
            mh$.invokeExact(filter, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_file_filter_get_name$MH,"gtk_file_filter_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_file_filter_get_name(GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_get_name(MemorySegment filter) {
        var mh$ = gtk_file_filter_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_file_filter_add_mime_type$MH,"gtk_file_filter_add_mime_type");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_mime_type(GtkFileFilter* filter, char* mime_type);
     * }
     */
    public static void gtk_file_filter_add_mime_type(MemorySegment filter, MemorySegment mime_type) {
        var mh$ = gtk_file_filter_add_mime_type$MH();
        try {
            mh$.invokeExact(filter, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_file_filter_add_pattern$MH,"gtk_file_filter_add_pattern");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_pattern(GtkFileFilter* filter, char* pattern);
     * }
     */
    public static void gtk_file_filter_add_pattern(MemorySegment filter, MemorySegment pattern) {
        var mh$ = gtk_file_filter_add_pattern$MH();
        try {
            mh$.invokeExact(filter, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_suffix$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_file_filter_add_suffix$MH,"gtk_file_filter_add_suffix");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_suffix(GtkFileFilter* filter, char* suffix);
     * }
     */
    public static void gtk_file_filter_add_suffix(MemorySegment filter, MemorySegment suffix) {
        var mh$ = gtk_file_filter_add_suffix$MH();
        try {
            mh$.invokeExact(filter, suffix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pixbuf_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_file_filter_add_pixbuf_formats$MH,"gtk_file_filter_add_pixbuf_formats");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_pixbuf_formats(GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_filter_add_pixbuf_formats(MemorySegment filter) {
        var mh$ = gtk_file_filter_add_pixbuf_formats$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_file_filter_get_attributes$MH,"gtk_file_filter_get_attributes");
    }
    /**
     * {@snippet :
     * char** gtk_file_filter_get_attributes(GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_get_attributes(MemorySegment filter) {
        var mh$ = gtk_file_filter_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_file_filter_to_gvariant$MH,"gtk_file_filter_to_gvariant");
    }
    /**
     * {@snippet :
     * GVariant* gtk_file_filter_to_gvariant(GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_to_gvariant(MemorySegment filter) {
        var mh$ = gtk_file_filter_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_file_filter_new_from_gvariant$MH,"gtk_file_filter_new_from_gvariant");
    }
    /**
     * {@snippet :
     * GtkFileFilter* gtk_file_filter_new_from_gvariant(GVariant* variant);
     * }
     */
    public static MemorySegment gtk_file_filter_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_file_filter_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_OPEN = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_OPEN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_SAVE = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_SAVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER() {
        return (int)2L;
    }
    public static MethodHandle gtk_file_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_file_chooser_get_type$MH,"gtk_file_chooser_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_get_type();
     * }
     */
    public static long gtk_file_chooser_get_type() {
        var mh$ = gtk_file_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_NONEXISTENT = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_NONEXISTENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_BAD_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_BAD_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME = 3;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME() {
        return (int)3L;
    }
    public static MethodHandle gtk_file_chooser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_file_chooser_error_quark$MH,"gtk_file_chooser_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_file_chooser_error_quark();
     * }
     */
    public static int gtk_file_chooser_error_quark() {
        var mh$ = gtk_file_chooser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_file_chooser_set_action$MH,"gtk_file_chooser_set_action");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_action(GtkFileChooser* chooser, GtkFileChooserAction action);
     * }
     */
    public static void gtk_file_chooser_set_action(MemorySegment chooser, int action) {
        var mh$ = gtk_file_chooser_set_action$MH();
        try {
            mh$.invokeExact(chooser, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_file_chooser_get_action$MH,"gtk_file_chooser_get_action");
    }
    /**
     * {@snippet :
     * GtkFileChooserAction gtk_file_chooser_get_action(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_action(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_action$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_file_chooser_set_select_multiple$MH,"gtk_file_chooser_set_select_multiple");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_select_multiple(GtkFileChooser* chooser, gboolean select_multiple);
     * }
     */
    public static void gtk_file_chooser_set_select_multiple(MemorySegment chooser, int select_multiple) {
        var mh$ = gtk_file_chooser_set_select_multiple$MH();
        try {
            mh$.invokeExact(chooser, select_multiple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_file_chooser_get_select_multiple$MH,"gtk_file_chooser_get_select_multiple");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_select_multiple(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_select_multiple(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_select_multiple$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_file_chooser_set_create_folders$MH,"gtk_file_chooser_set_create_folders");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_create_folders(GtkFileChooser* chooser, gboolean create_folders);
     * }
     */
    public static void gtk_file_chooser_set_create_folders(MemorySegment chooser, int create_folders) {
        var mh$ = gtk_file_chooser_set_create_folders$MH();
        try {
            mh$.invokeExact(chooser, create_folders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_file_chooser_get_create_folders$MH,"gtk_file_chooser_get_create_folders");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_create_folders(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_create_folders(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_create_folders$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_file_chooser_set_current_name$MH,"gtk_file_chooser_set_current_name");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_current_name(GtkFileChooser* chooser, char* name);
     * }
     */
    public static void gtk_file_chooser_set_current_name(MemorySegment chooser, MemorySegment name) {
        var mh$ = gtk_file_chooser_set_current_name$MH();
        try {
            mh$.invokeExact(chooser, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_file_chooser_get_current_name$MH,"gtk_file_chooser_get_current_name");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_current_name(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_name(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_file_chooser_get_file$MH,"gtk_file_chooser_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_file_chooser_get_file(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_file_chooser_set_file$MH,"gtk_file_chooser_set_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_file(GtkFileChooser* chooser, GFile* file, GError** error);
     * }
     */
    public static int gtk_file_chooser_set_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_set_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_files$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_file_chooser_get_files$MH,"gtk_file_chooser_get_files");
    }
    /**
     * {@snippet :
     * GListModel* gtk_file_chooser_get_files(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_files(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_files$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_file_chooser_set_current_folder$MH,"gtk_file_chooser_set_current_folder");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_current_folder(GtkFileChooser* chooser, GFile* file, GError** error);
     * }
     */
    public static int gtk_file_chooser_set_current_folder(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_set_current_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_file_chooser_get_current_folder$MH,"gtk_file_chooser_get_current_folder");
    }
    /**
     * {@snippet :
     * GFile* gtk_file_chooser_get_current_folder(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_file_chooser_add_filter$MH,"gtk_file_chooser_add_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_add_filter(GtkFileChooser* chooser, GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_add_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_add_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_file_chooser_remove_filter$MH,"gtk_file_chooser_remove_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_remove_filter(GtkFileChooser* chooser, GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_remove_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_remove_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filters$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_file_chooser_get_filters$MH,"gtk_file_chooser_get_filters");
    }
    /**
     * {@snippet :
     * GListModel* gtk_file_chooser_get_filters(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filters(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filters$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_file_chooser_set_filter$MH,"gtk_file_chooser_set_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_filter(GtkFileChooser* chooser, GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_set_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_set_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_file_chooser_get_filter$MH,"gtk_file_chooser_get_filter");
    }
    /**
     * {@snippet :
     * GtkFileFilter* gtk_file_chooser_get_filter(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filter(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_file_chooser_add_shortcut_folder$MH,"gtk_file_chooser_add_shortcut_folder");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_add_shortcut_folder(GtkFileChooser* chooser, GFile* folder, GError** error);
     * }
     */
    public static int gtk_file_chooser_add_shortcut_folder(MemorySegment chooser, MemorySegment folder, MemorySegment error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_file_chooser_remove_shortcut_folder$MH,"gtk_file_chooser_remove_shortcut_folder");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_remove_shortcut_folder(GtkFileChooser* chooser, GFile* folder, GError** error);
     * }
     */
    public static int gtk_file_chooser_remove_shortcut_folder(MemorySegment chooser, MemorySegment folder, MemorySegment error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_shortcut_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_file_chooser_get_shortcut_folders$MH,"gtk_file_chooser_get_shortcut_folders");
    }
    /**
     * {@snippet :
     * GListModel* gtk_file_chooser_get_shortcut_folders(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_shortcut_folders(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_shortcut_folders$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_file_chooser_add_choice$MH,"gtk_file_chooser_add_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_add_choice(GtkFileChooser* chooser, char* id, char* label, char** options, char** option_labels);
     * }
     */
    public static void gtk_file_chooser_add_choice(MemorySegment chooser, MemorySegment id, MemorySegment label, MemorySegment options, MemorySegment option_labels) {
        var mh$ = gtk_file_chooser_add_choice$MH();
        try {
            mh$.invokeExact(chooser, id, label, options, option_labels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_file_chooser_remove_choice$MH,"gtk_file_chooser_remove_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_remove_choice(GtkFileChooser* chooser, char* id);
     * }
     */
    public static void gtk_file_chooser_remove_choice(MemorySegment chooser, MemorySegment id) {
        var mh$ = gtk_file_chooser_remove_choice$MH();
        try {
            mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_file_chooser_set_choice$MH,"gtk_file_chooser_set_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_choice(GtkFileChooser* chooser, char* id, char* option);
     * }
     */
    public static void gtk_file_chooser_set_choice(MemorySegment chooser, MemorySegment id, MemorySegment option) {
        var mh$ = gtk_file_chooser_set_choice$MH();
        try {
            mh$.invokeExact(chooser, id, option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_file_chooser_get_choice$MH,"gtk_file_chooser_get_choice");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_choice(GtkFileChooser* chooser, char* id);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_choice(MemorySegment chooser, MemorySegment id) {
        var mh$ = gtk_file_chooser_get_choice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_file_chooser_dialog_get_type$MH,"gtk_file_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_dialog_get_type();
     * }
     */
    public static long gtk_file_chooser_dialog_get_type() {
        var mh$ = gtk_file_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_file_chooser_dialog_new$MH,"gtk_file_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_dialog_new(char* title, GtkWindow* parent, GtkFileChooserAction action, char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_file_chooser_dialog_new(MemorySegment title, MemorySegment parent, int action, MemorySegment first_button_text, Object... x4) {
        var mh$ = gtk_file_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, action, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_native_dialog_get_type$MH,"gtk_native_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_native_dialog_get_type();
     * }
     */
    public static long gtk_native_dialog_get_type() {
        var mh$ = gtk_native_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNativeDialog* GtkNativeDialog_autoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNativeDialog_listautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNativeDialog_slistautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNativeDialog_queueautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkNativeDialogClass* GtkNativeDialogClass_autoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNativeDialogClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNativeDialogClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNativeDialogClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_native_dialog_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_native_dialog_show$MH,"gtk_native_dialog_show");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_show(GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_show(MemorySegment self) {
        var mh$ = gtk_native_dialog_show$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_native_dialog_hide$MH,"gtk_native_dialog_hide");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_hide(GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_hide(MemorySegment self) {
        var mh$ = gtk_native_dialog_hide$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_native_dialog_destroy$MH,"gtk_native_dialog_destroy");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_destroy(GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_destroy(MemorySegment self) {
        var mh$ = gtk_native_dialog_destroy$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_native_dialog_get_visible$MH,"gtk_native_dialog_get_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_native_dialog_get_visible(GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_get_visible(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_native_dialog_set_modal$MH,"gtk_native_dialog_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_modal(GtkNativeDialog* self, gboolean modal);
     * }
     */
    public static void gtk_native_dialog_set_modal(MemorySegment self, int modal) {
        var mh$ = gtk_native_dialog_set_modal$MH();
        try {
            mh$.invokeExact(self, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_native_dialog_get_modal$MH,"gtk_native_dialog_get_modal");
    }
    /**
     * {@snippet :
     * gboolean gtk_native_dialog_get_modal(GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_get_modal(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_modal$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_native_dialog_set_title$MH,"gtk_native_dialog_set_title");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_title(GtkNativeDialog* self, char* title);
     * }
     */
    public static void gtk_native_dialog_set_title(MemorySegment self, MemorySegment title) {
        var mh$ = gtk_native_dialog_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_native_dialog_get_title$MH,"gtk_native_dialog_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_native_dialog_get_title(GtkNativeDialog* self);
     * }
     */
    public static MemorySegment gtk_native_dialog_get_title(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_native_dialog_set_transient_for$MH,"gtk_native_dialog_set_transient_for");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_transient_for(GtkNativeDialog* self, GtkWindow* parent);
     * }
     */
    public static void gtk_native_dialog_set_transient_for(MemorySegment self, MemorySegment parent) {
        var mh$ = gtk_native_dialog_set_transient_for$MH();
        try {
            mh$.invokeExact(self, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_native_dialog_get_transient_for$MH,"gtk_native_dialog_get_transient_for");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_native_dialog_get_transient_for(GtkNativeDialog* self);
     * }
     */
    public static MemorySegment gtk_native_dialog_get_transient_for(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_file_chooser_native_get_type$MH,"gtk_file_chooser_native_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_native_get_type();
     * }
     */
    public static long gtk_file_chooser_native_get_type() {
        var mh$ = gtk_file_chooser_native_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFileChooserNative* GtkFileChooserNative_autoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFileChooserNative_listautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFileChooserNative_slistautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFileChooserNative_queueautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkFileChooserNativeClass_autoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFileChooserNativeClass_listautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFileChooserNativeClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFileChooserNativeClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_file_chooser_native_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_file_chooser_native_new$MH,"gtk_file_chooser_native_new");
    }
    /**
     * {@snippet :
     * GtkFileChooserNative* gtk_file_chooser_native_new(char* title, GtkWindow* parent, GtkFileChooserAction action, char* accept_label, char* cancel_label);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_new(MemorySegment title, MemorySegment parent, int action, MemorySegment accept_label, MemorySegment cancel_label) {
        var mh$ = gtk_file_chooser_native_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, action, accept_label, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_file_chooser_native_get_accept_label$MH,"gtk_file_chooser_native_get_accept_label");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_native_get_accept_label(GtkFileChooserNative* self);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_get_accept_label(MemorySegment self) {
        var mh$ = gtk_file_chooser_native_get_accept_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_file_chooser_native_set_accept_label$MH,"gtk_file_chooser_native_set_accept_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_native_set_accept_label(GtkFileChooserNative* self, char* accept_label);
     * }
     */
    public static void gtk_file_chooser_native_set_accept_label(MemorySegment self, MemorySegment accept_label) {
        var mh$ = gtk_file_chooser_native_set_accept_label$MH();
        try {
            mh$.invokeExact(self, accept_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_file_chooser_native_get_cancel_label$MH,"gtk_file_chooser_native_get_cancel_label");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_native_get_cancel_label(GtkFileChooserNative* self);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_get_cancel_label(MemorySegment self) {
        var mh$ = gtk_file_chooser_native_get_cancel_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_file_chooser_native_set_cancel_label$MH,"gtk_file_chooser_native_set_cancel_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_native_set_cancel_label(GtkFileChooserNative* self, char* cancel_label);
     * }
     */
    public static void gtk_file_chooser_native_set_cancel_label(MemorySegment self, MemorySegment cancel_label) {
        var mh$ = gtk_file_chooser_native_set_cancel_label$MH();
        try {
            mh$.invokeExact(self, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_file_chooser_widget_get_type$MH,"gtk_file_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_widget_get_type();
     * }
     */
    public static long gtk_file_chooser_widget_get_type() {
        var mh$ = gtk_file_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_file_chooser_widget_new$MH,"gtk_file_chooser_widget_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_widget_new(GtkFileChooserAction action);
     * }
     */
    public static MemorySegment gtk_file_chooser_widget_new(int action) {
        var mh$ = gtk_file_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_filter_list_model_get_type$MH,"gtk_filter_list_model_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_filter_list_model_get_type();
     * }
     */
    public static long gtk_filter_list_model_get_type() {
        var mh$ = gtk_filter_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFilterListModel* GtkFilterListModel_autoptr;
     * }
     */
    public static final OfAddress GtkFilterListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFilterListModel_listautoptr;
     * }
     */
    public static final OfAddress GtkFilterListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFilterListModel_slistautoptr;
     * }
     */
    public static final OfAddress GtkFilterListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFilterListModel_queueautoptr;
     * }
     */
    public static final OfAddress GtkFilterListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkFilterListModelClass_autoptr;
     * }
     */
    public static final OfAddress GtkFilterListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFilterListModelClass_listautoptr;
     * }
     */
    public static final OfAddress GtkFilterListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFilterListModelClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkFilterListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFilterListModelClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkFilterListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_filter_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_filter_list_model_new$MH,"gtk_filter_list_model_new");
    }
    /**
     * {@snippet :
     * GtkFilterListModel* gtk_filter_list_model_new(GListModel* model, GtkFilter* filter);
     * }
     */
    public static MemorySegment gtk_filter_list_model_new(MemorySegment model, MemorySegment filter) {
        var mh$ = gtk_filter_list_model_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_filter_list_model_set_filter$MH,"gtk_filter_list_model_set_filter");
    }
    /**
     * {@snippet :
     * void gtk_filter_list_model_set_filter(GtkFilterListModel* self, GtkFilter* filter);
     * }
     */
    public static void gtk_filter_list_model_set_filter(MemorySegment self, MemorySegment filter) {
        var mh$ = gtk_filter_list_model_set_filter$MH();
        try {
            mh$.invokeExact(self, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_filter_list_model_get_filter$MH,"gtk_filter_list_model_get_filter");
    }
    /**
     * {@snippet :
     * GtkFilter* gtk_filter_list_model_get_filter(GtkFilterListModel* self);
     * }
     */
    public static MemorySegment gtk_filter_list_model_get_filter(MemorySegment self) {
        var mh$ = gtk_filter_list_model_get_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_filter_list_model_set_model$MH,"gtk_filter_list_model_set_model");
    }
    /**
     * {@snippet :
     * void gtk_filter_list_model_set_model(GtkFilterListModel* self, GListModel* model);
     * }
     */
    public static void gtk_filter_list_model_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_filter_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_filter_list_model_get_model$MH,"gtk_filter_list_model_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_filter_list_model_get_model(GtkFilterListModel* self);
     * }
     */
    public static MemorySegment gtk_filter_list_model_get_model(MemorySegment self) {
        var mh$ = gtk_filter_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_set_incremental$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_filter_list_model_set_incremental$MH,"gtk_filter_list_model_set_incremental");
    }
    /**
     * {@snippet :
     * void gtk_filter_list_model_set_incremental(GtkFilterListModel* self, gboolean incremental);
     * }
     */
    public static void gtk_filter_list_model_set_incremental(MemorySegment self, int incremental) {
        var mh$ = gtk_filter_list_model_set_incremental$MH();
        try {
            mh$.invokeExact(self, incremental);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_incremental$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_filter_list_model_get_incremental$MH,"gtk_filter_list_model_get_incremental");
    }
    /**
     * {@snippet :
     * gboolean gtk_filter_list_model_get_incremental(GtkFilterListModel* self);
     * }
     */
    public static int gtk_filter_list_model_get_incremental(MemorySegment self) {
        var mh$ = gtk_filter_list_model_get_incremental$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_filter_list_model_get_pending$MH,"gtk_filter_list_model_get_pending");
    }
    /**
     * {@snippet :
     * guint gtk_filter_list_model_get_pending(GtkFilterListModel* self);
     * }
     */
    public static int gtk_filter_list_model_get_pending(MemorySegment self) {
        var mh$ = gtk_filter_list_model_get_pending$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_custom_filter_get_type$MH,"gtk_custom_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_custom_filter_get_type();
     * }
     */
    public static long gtk_custom_filter_get_type() {
        var mh$ = gtk_custom_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkCustomFilter* GtkCustomFilter_autoptr;
     * }
     */
    public static final OfAddress GtkCustomFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCustomFilter_listautoptr;
     * }
     */
    public static final OfAddress GtkCustomFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCustomFilter_slistautoptr;
     * }
     */
    public static final OfAddress GtkCustomFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCustomFilter_queueautoptr;
     * }
     */
    public static final OfAddress GtkCustomFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkCustomFilterClass_autoptr;
     * }
     */
    public static final OfAddress GtkCustomFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCustomFilterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkCustomFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCustomFilterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkCustomFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCustomFilterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkCustomFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_custom_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_custom_filter_new$MH,"gtk_custom_filter_new");
    }
    /**
     * {@snippet :
     * GtkCustomFilter* gtk_custom_filter_new(GtkCustomFilterFunc match_func, gpointer user_data, GDestroyNotify user_destroy);
     * }
     */
    public static MemorySegment gtk_custom_filter_new(MemorySegment match_func, MemorySegment user_data, MemorySegment user_destroy) {
        var mh$ = gtk_custom_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(match_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_filter_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_custom_filter_set_filter_func$MH,"gtk_custom_filter_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_custom_filter_set_filter_func(GtkCustomFilter* self, GtkCustomFilterFunc match_func, gpointer user_data, GDestroyNotify user_destroy);
     * }
     */
    public static void gtk_custom_filter_set_filter_func(MemorySegment self, MemorySegment match_func, MemorySegment user_data, MemorySegment user_destroy) {
        var mh$ = gtk_custom_filter_set_filter_func$MH();
        try {
            mh$.invokeExact(self, match_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_flatten_list_model_get_type$MH,"gtk_flatten_list_model_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_flatten_list_model_get_type();
     * }
     */
    public static long gtk_flatten_list_model_get_type() {
        var mh$ = gtk_flatten_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFlattenListModel* GtkFlattenListModel_autoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFlattenListModel_listautoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFlattenListModel_slistautoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFlattenListModel_queueautoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkFlattenListModelClass_autoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFlattenListModelClass_listautoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFlattenListModelClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFlattenListModelClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkFlattenListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_flatten_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_flatten_list_model_new$MH,"gtk_flatten_list_model_new");
    }
    /**
     * {@snippet :
     * GtkFlattenListModel* gtk_flatten_list_model_new(GListModel* model);
     * }
     */
    public static MemorySegment gtk_flatten_list_model_new(MemorySegment model) {
        var mh$ = gtk_flatten_list_model_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_flatten_list_model_set_model$MH,"gtk_flatten_list_model_set_model");
    }
    /**
     * {@snippet :
     * void gtk_flatten_list_model_set_model(GtkFlattenListModel* self, GListModel* model);
     * }
     */
    public static void gtk_flatten_list_model_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_flatten_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_flatten_list_model_get_model$MH,"gtk_flatten_list_model_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_flatten_list_model_get_model(GtkFlattenListModel* self);
     * }
     */
    public static MemorySegment gtk_flatten_list_model_get_model(MemorySegment self) {
        var mh$ = gtk_flatten_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_get_model_for_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_flatten_list_model_get_model_for_item$MH,"gtk_flatten_list_model_get_model_for_item");
    }
    /**
     * {@snippet :
     * GListModel* gtk_flatten_list_model_get_model_for_item(GtkFlattenListModel* self, guint position);
     * }
     */
    public static MemorySegment gtk_flatten_list_model_get_model_for_item(MemorySegment self, int position) {
        var mh$ = gtk_flatten_list_model_get_model_for_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_flow_box_child_get_type$MH,"gtk_flow_box_child_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_flow_box_child_get_type();
     * }
     */
    public static long gtk_flow_box_child_get_type() {
        var mh$ = gtk_flow_box_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_flow_box_child_new$MH,"gtk_flow_box_child_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_flow_box_child_new();
     * }
     */
    public static MemorySegment gtk_flow_box_child_new() {
        var mh$ = gtk_flow_box_child_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_flow_box_child_set_child$MH,"gtk_flow_box_child_set_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_child_set_child(GtkFlowBoxChild* self, GtkWidget* child);
     * }
     */
    public static void gtk_flow_box_child_set_child(MemorySegment self, MemorySegment child) {
        var mh$ = gtk_flow_box_child_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_flow_box_child_get_child$MH,"gtk_flow_box_child_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_flow_box_child_get_child(GtkFlowBoxChild* self);
     * }
     */
    public static MemorySegment gtk_flow_box_child_get_child(MemorySegment self) {
        var mh$ = gtk_flow_box_child_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_flow_box_child_get_index$MH,"gtk_flow_box_child_get_index");
    }
    /**
     * {@snippet :
     * int gtk_flow_box_child_get_index(GtkFlowBoxChild* child);
     * }
     */
    public static int gtk_flow_box_child_get_index(MemorySegment child) {
        var mh$ = gtk_flow_box_child_get_index$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_flow_box_child_is_selected$MH,"gtk_flow_box_child_is_selected");
    }
    /**
     * {@snippet :
     * gboolean gtk_flow_box_child_is_selected(GtkFlowBoxChild* child);
     * }
     */
    public static int gtk_flow_box_child_is_selected(MemorySegment child) {
        var mh$ = gtk_flow_box_child_is_selected$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.gtk_flow_box_child_changed$MH,"gtk_flow_box_child_changed");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_child_changed(GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_child_changed(MemorySegment child) {
        var mh$ = gtk_flow_box_child_changed$MH();
        try {
            mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.gtk_flow_box_get_type$MH,"gtk_flow_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_flow_box_get_type();
     * }
     */
    public static long gtk_flow_box_get_type() {
        var mh$ = gtk_flow_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.gtk_flow_box_new$MH,"gtk_flow_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_flow_box_new();
     * }
     */
    public static MemorySegment gtk_flow_box_new() {
        var mh$ = gtk_flow_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.gtk_flow_box_bind_model$MH,"gtk_flow_box_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_bind_model(GtkFlowBox* box, GListModel* model, GtkFlowBoxCreateWidgetFunc create_widget_func, gpointer user_data, GDestroyNotify user_data_free_func);
     * }
     */
    public static void gtk_flow_box_bind_model(MemorySegment box, MemorySegment model, MemorySegment create_widget_func, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = gtk_flow_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.gtk_flow_box_set_homogeneous$MH,"gtk_flow_box_set_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_homogeneous(GtkFlowBox* box, gboolean homogeneous);
     * }
     */
    public static void gtk_flow_box_set_homogeneous(MemorySegment box, int homogeneous) {
        var mh$ = gtk_flow_box_set_homogeneous$MH();
        try {
            mh$.invokeExact(box, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.gtk_flow_box_get_homogeneous$MH,"gtk_flow_box_get_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_flow_box_get_homogeneous(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_homogeneous(MemorySegment box) {
        var mh$ = gtk_flow_box_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.gtk_flow_box_set_row_spacing$MH,"gtk_flow_box_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_row_spacing(GtkFlowBox* box, guint spacing);
     * }
     */
    public static void gtk_flow_box_set_row_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_flow_box_set_row_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.gtk_flow_box_get_row_spacing$MH,"gtk_flow_box_get_row_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_row_spacing(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_row_spacing(MemorySegment box) {
        var mh$ = gtk_flow_box_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.gtk_flow_box_set_column_spacing$MH,"gtk_flow_box_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_column_spacing(GtkFlowBox* box, guint spacing);
     * }
     */
    public static void gtk_flow_box_set_column_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_flow_box_set_column_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.gtk_flow_box_get_column_spacing$MH,"gtk_flow_box_get_column_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_column_spacing(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_column_spacing(MemorySegment box) {
        var mh$ = gtk_flow_box_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.gtk_flow_box_set_min_children_per_line$MH,"gtk_flow_box_set_min_children_per_line");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_min_children_per_line(GtkFlowBox* box, guint n_children);
     * }
     */
    public static void gtk_flow_box_set_min_children_per_line(MemorySegment box, int n_children) {
        var mh$ = gtk_flow_box_set_min_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.gtk_flow_box_get_min_children_per_line$MH,"gtk_flow_box_get_min_children_per_line");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_min_children_per_line(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_min_children_per_line(MemorySegment box) {
        var mh$ = gtk_flow_box_get_min_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.gtk_flow_box_set_max_children_per_line$MH,"gtk_flow_box_set_max_children_per_line");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_max_children_per_line(GtkFlowBox* box, guint n_children);
     * }
     */
    public static void gtk_flow_box_set_max_children_per_line(MemorySegment box, int n_children) {
        var mh$ = gtk_flow_box_set_max_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.gtk_flow_box_get_max_children_per_line$MH,"gtk_flow_box_get_max_children_per_line");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_max_children_per_line(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_max_children_per_line(MemorySegment box) {
        var mh$ = gtk_flow_box_get_max_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.gtk_flow_box_set_activate_on_single_click$MH,"gtk_flow_box_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_activate_on_single_click(GtkFlowBox* box, gboolean single);
     * }
     */
    public static void gtk_flow_box_set_activate_on_single_click(MemorySegment box, int single) {
        var mh$ = gtk_flow_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.gtk_flow_box_get_activate_on_single_click$MH,"gtk_flow_box_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_flow_box_get_activate_on_single_click(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_activate_on_single_click(MemorySegment box) {
        var mh$ = gtk_flow_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.gtk_flow_box_prepend$MH,"gtk_flow_box_prepend");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_prepend(GtkFlowBox* self, GtkWidget* child);
     * }
     */
    public static void gtk_flow_box_prepend(MemorySegment self, MemorySegment child) {
        var mh$ = gtk_flow_box_prepend$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.gtk_flow_box_append$MH,"gtk_flow_box_append");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_append(GtkFlowBox* self, GtkWidget* child);
     * }
     */
    public static void gtk_flow_box_append(MemorySegment self, MemorySegment child) {
        var mh$ = gtk_flow_box_append$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.gtk_flow_box_insert$MH,"gtk_flow_box_insert");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_insert(GtkFlowBox* box, GtkWidget* widget, int position);
     * }
     */
    public static void gtk_flow_box_insert(MemorySegment box, MemorySegment widget, int position) {
        var mh$ = gtk_flow_box_insert$MH();
        try {
            mh$.invokeExact(box, widget, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.gtk_flow_box_remove$MH,"gtk_flow_box_remove");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_remove(GtkFlowBox* box, GtkWidget* widget);
     * }
     */
    public static void gtk_flow_box_remove(MemorySegment box, MemorySegment widget) {
        var mh$ = gtk_flow_box_remove$MH();
        try {
            mh$.invokeExact(box, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.gtk_flow_box_get_child_at_index$MH,"gtk_flow_box_get_child_at_index");
    }
    /**
     * {@snippet :
     * GtkFlowBoxChild* gtk_flow_box_get_child_at_index(GtkFlowBox* box, int idx);
     * }
     */
    public static MemorySegment gtk_flow_box_get_child_at_index(MemorySegment box, int idx) {
        var mh$ = gtk_flow_box_get_child_at_index$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.gtk_flow_box_get_child_at_pos$MH,"gtk_flow_box_get_child_at_pos");
    }
    /**
     * {@snippet :
     * GtkFlowBoxChild* gtk_flow_box_get_child_at_pos(GtkFlowBox* box, int x, int y);
     * }
     */
    public static MemorySegment gtk_flow_box_get_child_at_pos(MemorySegment box, int x, int y) {
        var mh$ = gtk_flow_box_get_child_at_pos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.gtk_flow_box_selected_foreach$MH,"gtk_flow_box_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_selected_foreach(GtkFlowBox* box, GtkFlowBoxForeachFunc func, gpointer data);
     * }
     */
    public static void gtk_flow_box_selected_foreach(MemorySegment box, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_flow_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selected_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.gtk_flow_box_get_selected_children$MH,"gtk_flow_box_get_selected_children");
    }
    /**
     * {@snippet :
     * GList* gtk_flow_box_get_selected_children(GtkFlowBox* box);
     * }
     */
    public static MemorySegment gtk_flow_box_get_selected_children(MemorySegment box) {
        var mh$ = gtk_flow_box_get_selected_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.gtk_flow_box_select_child$MH,"gtk_flow_box_select_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_select_child(GtkFlowBox* box, GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_select_child(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_flow_box_select_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.gtk_flow_box_unselect_child$MH,"gtk_flow_box_unselect_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_unselect_child(GtkFlowBox* box, GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_unselect_child(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_flow_box_unselect_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.gtk_flow_box_select_all$MH,"gtk_flow_box_select_all");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_select_all(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_select_all(MemorySegment box) {
        var mh$ = gtk_flow_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.gtk_flow_box_unselect_all$MH,"gtk_flow_box_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_unselect_all(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_unselect_all(MemorySegment box) {
        var mh$ = gtk_flow_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.gtk_flow_box_set_selection_mode$MH,"gtk_flow_box_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_selection_mode(GtkFlowBox* box, GtkSelectionMode mode);
     * }
     */
    public static void gtk_flow_box_set_selection_mode(MemorySegment box, int mode) {
        var mh$ = gtk_flow_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.gtk_flow_box_get_selection_mode$MH,"gtk_flow_box_get_selection_mode");
    }
    /**
     * {@snippet :
     * GtkSelectionMode gtk_flow_box_get_selection_mode(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_selection_mode(MemorySegment box) {
        var mh$ = gtk_flow_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.gtk_flow_box_set_hadjustment$MH,"gtk_flow_box_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_hadjustment(GtkFlowBox* box, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_flow_box_set_hadjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_flow_box_set_hadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.gtk_flow_box_set_vadjustment$MH,"gtk_flow_box_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_vadjustment(GtkFlowBox* box, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_flow_box_set_vadjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_flow_box_set_vadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.gtk_flow_box_set_filter_func$MH,"gtk_flow_box_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_filter_func(GtkFlowBox* box, GtkFlowBoxFilterFunc filter_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_flow_box_set_filter_func(MemorySegment box, MemorySegment filter_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_flow_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.gtk_flow_box_invalidate_filter$MH,"gtk_flow_box_invalidate_filter");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_invalidate_filter(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_invalidate_filter(MemorySegment box) {
        var mh$ = gtk_flow_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.gtk_flow_box_set_sort_func$MH,"gtk_flow_box_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_sort_func(GtkFlowBox* box, GtkFlowBoxSortFunc sort_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_flow_box_set_sort_func(MemorySegment box, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_flow_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.gtk_flow_box_invalidate_sort$MH,"gtk_flow_box_invalidate_sort");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_invalidate_sort(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_invalidate_sort(MemorySegment box) {
        var mh$ = gtk_flow_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.gtk_font_button_get_type$MH,"gtk_font_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_button_get_type();
     * }
     */
    public static long gtk_font_button_get_type() {
        var mh$ = gtk_font_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.gtk_font_button_new$MH,"gtk_font_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_button_new();
     * }
     */
    public static MemorySegment gtk_font_button_new() {
        var mh$ = gtk_font_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new_with_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.gtk_font_button_new_with_font$MH,"gtk_font_button_new_with_font");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_button_new_with_font(char* fontname);
     * }
     */
    public static MemorySegment gtk_font_button_new_with_font(MemorySegment fontname) {
        var mh$ = gtk_font_button_new_with_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.gtk_font_button_get_title$MH,"gtk_font_button_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_font_button_get_title(GtkFontButton* font_button);
     * }
     */
    public static MemorySegment gtk_font_button_get_title(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.gtk_font_button_set_title$MH,"gtk_font_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_title(GtkFontButton* font_button, char* title);
     * }
     */
    public static void gtk_font_button_set_title(MemorySegment font_button, MemorySegment title) {
        var mh$ = gtk_font_button_set_title$MH();
        try {
            mh$.invokeExact(font_button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.gtk_font_button_get_modal$MH,"gtk_font_button_get_modal");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_modal(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_modal(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_modal$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.gtk_font_button_set_modal$MH,"gtk_font_button_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_modal(GtkFontButton* font_button, gboolean modal);
     * }
     */
    public static void gtk_font_button_set_modal(MemorySegment font_button, int modal) {
        var mh$ = gtk_font_button_set_modal$MH();
        try {
            mh$.invokeExact(font_button, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.gtk_font_button_get_use_font$MH,"gtk_font_button_get_use_font");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_use_font(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_use_font(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_use_font$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.gtk_font_button_set_use_font$MH,"gtk_font_button_set_use_font");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_use_font(GtkFontButton* font_button, gboolean use_font);
     * }
     */
    public static void gtk_font_button_set_use_font(MemorySegment font_button, int use_font) {
        var mh$ = gtk_font_button_set_use_font$MH();
        try {
            mh$.invokeExact(font_button, use_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.gtk_font_button_get_use_size$MH,"gtk_font_button_get_use_size");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_use_size(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_use_size(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_use_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.gtk_font_button_set_use_size$MH,"gtk_font_button_set_use_size");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_use_size(GtkFontButton* font_button, gboolean use_size);
     * }
     */
    public static void gtk_font_button_set_use_size(MemorySegment font_button, int use_size) {
        var mh$ = gtk_font_button_set_use_size$MH();
        try {
            mh$.invokeExact(font_button, use_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_FAMILY = 0;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_FAMILY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_STYLE = 1;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_STYLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_SIZE = 2;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_SIZE() {
        return (int)2L;
    }
}


