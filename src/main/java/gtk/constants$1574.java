// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1574 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1574() {}
    static final FunctionDescriptor gtk_css_provider_load_from_path$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_css_provider_load_from_path$MH = RuntimeHelper.downcallHandle(
        "gtk_css_provider_load_from_path",
        constants$1574.gtk_css_provider_load_from_path$FUNC
    );
    static final FunctionDescriptor gtk_css_provider_load_from_resource$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_css_provider_load_from_resource$MH = RuntimeHelper.downcallHandle(
        "gtk_css_provider_load_from_resource",
        constants$1574.gtk_css_provider_load_from_resource$FUNC
    );
    static final FunctionDescriptor gtk_css_provider_load_named$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_css_provider_load_named$MH = RuntimeHelper.downcallHandle(
        "gtk_css_provider_load_named",
        constants$1574.gtk_css_provider_load_named$FUNC
    );
    static final FunctionDescriptor GtkCustomRequestModeFunc$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GtkCustomRequestModeFunc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GtkCustomRequestModeFunc_UP$MH = RuntimeHelper.upcallHandle(GtkCustomRequestModeFunc.class, "apply", constants$1574.GtkCustomRequestModeFunc_UP$FUNC);
    static final FunctionDescriptor GtkCustomRequestModeFunc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GtkCustomRequestModeFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$1574.GtkCustomRequestModeFunc_DOWN$FUNC
    );
    static final FunctionDescriptor GtkCustomMeasureFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GtkCustomMeasureFunc_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GtkCustomMeasureFunc_UP$MH = RuntimeHelper.upcallHandle(GtkCustomMeasureFunc.class, "apply", constants$1574.GtkCustomMeasureFunc_UP$FUNC);
}


