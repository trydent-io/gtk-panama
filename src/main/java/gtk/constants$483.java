// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$483 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$483() {}
    static final FunctionDescriptor g_application_run$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_run$MH = RuntimeHelper.downcallHandle(
        "g_application_run",
        constants$483.g_application_run$FUNC
    );
    static final FunctionDescriptor g_application_quit$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_quit$MH = RuntimeHelper.downcallHandle(
        "g_application_quit",
        constants$483.g_application_quit$FUNC
    );
    static final FunctionDescriptor g_application_get_default$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_application_get_default$MH = RuntimeHelper.downcallHandle(
        "g_application_get_default",
        constants$483.g_application_get_default$FUNC
    );
    static final FunctionDescriptor g_application_set_default$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_set_default$MH = RuntimeHelper.downcallHandle(
        "g_application_set_default",
        constants$483.g_application_set_default$FUNC
    );
    static final FunctionDescriptor g_application_mark_busy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_mark_busy$MH = RuntimeHelper.downcallHandle(
        "g_application_mark_busy",
        constants$483.g_application_mark_busy$FUNC
    );
    static final FunctionDescriptor g_application_unmark_busy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_application_unmark_busy$MH = RuntimeHelper.downcallHandle(
        "g_application_unmark_busy",
        constants$483.g_application_unmark_busy$FUNC
    );
}


