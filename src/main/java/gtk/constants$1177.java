// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1177 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1177() {}
    static final FunctionDescriptor atanhf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle atanhf$MH = RuntimeHelper.downcallHandle(
        "atanhf",
        constants$1177.atanhf$FUNC
    );
    static final FunctionDescriptor __atanhf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __atanhf$MH = RuntimeHelper.downcallHandle(
        "__atanhf",
        constants$1177.__atanhf$FUNC
    );
    static final FunctionDescriptor expf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle expf$MH = RuntimeHelper.downcallHandle(
        "expf",
        constants$1177.expf$FUNC
    );
    static final FunctionDescriptor __expf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __expf$MH = RuntimeHelper.downcallHandle(
        "__expf",
        constants$1177.__expf$FUNC
    );
    static final FunctionDescriptor frexpf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle frexpf$MH = RuntimeHelper.downcallHandle(
        "frexpf",
        constants$1177.frexpf$FUNC
    );
    static final FunctionDescriptor __frexpf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle __frexpf$MH = RuntimeHelper.downcallHandle(
        "__frexpf",
        constants$1177.__frexpf$FUNC
    );
}


