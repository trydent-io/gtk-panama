// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$8 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$8() {}
    static final FunctionDescriptor GHFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GHFunc_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GHFunc_UP$MH = RuntimeHelper.upcallHandle(GHFunc.class, "apply", constants$8.GHFunc_UP$FUNC);
    static final FunctionDescriptor GHFunc_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GHFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$8.GHFunc_DOWN$FUNC
    );
    static final FunctionDescriptor GCopyFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GCopyFunc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCopyFunc_UP$MH = RuntimeHelper.upcallHandle(GCopyFunc.class, "apply", constants$8.GCopyFunc_UP$FUNC);
    static final FunctionDescriptor GCopyFunc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GCopyFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$8.GCopyFunc_DOWN$FUNC
    );
    static final FunctionDescriptor GFreeFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GFreeFunc_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GFreeFunc_UP$MH = RuntimeHelper.upcallHandle(GFreeFunc.class, "apply", constants$8.GFreeFunc_UP$FUNC);
    static final FunctionDescriptor GFreeFunc_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GFreeFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$8.GFreeFunc_DOWN$FUNC
    );
}


