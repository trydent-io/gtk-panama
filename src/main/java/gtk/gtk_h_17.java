// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class gtk_h_17 extends gtk_h_16 {

    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_VARIATIONS = 4;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_VARIATIONS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_FEATURES = 8;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_FEATURES() {
        return (int)8L;
    }
    public static MethodHandle gtk_font_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.gtk_font_chooser_get_type$MH,"gtk_font_chooser_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_get_type();
     * }
     */
    public static long gtk_font_chooser_get_type() {
        var mh$ = gtk_font_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.gtk_font_chooser_get_font_family$MH,"gtk_font_chooser_get_font_family");
    }
    /**
     * {@snippet :
     * PangoFontFamily* gtk_font_chooser_get_font_family(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_family(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.gtk_font_chooser_get_font_face$MH,"gtk_font_chooser_get_font_face");
    }
    /**
     * {@snippet :
     * PangoFontFace* gtk_font_chooser_get_font_face(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_face(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.gtk_font_chooser_get_font_size$MH,"gtk_font_chooser_get_font_size");
    }
    /**
     * {@snippet :
     * int gtk_font_chooser_get_font_size(GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_font_size(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_size$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.gtk_font_chooser_get_font_desc$MH,"gtk_font_chooser_get_font_desc");
    }
    /**
     * {@snippet :
     * PangoFontDescription* gtk_font_chooser_get_font_desc(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_desc(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_desc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.gtk_font_chooser_set_font_desc$MH,"gtk_font_chooser_set_font_desc");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font_desc(GtkFontChooser* fontchooser, const PangoFontDescription* font_desc);
     * }
     */
    public static void gtk_font_chooser_set_font_desc(MemorySegment fontchooser, MemorySegment font_desc) {
        var mh$ = gtk_font_chooser_set_font_desc$MH();
        try {
            mh$.invokeExact(fontchooser, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.gtk_font_chooser_get_font$MH,"gtk_font_chooser_get_font");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_font(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.gtk_font_chooser_set_font$MH,"gtk_font_chooser_set_font");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font(GtkFontChooser* fontchooser, char* fontname);
     * }
     */
    public static void gtk_font_chooser_set_font(MemorySegment fontchooser, MemorySegment fontname) {
        var mh$ = gtk_font_chooser_set_font$MH();
        try {
            mh$.invokeExact(fontchooser, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.gtk_font_chooser_get_preview_text$MH,"gtk_font_chooser_get_preview_text");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_preview_text(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_preview_text(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_preview_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.gtk_font_chooser_set_preview_text$MH,"gtk_font_chooser_set_preview_text");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_preview_text(GtkFontChooser* fontchooser, char* text);
     * }
     */
    public static void gtk_font_chooser_set_preview_text(MemorySegment fontchooser, MemorySegment text) {
        var mh$ = gtk_font_chooser_set_preview_text$MH();
        try {
            mh$.invokeExact(fontchooser, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.gtk_font_chooser_get_show_preview_entry$MH,"gtk_font_chooser_get_show_preview_entry");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_chooser_get_show_preview_entry(GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_show_preview_entry(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_show_preview_entry$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.gtk_font_chooser_set_show_preview_entry$MH,"gtk_font_chooser_set_show_preview_entry");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_show_preview_entry(GtkFontChooser* fontchooser, gboolean show_preview_entry);
     * }
     */
    public static void gtk_font_chooser_set_show_preview_entry(MemorySegment fontchooser, int show_preview_entry) {
        var mh$ = gtk_font_chooser_set_show_preview_entry$MH();
        try {
            mh$.invokeExact(fontchooser, show_preview_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.gtk_font_chooser_set_filter_func$MH,"gtk_font_chooser_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_filter_func(GtkFontChooser* fontchooser, GtkFontFilterFunc filter, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_font_chooser_set_filter_func(MemorySegment fontchooser, MemorySegment filter, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_font_chooser_set_filter_func$MH();
        try {
            mh$.invokeExact(fontchooser, filter, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.gtk_font_chooser_set_font_map$MH,"gtk_font_chooser_set_font_map");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font_map(GtkFontChooser* fontchooser, PangoFontMap* fontmap);
     * }
     */
    public static void gtk_font_chooser_set_font_map(MemorySegment fontchooser, MemorySegment fontmap) {
        var mh$ = gtk_font_chooser_set_font_map$MH();
        try {
            mh$.invokeExact(fontchooser, fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.gtk_font_chooser_get_font_map$MH,"gtk_font_chooser_get_font_map");
    }
    /**
     * {@snippet :
     * PangoFontMap* gtk_font_chooser_get_font_map(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_map(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.gtk_font_chooser_set_level$MH,"gtk_font_chooser_set_level");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_level(GtkFontChooser* fontchooser, GtkFontChooserLevel level);
     * }
     */
    public static void gtk_font_chooser_set_level(MemorySegment fontchooser, int level) {
        var mh$ = gtk_font_chooser_set_level$MH();
        try {
            mh$.invokeExact(fontchooser, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.gtk_font_chooser_get_level$MH,"gtk_font_chooser_get_level");
    }
    /**
     * {@snippet :
     * GtkFontChooserLevel gtk_font_chooser_get_level(GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_level(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_level$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_features$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.gtk_font_chooser_get_font_features$MH,"gtk_font_chooser_get_font_features");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_font_features(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_features(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_features$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.gtk_font_chooser_get_language$MH,"gtk_font_chooser_get_language");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_language(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_language(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.gtk_font_chooser_set_language$MH,"gtk_font_chooser_set_language");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_language(GtkFontChooser* fontchooser, char* language);
     * }
     */
    public static void gtk_font_chooser_set_language(MemorySegment fontchooser, MemorySegment language) {
        var mh$ = gtk_font_chooser_set_language$MH();
        try {
            mh$.invokeExact(fontchooser, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.gtk_font_chooser_dialog_get_type$MH,"gtk_font_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_dialog_get_type();
     * }
     */
    public static long gtk_font_chooser_dialog_get_type() {
        var mh$ = gtk_font_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.gtk_font_chooser_dialog_new$MH,"gtk_font_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_chooser_dialog_new(char* title, GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_font_chooser_dialog_new(MemorySegment title, MemorySegment parent) {
        var mh$ = gtk_font_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.gtk_font_chooser_widget_get_type$MH,"gtk_font_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_widget_get_type();
     * }
     */
    public static long gtk_font_chooser_widget_get_type() {
        var mh$ = gtk_font_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.gtk_font_chooser_widget_new$MH,"gtk_font_chooser_widget_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_chooser_widget_new();
     * }
     */
    public static MemorySegment gtk_font_chooser_widget_new() {
        var mh$ = gtk_font_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.gtk_frame_get_type$MH,"gtk_frame_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_frame_get_type();
     * }
     */
    public static long gtk_frame_get_type() {
        var mh$ = gtk_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.gtk_frame_new$MH,"gtk_frame_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_frame_new(char* label);
     * }
     */
    public static MemorySegment gtk_frame_new(MemorySegment label) {
        var mh$ = gtk_frame_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.gtk_frame_set_label$MH,"gtk_frame_set_label");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label(GtkFrame* frame, char* label);
     * }
     */
    public static void gtk_frame_set_label(MemorySegment frame, MemorySegment label) {
        var mh$ = gtk_frame_set_label$MH();
        try {
            mh$.invokeExact(frame, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.gtk_frame_get_label$MH,"gtk_frame_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_frame_get_label(GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_label(MemorySegment frame) {
        var mh$ = gtk_frame_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.gtk_frame_set_label_widget$MH,"gtk_frame_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label_widget(GtkFrame* frame, GtkWidget* label_widget);
     * }
     */
    public static void gtk_frame_set_label_widget(MemorySegment frame, MemorySegment label_widget) {
        var mh$ = gtk_frame_set_label_widget$MH();
        try {
            mh$.invokeExact(frame, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.gtk_frame_get_label_widget$MH,"gtk_frame_get_label_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_frame_get_label_widget(GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_label_widget(MemorySegment frame) {
        var mh$ = gtk_frame_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.gtk_frame_set_label_align$MH,"gtk_frame_set_label_align");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label_align(GtkFrame* frame, float xalign);
     * }
     */
    public static void gtk_frame_set_label_align(MemorySegment frame, float xalign) {
        var mh$ = gtk_frame_set_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.gtk_frame_get_label_align$MH,"gtk_frame_get_label_align");
    }
    /**
     * {@snippet :
     * float gtk_frame_get_label_align(GtkFrame* frame);
     * }
     */
    public static float gtk_frame_get_label_align(MemorySegment frame) {
        var mh$ = gtk_frame_get_label_align$MH();
        try {
            return (float)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.gtk_frame_set_child$MH,"gtk_frame_set_child");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_child(GtkFrame* frame, GtkWidget* child);
     * }
     */
    public static void gtk_frame_set_child(MemorySegment frame, MemorySegment child) {
        var mh$ = gtk_frame_set_child$MH();
        try {
            mh$.invokeExact(frame, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.gtk_frame_get_child$MH,"gtk_frame_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_frame_get_child(GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_child(MemorySegment frame) {
        var mh$ = gtk_frame_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.gtk_gesture_get_type$MH,"gtk_gesture_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_get_type();
     * }
     */
    public static long gtk_gesture_get_type() {
        var mh$ = gtk_gesture_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.gtk_gesture_get_device$MH,"gtk_gesture_get_device");
    }
    /**
     * {@snippet :
     * GdkDevice* gtk_gesture_get_device(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_device(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.gtk_gesture_set_state$MH,"gtk_gesture_set_state");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_set_state(GtkGesture* gesture, GtkEventSequenceState state);
     * }
     */
    public static int gtk_gesture_set_state(MemorySegment gesture, int state) {
        var mh$ = gtk_gesture_set_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.gtk_gesture_get_sequence_state$MH,"gtk_gesture_get_sequence_state");
    }
    /**
     * {@snippet :
     * GtkEventSequenceState gtk_gesture_get_sequence_state(GtkGesture* gesture, GdkEventSequence* sequence);
     * }
     */
    public static int gtk_gesture_get_sequence_state(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_get_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.gtk_gesture_set_sequence_state$MH,"gtk_gesture_set_sequence_state");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_set_sequence_state(GtkGesture* gesture, GdkEventSequence* sequence, GtkEventSequenceState state);
     * }
     */
    public static int gtk_gesture_set_sequence_state(MemorySegment gesture, MemorySegment sequence, int state) {
        var mh$ = gtk_gesture_set_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequences$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.gtk_gesture_get_sequences$MH,"gtk_gesture_get_sequences");
    }
    /**
     * {@snippet :
     * GList* gtk_gesture_get_sequences(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_sequences(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_sequences$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_updated_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.gtk_gesture_get_last_updated_sequence$MH,"gtk_gesture_get_last_updated_sequence");
    }
    /**
     * {@snippet :
     * GdkEventSequence* gtk_gesture_get_last_updated_sequence(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_last_updated_sequence(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_last_updated_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_handles_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.gtk_gesture_handles_sequence$MH,"gtk_gesture_handles_sequence");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_handles_sequence(GtkGesture* gesture, GdkEventSequence* sequence);
     * }
     */
    public static int gtk_gesture_handles_sequence(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_handles_sequence$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.gtk_gesture_get_last_event$MH,"gtk_gesture_get_last_event");
    }
    /**
     * {@snippet :
     * GdkEvent* gtk_gesture_get_last_event(GtkGesture* gesture, GdkEventSequence* sequence);
     * }
     */
    public static MemorySegment gtk_gesture_get_last_event(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_get_last_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.gtk_gesture_get_point$MH,"gtk_gesture_get_point");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_get_point(GtkGesture* gesture, GdkEventSequence* sequence, double* x, double* y);
     * }
     */
    public static int gtk_gesture_get_point(MemorySegment gesture, MemorySegment sequence, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_get_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.gtk_gesture_get_bounding_box$MH,"gtk_gesture_get_bounding_box");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_get_bounding_box(GtkGesture* gesture, GdkRectangle* rect);
     * }
     */
    public static int gtk_gesture_get_bounding_box(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_get_bounding_box$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.gtk_gesture_get_bounding_box_center$MH,"gtk_gesture_get_bounding_box_center");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_get_bounding_box_center(GtkGesture* gesture, double* x, double* y);
     * }
     */
    public static int gtk_gesture_get_bounding_box_center(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_get_bounding_box_center$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.gtk_gesture_is_active$MH,"gtk_gesture_is_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_is_active(GtkGesture* gesture);
     * }
     */
    public static int gtk_gesture_is_active(MemorySegment gesture) {
        var mh$ = gtk_gesture_is_active$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_recognized$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.gtk_gesture_is_recognized$MH,"gtk_gesture_is_recognized");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_is_recognized(GtkGesture* gesture);
     * }
     */
    public static int gtk_gesture_is_recognized(MemorySegment gesture) {
        var mh$ = gtk_gesture_is_recognized$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.gtk_gesture_group$MH,"gtk_gesture_group");
    }
    /**
     * {@snippet :
     * void gtk_gesture_group(GtkGesture* group_gesture, GtkGesture* gesture);
     * }
     */
    public static void gtk_gesture_group(MemorySegment group_gesture, MemorySegment gesture) {
        var mh$ = gtk_gesture_group$MH();
        try {
            mh$.invokeExact(group_gesture, gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_ungroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.gtk_gesture_ungroup$MH,"gtk_gesture_ungroup");
    }
    /**
     * {@snippet :
     * void gtk_gesture_ungroup(GtkGesture* gesture);
     * }
     */
    public static void gtk_gesture_ungroup(MemorySegment gesture) {
        var mh$ = gtk_gesture_ungroup$MH();
        try {
            mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.gtk_gesture_get_group$MH,"gtk_gesture_get_group");
    }
    /**
     * {@snippet :
     * GList* gtk_gesture_get_group(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_group(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_grouped_with$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.gtk_gesture_is_grouped_with$MH,"gtk_gesture_is_grouped_with");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_is_grouped_with(GtkGesture* gesture, GtkGesture* other);
     * }
     */
    public static int gtk_gesture_is_grouped_with(MemorySegment gesture, MemorySegment other) {
        var mh$ = gtk_gesture_is_grouped_with$MH();
        try {
            return (int)mh$.invokeExact(gesture, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.gtk_gesture_single_get_type$MH,"gtk_gesture_single_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_single_get_type();
     * }
     */
    public static long gtk_gesture_single_get_type() {
        var mh$ = gtk_gesture_single_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.gtk_gesture_single_get_touch_only$MH,"gtk_gesture_single_get_touch_only");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_single_get_touch_only(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_touch_only(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_touch_only$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.gtk_gesture_single_set_touch_only$MH,"gtk_gesture_single_set_touch_only");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_touch_only(GtkGestureSingle* gesture, gboolean touch_only);
     * }
     */
    public static void gtk_gesture_single_set_touch_only(MemorySegment gesture, int touch_only) {
        var mh$ = gtk_gesture_single_set_touch_only$MH();
        try {
            mh$.invokeExact(gesture, touch_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.gtk_gesture_single_get_exclusive$MH,"gtk_gesture_single_get_exclusive");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_single_get_exclusive(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_exclusive(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_exclusive$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.gtk_gesture_single_set_exclusive$MH,"gtk_gesture_single_set_exclusive");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_exclusive(GtkGestureSingle* gesture, gboolean exclusive);
     * }
     */
    public static void gtk_gesture_single_set_exclusive(MemorySegment gesture, int exclusive) {
        var mh$ = gtk_gesture_single_set_exclusive$MH();
        try {
            mh$.invokeExact(gesture, exclusive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.gtk_gesture_single_get_button$MH,"gtk_gesture_single_get_button");
    }
    /**
     * {@snippet :
     * guint gtk_gesture_single_get_button(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_button(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.gtk_gesture_single_set_button$MH,"gtk_gesture_single_set_button");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_button(GtkGestureSingle* gesture, guint button);
     * }
     */
    public static void gtk_gesture_single_set_button(MemorySegment gesture, int button) {
        var mh$ = gtk_gesture_single_set_button$MH();
        try {
            mh$.invokeExact(gesture, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.gtk_gesture_single_get_current_button$MH,"gtk_gesture_single_get_current_button");
    }
    /**
     * {@snippet :
     * guint gtk_gesture_single_get_current_button(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_current_button(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_current_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.gtk_gesture_single_get_current_sequence$MH,"gtk_gesture_single_get_current_sequence");
    }
    /**
     * {@snippet :
     * GdkEventSequence* gtk_gesture_single_get_current_sequence(GtkGestureSingle* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_single_get_current_sequence(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_current_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_click_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.gtk_gesture_click_get_type$MH,"gtk_gesture_click_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_click_get_type();
     * }
     */
    public static long gtk_gesture_click_get_type() {
        var mh$ = gtk_gesture_click_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_click_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.gtk_gesture_click_new$MH,"gtk_gesture_click_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_click_new();
     * }
     */
    public static MemorySegment gtk_gesture_click_new() {
        var mh$ = gtk_gesture_click_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.gtk_gesture_drag_get_type$MH,"gtk_gesture_drag_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_drag_get_type();
     * }
     */
    public static long gtk_gesture_drag_get_type() {
        var mh$ = gtk_gesture_drag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.gtk_gesture_drag_new$MH,"gtk_gesture_drag_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_drag_new();
     * }
     */
    public static MemorySegment gtk_gesture_drag_new() {
        var mh$ = gtk_gesture_drag_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_start_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.gtk_gesture_drag_get_start_point$MH,"gtk_gesture_drag_get_start_point");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_drag_get_start_point(GtkGestureDrag* gesture, double* x, double* y);
     * }
     */
    public static int gtk_gesture_drag_get_start_point(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_drag_get_start_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.gtk_gesture_drag_get_offset$MH,"gtk_gesture_drag_get_offset");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_drag_get_offset(GtkGestureDrag* gesture, double* x, double* y);
     * }
     */
    public static int gtk_gesture_drag_get_offset(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_drag_get_offset$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.gtk_gesture_long_press_get_type$MH,"gtk_gesture_long_press_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_long_press_get_type();
     * }
     */
    public static long gtk_gesture_long_press_get_type() {
        var mh$ = gtk_gesture_long_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.gtk_gesture_long_press_new$MH,"gtk_gesture_long_press_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_long_press_new();
     * }
     */
    public static MemorySegment gtk_gesture_long_press_new() {
        var mh$ = gtk_gesture_long_press_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_set_delay_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.gtk_gesture_long_press_set_delay_factor$MH,"gtk_gesture_long_press_set_delay_factor");
    }
    /**
     * {@snippet :
     * void gtk_gesture_long_press_set_delay_factor(GtkGestureLongPress* gesture, double delay_factor);
     * }
     */
    public static void gtk_gesture_long_press_set_delay_factor(MemorySegment gesture, double delay_factor) {
        var mh$ = gtk_gesture_long_press_set_delay_factor$MH();
        try {
            mh$.invokeExact(gesture, delay_factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_delay_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.gtk_gesture_long_press_get_delay_factor$MH,"gtk_gesture_long_press_get_delay_factor");
    }
    /**
     * {@snippet :
     * double gtk_gesture_long_press_get_delay_factor(GtkGestureLongPress* gesture);
     * }
     */
    public static double gtk_gesture_long_press_get_delay_factor(MemorySegment gesture) {
        var mh$ = gtk_gesture_long_press_get_delay_factor$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.gtk_gesture_pan_get_type$MH,"gtk_gesture_pan_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_pan_get_type();
     * }
     */
    public static long gtk_gesture_pan_get_type() {
        var mh$ = gtk_gesture_pan_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.gtk_gesture_pan_new$MH,"gtk_gesture_pan_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_pan_new(GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_gesture_pan_new(int orientation) {
        var mh$ = gtk_gesture_pan_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.gtk_gesture_pan_get_orientation$MH,"gtk_gesture_pan_get_orientation");
    }
    /**
     * {@snippet :
     * GtkOrientation gtk_gesture_pan_get_orientation(GtkGesturePan* gesture);
     * }
     */
    public static int gtk_gesture_pan_get_orientation(MemorySegment gesture) {
        var mh$ = gtk_gesture_pan_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.gtk_gesture_pan_set_orientation$MH,"gtk_gesture_pan_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_gesture_pan_set_orientation(GtkGesturePan* gesture, GtkOrientation orientation);
     * }
     */
    public static void gtk_gesture_pan_set_orientation(MemorySegment gesture, int orientation) {
        var mh$ = gtk_gesture_pan_set_orientation$MH();
        try {
            mh$.invokeExact(gesture, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.gtk_gesture_rotate_get_type$MH,"gtk_gesture_rotate_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_rotate_get_type();
     * }
     */
    public static long gtk_gesture_rotate_get_type() {
        var mh$ = gtk_gesture_rotate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.gtk_gesture_rotate_new$MH,"gtk_gesture_rotate_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_rotate_new();
     * }
     */
    public static MemorySegment gtk_gesture_rotate_new() {
        var mh$ = gtk_gesture_rotate_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_angle_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.gtk_gesture_rotate_get_angle_delta$MH,"gtk_gesture_rotate_get_angle_delta");
    }
    /**
     * {@snippet :
     * double gtk_gesture_rotate_get_angle_delta(GtkGestureRotate* gesture);
     * }
     */
    public static double gtk_gesture_rotate_get_angle_delta(MemorySegment gesture) {
        var mh$ = gtk_gesture_rotate_get_angle_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.gtk_gesture_stylus_get_type$MH,"gtk_gesture_stylus_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_stylus_get_type();
     * }
     */
    public static long gtk_gesture_stylus_get_type() {
        var mh$ = gtk_gesture_stylus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.gtk_gesture_stylus_new$MH,"gtk_gesture_stylus_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_stylus_new();
     * }
     */
    public static MemorySegment gtk_gesture_stylus_new() {
        var mh$ = gtk_gesture_stylus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.gtk_gesture_stylus_get_axis$MH,"gtk_gesture_stylus_get_axis");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_stylus_get_axis(GtkGestureStylus* gesture, GdkAxisUse axis, double* value);
     * }
     */
    public static int gtk_gesture_stylus_get_axis(MemorySegment gesture, int axis, MemorySegment value) {
        var mh$ = gtk_gesture_stylus_get_axis$MH();
        try {
            return (int)mh$.invokeExact(gesture, axis, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.gtk_gesture_stylus_get_axes$MH,"gtk_gesture_stylus_get_axes");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_stylus_get_axes(GtkGestureStylus* gesture, GdkAxisUse axes[], double** values);
     * }
     */
    public static int gtk_gesture_stylus_get_axes(MemorySegment gesture, MemorySegment axes, MemorySegment values) {
        var mh$ = gtk_gesture_stylus_get_axes$MH();
        try {
            return (int)mh$.invokeExact(gesture, axes, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.gtk_gesture_stylus_get_backlog$MH,"gtk_gesture_stylus_get_backlog");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_stylus_get_backlog(GtkGestureStylus* gesture, GdkTimeCoord** backlog, guint* n_elems);
     * }
     */
    public static int gtk_gesture_stylus_get_backlog(MemorySegment gesture, MemorySegment backlog, MemorySegment n_elems) {
        var mh$ = gtk_gesture_stylus_get_backlog$MH();
        try {
            return (int)mh$.invokeExact(gesture, backlog, n_elems);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.gtk_gesture_stylus_get_device_tool$MH,"gtk_gesture_stylus_get_device_tool");
    }
    /**
     * {@snippet :
     * GdkDeviceTool* gtk_gesture_stylus_get_device_tool(GtkGestureStylus* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_stylus_get_device_tool(MemorySegment gesture) {
        var mh$ = gtk_gesture_stylus_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.gtk_gesture_swipe_get_type$MH,"gtk_gesture_swipe_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_swipe_get_type();
     * }
     */
    public static long gtk_gesture_swipe_get_type() {
        var mh$ = gtk_gesture_swipe_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.gtk_gesture_swipe_new$MH,"gtk_gesture_swipe_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_swipe_new();
     * }
     */
    public static MemorySegment gtk_gesture_swipe_new() {
        var mh$ = gtk_gesture_swipe_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_velocity$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.gtk_gesture_swipe_get_velocity$MH,"gtk_gesture_swipe_get_velocity");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_swipe_get_velocity(GtkGestureSwipe* gesture, double* velocity_x, double* velocity_y);
     * }
     */
    public static int gtk_gesture_swipe_get_velocity(MemorySegment gesture, MemorySegment velocity_x, MemorySegment velocity_y) {
        var mh$ = gtk_gesture_swipe_get_velocity$MH();
        try {
            return (int)mh$.invokeExact(gesture, velocity_x, velocity_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.gtk_gesture_zoom_get_type$MH,"gtk_gesture_zoom_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_zoom_get_type();
     * }
     */
    public static long gtk_gesture_zoom_get_type() {
        var mh$ = gtk_gesture_zoom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.gtk_gesture_zoom_new$MH,"gtk_gesture_zoom_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_zoom_new();
     * }
     */
    public static MemorySegment gtk_gesture_zoom_new() {
        var mh$ = gtk_gesture_zoom_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_scale_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.gtk_gesture_zoom_get_scale_delta$MH,"gtk_gesture_zoom_get_scale_delta");
    }
    /**
     * {@snippet :
     * double gtk_gesture_zoom_get_scale_delta(GtkGestureZoom* gesture);
     * }
     */
    public static double gtk_gesture_zoom_get_scale_delta(MemorySegment gesture) {
        var mh$ = gtk_gesture_zoom_get_scale_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.gtk_gl_area_get_type$MH,"gtk_gl_area_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gl_area_get_type();
     * }
     */
    public static long gtk_gl_area_get_type() {
        var mh$ = gtk_gl_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.gtk_gl_area_new$MH,"gtk_gl_area_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_gl_area_new();
     * }
     */
    public static MemorySegment gtk_gl_area_new() {
        var mh$ = gtk_gl_area_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.gtk_gl_area_set_use_es$MH,"gtk_gl_area_set_use_es");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_use_es(GtkGLArea* area, gboolean use_es);
     * }
     */
    public static void gtk_gl_area_set_use_es(MemorySegment area, int use_es) {
        var mh$ = gtk_gl_area_set_use_es$MH();
        try {
            mh$.invokeExact(area, use_es);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.gtk_gl_area_get_use_es$MH,"gtk_gl_area_get_use_es");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_use_es(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_use_es(MemorySegment area) {
        var mh$ = gtk_gl_area_get_use_es$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.gtk_gl_area_set_required_version$MH,"gtk_gl_area_set_required_version");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_required_version(GtkGLArea* area, int major, int minor);
     * }
     */
    public static void gtk_gl_area_set_required_version(MemorySegment area, int major, int minor) {
        var mh$ = gtk_gl_area_set_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.gtk_gl_area_get_required_version$MH,"gtk_gl_area_get_required_version");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_get_required_version(GtkGLArea* area, int* major, int* minor);
     * }
     */
    public static void gtk_gl_area_get_required_version(MemorySegment area, MemorySegment major, MemorySegment minor) {
        var mh$ = gtk_gl_area_get_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.gtk_gl_area_get_has_depth_buffer$MH,"gtk_gl_area_get_has_depth_buffer");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_has_depth_buffer(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_depth_buffer(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_depth_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.gtk_gl_area_set_has_depth_buffer$MH,"gtk_gl_area_set_has_depth_buffer");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_depth_buffer(GtkGLArea* area, gboolean has_depth_buffer);
     * }
     */
    public static void gtk_gl_area_set_has_depth_buffer(MemorySegment area, int has_depth_buffer) {
        var mh$ = gtk_gl_area_set_has_depth_buffer$MH();
        try {
            mh$.invokeExact(area, has_depth_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.gtk_gl_area_get_has_stencil_buffer$MH,"gtk_gl_area_get_has_stencil_buffer");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_has_stencil_buffer(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_stencil_buffer(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_stencil_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.gtk_gl_area_set_has_stencil_buffer$MH,"gtk_gl_area_set_has_stencil_buffer");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_stencil_buffer(GtkGLArea* area, gboolean has_stencil_buffer);
     * }
     */
    public static void gtk_gl_area_set_has_stencil_buffer(MemorySegment area, int has_stencil_buffer) {
        var mh$ = gtk_gl_area_set_has_stencil_buffer$MH();
        try {
            mh$.invokeExact(area, has_stencil_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.gtk_gl_area_get_auto_render$MH,"gtk_gl_area_get_auto_render");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_auto_render(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_auto_render(MemorySegment area) {
        var mh$ = gtk_gl_area_get_auto_render$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gtk_gl_area_set_auto_render$MH,"gtk_gl_area_set_auto_render");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_auto_render(GtkGLArea* area, gboolean auto_render);
     * }
     */
    public static void gtk_gl_area_set_auto_render(MemorySegment area, int auto_render) {
        var mh$ = gtk_gl_area_set_auto_render$MH();
        try {
            mh$.invokeExact(area, auto_render);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_queue_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gtk_gl_area_queue_render$MH,"gtk_gl_area_queue_render");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_queue_render(GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_queue_render(MemorySegment area) {
        var mh$ = gtk_gl_area_queue_render$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gtk_gl_area_get_context$MH,"gtk_gl_area_get_context");
    }
    /**
     * {@snippet :
     * GdkGLContext* gtk_gl_area_get_context(GtkGLArea* area);
     * }
     */
    public static MemorySegment gtk_gl_area_get_context(MemorySegment area) {
        var mh$ = gtk_gl_area_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_make_current$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gtk_gl_area_make_current$MH,"gtk_gl_area_make_current");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_make_current(GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_make_current(MemorySegment area) {
        var mh$ = gtk_gl_area_make_current$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_attach_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gtk_gl_area_attach_buffers$MH,"gtk_gl_area_attach_buffers");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_attach_buffers(GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_attach_buffers(MemorySegment area) {
        var mh$ = gtk_gl_area_attach_buffers$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gtk_gl_area_set_error$MH,"gtk_gl_area_set_error");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_error(GtkGLArea* area, const GError* error);
     * }
     */
    public static void gtk_gl_area_set_error(MemorySegment area, MemorySegment error) {
        var mh$ = gtk_gl_area_set_error$MH();
        try {
            mh$.invokeExact(area, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gtk_gl_area_get_error$MH,"gtk_gl_area_get_error");
    }
    /**
     * {@snippet :
     * GError* gtk_gl_area_get_error(GtkGLArea* area);
     * }
     */
    public static MemorySegment gtk_gl_area_get_error(MemorySegment area) {
        var mh$ = gtk_gl_area_get_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gtk_grid_get_type$MH,"gtk_grid_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_grid_get_type();
     * }
     */
    public static long gtk_grid_get_type() {
        var mh$ = gtk_grid_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gtk_grid_new$MH,"gtk_grid_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_grid_new();
     * }
     */
    public static MemorySegment gtk_grid_new() {
        var mh$ = gtk_grid_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gtk_grid_attach$MH,"gtk_grid_attach");
    }
    /**
     * {@snippet :
     * void gtk_grid_attach(GtkGrid* grid, GtkWidget* child, int column, int row, int width, int height);
     * }
     */
    public static void gtk_grid_attach(MemorySegment grid, MemorySegment child, int column, int row, int width, int height) {
        var mh$ = gtk_grid_attach$MH();
        try {
            mh$.invokeExact(grid, child, column, row, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gtk_grid_attach_next_to$MH,"gtk_grid_attach_next_to");
    }
    /**
     * {@snippet :
     * void gtk_grid_attach_next_to(GtkGrid* grid, GtkWidget* child, GtkWidget* sibling, GtkPositionType side, int width, int height);
     * }
     */
    public static void gtk_grid_attach_next_to(MemorySegment grid, MemorySegment child, MemorySegment sibling, int side, int width, int height) {
        var mh$ = gtk_grid_attach_next_to$MH();
        try {
            mh$.invokeExact(grid, child, sibling, side, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_child_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gtk_grid_get_child_at$MH,"gtk_grid_get_child_at");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_grid_get_child_at(GtkGrid* grid, int column, int row);
     * }
     */
    public static MemorySegment gtk_grid_get_child_at(MemorySegment grid, int column, int row) {
        var mh$ = gtk_grid_get_child_at$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(grid, column, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gtk_grid_remove$MH,"gtk_grid_remove");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove(GtkGrid* grid, GtkWidget* child);
     * }
     */
    public static void gtk_grid_remove(MemorySegment grid, MemorySegment child) {
        var mh$ = gtk_grid_remove$MH();
        try {
            mh$.invokeExact(grid, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gtk_grid_insert_row$MH,"gtk_grid_insert_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_row(GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_insert_row(MemorySegment grid, int position) {
        var mh$ = gtk_grid_insert_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gtk_grid_insert_column$MH,"gtk_grid_insert_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_column(GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_insert_column(MemorySegment grid, int position) {
        var mh$ = gtk_grid_insert_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gtk_grid_remove_row$MH,"gtk_grid_remove_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove_row(GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_remove_row(MemorySegment grid, int position) {
        var mh$ = gtk_grid_remove_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gtk_grid_remove_column$MH,"gtk_grid_remove_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove_column(GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_remove_column(MemorySegment grid, int position) {
        var mh$ = gtk_grid_remove_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gtk_grid_insert_next_to$MH,"gtk_grid_insert_next_to");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_next_to(GtkGrid* grid, GtkWidget* sibling, GtkPositionType side);
     * }
     */
    public static void gtk_grid_insert_next_to(MemorySegment grid, MemorySegment sibling, int side) {
        var mh$ = gtk_grid_insert_next_to$MH();
        try {
            mh$.invokeExact(grid, sibling, side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.gtk_grid_set_row_homogeneous$MH,"gtk_grid_set_row_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_homogeneous(GtkGrid* grid, gboolean homogeneous);
     * }
     */
    public static void gtk_grid_set_row_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.gtk_grid_get_row_homogeneous$MH,"gtk_grid_get_row_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_get_row_homogeneous(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_row_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.gtk_grid_set_row_spacing$MH,"gtk_grid_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_spacing(GtkGrid* grid, guint spacing);
     * }
     */
    public static void gtk_grid_set_row_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.gtk_grid_get_row_spacing$MH,"gtk_grid_get_row_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_grid_get_row_spacing(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_row_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.gtk_grid_set_column_homogeneous$MH,"gtk_grid_set_column_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_column_homogeneous(GtkGrid* grid, gboolean homogeneous);
     * }
     */
    public static void gtk_grid_set_column_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.gtk_grid_get_column_homogeneous$MH,"gtk_grid_get_column_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_get_column_homogeneous(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_column_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gtk_grid_set_column_spacing$MH,"gtk_grid_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_column_spacing(GtkGrid* grid, guint spacing);
     * }
     */
    public static void gtk_grid_set_column_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gtk_grid_get_column_spacing$MH,"gtk_grid_get_column_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_grid_get_column_spacing(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_column_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gtk_grid_set_row_baseline_position$MH,"gtk_grid_set_row_baseline_position");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_baseline_position(GtkGrid* grid, int row, GtkBaselinePosition pos);
     * }
     */
    public static void gtk_grid_set_row_baseline_position(MemorySegment grid, int row, int pos) {
        var mh$ = gtk_grid_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gtk_grid_get_row_baseline_position$MH,"gtk_grid_get_row_baseline_position");
    }
    /**
     * {@snippet :
     * GtkBaselinePosition gtk_grid_get_row_baseline_position(GtkGrid* grid, int row);
     * }
     */
    public static int gtk_grid_get_row_baseline_position(MemorySegment grid, int row) {
        var mh$ = gtk_grid_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gtk_grid_set_baseline_row$MH,"gtk_grid_set_baseline_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_baseline_row(GtkGrid* grid, int row);
     * }
     */
    public static void gtk_grid_set_baseline_row(MemorySegment grid, int row) {
        var mh$ = gtk_grid_set_baseline_row$MH();
        try {
            mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gtk_grid_get_baseline_row$MH,"gtk_grid_get_baseline_row");
    }
    /**
     * {@snippet :
     * int gtk_grid_get_baseline_row(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_baseline_row(MemorySegment grid) {
        var mh$ = gtk_grid_get_baseline_row$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_query_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gtk_grid_query_child$MH,"gtk_grid_query_child");
    }
    /**
     * {@snippet :
     * void gtk_grid_query_child(GtkGrid* grid, GtkWidget* child, int* column, int* row, int* width, int* height);
     * }
     */
    public static void gtk_grid_query_child(MemorySegment grid, MemorySegment child, MemorySegment column, MemorySegment row, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_grid_query_child$MH();
        try {
            mh$.invokeExact(grid, child, column, row, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gtk_grid_layout_get_type$MH,"gtk_grid_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_grid_layout_get_type();
     * }
     */
    public static long gtk_grid_layout_get_type() {
        var mh$ = gtk_grid_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkGridLayout* GtkGridLayout_autoptr;
     * }
     */
    public static final OfAddress GtkGridLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkGridLayout_listautoptr;
     * }
     */
    public static final OfAddress GtkGridLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkGridLayout_slistautoptr;
     * }
     */
    public static final OfAddress GtkGridLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkGridLayout_queueautoptr;
     * }
     */
    public static final OfAddress GtkGridLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkGridLayoutClass_autoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkGridLayoutClass_listautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkGridLayoutClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkGridLayoutClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_grid_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gtk_grid_layout_new$MH,"gtk_grid_layout_new");
    }
    /**
     * {@snippet :
     * GtkLayoutManager* gtk_grid_layout_new();
     * }
     */
    public static MemorySegment gtk_grid_layout_new() {
        var mh$ = gtk_grid_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gtk_grid_layout_set_row_homogeneous$MH,"gtk_grid_layout_set_row_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_set_row_homogeneous(GtkGridLayout* grid, gboolean homogeneous);
     * }
     */
    public static void gtk_grid_layout_set_row_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_layout_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gtk_grid_layout_get_row_homogeneous$MH,"gtk_grid_layout_get_row_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_layout_get_row_homogeneous(GtkGridLayout* grid);
     * }
     */
    public static int gtk_grid_layout_get_row_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_layout_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gtk_grid_layout_set_row_spacing$MH,"gtk_grid_layout_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_set_row_spacing(GtkGridLayout* grid, guint spacing);
     * }
     */
    public static void gtk_grid_layout_set_row_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_layout_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gtk_grid_layout_get_row_spacing$MH,"gtk_grid_layout_get_row_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_grid_layout_get_row_spacing(GtkGridLayout* grid);
     * }
     */
    public static int gtk_grid_layout_get_row_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_layout_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gtk_grid_layout_set_column_homogeneous$MH,"gtk_grid_layout_set_column_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_set_column_homogeneous(GtkGridLayout* grid, gboolean homogeneous);
     * }
     */
    public static void gtk_grid_layout_set_column_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_layout_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gtk_grid_layout_get_column_homogeneous$MH,"gtk_grid_layout_get_column_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_layout_get_column_homogeneous(GtkGridLayout* grid);
     * }
     */
    public static int gtk_grid_layout_get_column_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_layout_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gtk_grid_layout_set_column_spacing$MH,"gtk_grid_layout_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_set_column_spacing(GtkGridLayout* grid, guint spacing);
     * }
     */
    public static void gtk_grid_layout_set_column_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_layout_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gtk_grid_layout_get_column_spacing$MH,"gtk_grid_layout_get_column_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_grid_layout_get_column_spacing(GtkGridLayout* grid);
     * }
     */
    public static int gtk_grid_layout_get_column_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_layout_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gtk_grid_layout_set_row_baseline_position$MH,"gtk_grid_layout_set_row_baseline_position");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_set_row_baseline_position(GtkGridLayout* grid, int row, GtkBaselinePosition pos);
     * }
     */
    public static void gtk_grid_layout_set_row_baseline_position(MemorySegment grid, int row, int pos) {
        var mh$ = gtk_grid_layout_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gtk_grid_layout_get_row_baseline_position$MH,"gtk_grid_layout_get_row_baseline_position");
    }
    /**
     * {@snippet :
     * GtkBaselinePosition gtk_grid_layout_get_row_baseline_position(GtkGridLayout* grid, int row);
     * }
     */
    public static int gtk_grid_layout_get_row_baseline_position(MemorySegment grid, int row) {
        var mh$ = gtk_grid_layout_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gtk_grid_layout_set_baseline_row$MH,"gtk_grid_layout_set_baseline_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_set_baseline_row(GtkGridLayout* grid, int row);
     * }
     */
    public static void gtk_grid_layout_set_baseline_row(MemorySegment grid, int row) {
        var mh$ = gtk_grid_layout_set_baseline_row$MH();
        try {
            mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gtk_grid_layout_get_baseline_row$MH,"gtk_grid_layout_get_baseline_row");
    }
    /**
     * {@snippet :
     * int gtk_grid_layout_get_baseline_row(GtkGridLayout* grid);
     * }
     */
    public static int gtk_grid_layout_get_baseline_row(MemorySegment grid) {
        var mh$ = gtk_grid_layout_get_baseline_row$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gtk_grid_layout_child_get_type$MH,"gtk_grid_layout_child_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_grid_layout_child_get_type();
     * }
     */
    public static long gtk_grid_layout_child_get_type() {
        var mh$ = gtk_grid_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkGridLayoutChild* GtkGridLayoutChild_autoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkGridLayoutChild_listautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkGridLayoutChild_slistautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkGridLayoutChild_queueautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkGridLayoutChildClass_autoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkGridLayoutChildClass_listautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkGridLayoutChildClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkGridLayoutChildClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkGridLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_grid_layout_child_set_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gtk_grid_layout_child_set_row$MH,"gtk_grid_layout_child_set_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_child_set_row(GtkGridLayoutChild* child, int row);
     * }
     */
    public static void gtk_grid_layout_child_set_row(MemorySegment child, int row) {
        var mh$ = gtk_grid_layout_child_set_row$MH();
        try {
            mh$.invokeExact(child, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gtk_grid_layout_child_get_row$MH,"gtk_grid_layout_child_get_row");
    }
    /**
     * {@snippet :
     * int gtk_grid_layout_child_get_row(GtkGridLayoutChild* child);
     * }
     */
    public static int gtk_grid_layout_child_get_row(MemorySegment child) {
        var mh$ = gtk_grid_layout_child_get_row$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gtk_grid_layout_child_set_column$MH,"gtk_grid_layout_child_set_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_child_set_column(GtkGridLayoutChild* child, int column);
     * }
     */
    public static void gtk_grid_layout_child_set_column(MemorySegment child, int column) {
        var mh$ = gtk_grid_layout_child_set_column$MH();
        try {
            mh$.invokeExact(child, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gtk_grid_layout_child_get_column$MH,"gtk_grid_layout_child_get_column");
    }
    /**
     * {@snippet :
     * int gtk_grid_layout_child_get_column(GtkGridLayoutChild* child);
     * }
     */
    public static int gtk_grid_layout_child_get_column(MemorySegment child) {
        var mh$ = gtk_grid_layout_child_get_column$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gtk_grid_layout_child_set_column_span$MH,"gtk_grid_layout_child_set_column_span");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_child_set_column_span(GtkGridLayoutChild* child, int span);
     * }
     */
    public static void gtk_grid_layout_child_set_column_span(MemorySegment child, int span) {
        var mh$ = gtk_grid_layout_child_set_column_span$MH();
        try {
            mh$.invokeExact(child, span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gtk_grid_layout_child_get_column_span$MH,"gtk_grid_layout_child_get_column_span");
    }
    /**
     * {@snippet :
     * int gtk_grid_layout_child_get_column_span(GtkGridLayoutChild* child);
     * }
     */
    public static int gtk_grid_layout_child_get_column_span(MemorySegment child) {
        var mh$ = gtk_grid_layout_child_get_column_span$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_row_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gtk_grid_layout_child_set_row_span$MH,"gtk_grid_layout_child_set_row_span");
    }
    /**
     * {@snippet :
     * void gtk_grid_layout_child_set_row_span(GtkGridLayoutChild* child, int span);
     * }
     */
    public static void gtk_grid_layout_child_set_row_span(MemorySegment child, int span) {
        var mh$ = gtk_grid_layout_child_set_row_span$MH();
        try {
            mh$.invokeExact(child, span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_row_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gtk_grid_layout_child_get_row_span$MH,"gtk_grid_layout_child_get_row_span");
    }
    /**
     * {@snippet :
     * int gtk_grid_layout_child_get_row_span(GtkGridLayoutChild* child);
     * }
     */
    public static int gtk_grid_layout_child_get_row_span(MemorySegment child) {
        var mh$ = gtk_grid_layout_child_get_row_span$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_base_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gtk_list_base_get_type$MH,"gtk_list_base_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_list_base_get_type();
     * }
     */
    public static long gtk_list_base_get_type() {
        var mh$ = gtk_list_base_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gtk_grid_view_get_type$MH,"gtk_grid_view_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_grid_view_get_type();
     * }
     */
    public static long gtk_grid_view_get_type() {
        var mh$ = gtk_grid_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gtk_grid_view_new$MH,"gtk_grid_view_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_grid_view_new(GtkSelectionModel* model, GtkListItemFactory* factory);
     * }
     */
    public static MemorySegment gtk_grid_view_new(MemorySegment model, MemorySegment factory) {
        var mh$ = gtk_grid_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gtk_grid_view_get_model$MH,"gtk_grid_view_get_model");
    }
    /**
     * {@snippet :
     * GtkSelectionModel* gtk_grid_view_get_model(GtkGridView* self);
     * }
     */
    public static MemorySegment gtk_grid_view_get_model(MemorySegment self) {
        var mh$ = gtk_grid_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gtk_grid_view_set_model$MH,"gtk_grid_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_grid_view_set_model(GtkGridView* self, GtkSelectionModel* model);
     * }
     */
    public static void gtk_grid_view_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_grid_view_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gtk_grid_view_set_factory$MH,"gtk_grid_view_set_factory");
    }
    /**
     * {@snippet :
     * void gtk_grid_view_set_factory(GtkGridView* self, GtkListItemFactory* factory);
     * }
     */
    public static void gtk_grid_view_set_factory(MemorySegment self, MemorySegment factory) {
        var mh$ = gtk_grid_view_set_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gtk_grid_view_get_factory$MH,"gtk_grid_view_get_factory");
    }
    /**
     * {@snippet :
     * GtkListItemFactory* gtk_grid_view_get_factory(GtkGridView* self);
     * }
     */
    public static MemorySegment gtk_grid_view_get_factory(MemorySegment self) {
        var mh$ = gtk_grid_view_get_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_min_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gtk_grid_view_get_min_columns$MH,"gtk_grid_view_get_min_columns");
    }
    /**
     * {@snippet :
     * guint gtk_grid_view_get_min_columns(GtkGridView* self);
     * }
     */
    public static int gtk_grid_view_get_min_columns(MemorySegment self) {
        var mh$ = gtk_grid_view_get_min_columns$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_min_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gtk_grid_view_set_min_columns$MH,"gtk_grid_view_set_min_columns");
    }
    /**
     * {@snippet :
     * void gtk_grid_view_set_min_columns(GtkGridView* self, guint min_columns);
     * }
     */
    public static void gtk_grid_view_set_min_columns(MemorySegment self, int min_columns) {
        var mh$ = gtk_grid_view_set_min_columns$MH();
        try {
            mh$.invokeExact(self, min_columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_max_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gtk_grid_view_get_max_columns$MH,"gtk_grid_view_get_max_columns");
    }
    /**
     * {@snippet :
     * guint gtk_grid_view_get_max_columns(GtkGridView* self);
     * }
     */
    public static int gtk_grid_view_get_max_columns(MemorySegment self) {
        var mh$ = gtk_grid_view_get_max_columns$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_max_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gtk_grid_view_set_max_columns$MH,"gtk_grid_view_set_max_columns");
    }
    /**
     * {@snippet :
     * void gtk_grid_view_set_max_columns(GtkGridView* self, guint max_columns);
     * }
     */
    public static void gtk_grid_view_set_max_columns(MemorySegment self, int max_columns) {
        var mh$ = gtk_grid_view_set_max_columns$MH();
        try {
            mh$.invokeExact(self, max_columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_enable_rubberband$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gtk_grid_view_set_enable_rubberband$MH,"gtk_grid_view_set_enable_rubberband");
    }
    /**
     * {@snippet :
     * void gtk_grid_view_set_enable_rubberband(GtkGridView* self, gboolean enable_rubberband);
     * }
     */
    public static void gtk_grid_view_set_enable_rubberband(MemorySegment self, int enable_rubberband) {
        var mh$ = gtk_grid_view_set_enable_rubberband$MH();
        try {
            mh$.invokeExact(self, enable_rubberband);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_enable_rubberband$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gtk_grid_view_get_enable_rubberband$MH,"gtk_grid_view_get_enable_rubberband");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_view_get_enable_rubberband(GtkGridView* self);
     * }
     */
    public static int gtk_grid_view_get_enable_rubberband(MemorySegment self) {
        var mh$ = gtk_grid_view_get_enable_rubberband$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_single_click_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gtk_grid_view_set_single_click_activate$MH,"gtk_grid_view_set_single_click_activate");
    }
    /**
     * {@snippet :
     * void gtk_grid_view_set_single_click_activate(GtkGridView* self, gboolean single_click_activate);
     * }
     */
    public static void gtk_grid_view_set_single_click_activate(MemorySegment self, int single_click_activate) {
        var mh$ = gtk_grid_view_set_single_click_activate$MH();
        try {
            mh$.invokeExact(self, single_click_activate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_single_click_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gtk_grid_view_get_single_click_activate$MH,"gtk_grid_view_get_single_click_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_view_get_single_click_activate(GtkGridView* self);
     * }
     */
    public static int gtk_grid_view_get_single_click_activate(MemorySegment self) {
        var mh$ = gtk_grid_view_get_single_click_activate$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gtk_header_bar_get_type$MH,"gtk_header_bar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_header_bar_get_type();
     * }
     */
    public static long gtk_header_bar_get_type() {
        var mh$ = gtk_header_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gtk_header_bar_new$MH,"gtk_header_bar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_header_bar_new();
     * }
     */
    public static MemorySegment gtk_header_bar_new() {
        var mh$ = gtk_header_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_title_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gtk_header_bar_set_title_widget$MH,"gtk_header_bar_set_title_widget");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_title_widget(GtkHeaderBar* bar, GtkWidget* title_widget);
     * }
     */
    public static void gtk_header_bar_set_title_widget(MemorySegment bar, MemorySegment title_widget) {
        var mh$ = gtk_header_bar_set_title_widget$MH();
        try {
            mh$.invokeExact(bar, title_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_title_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gtk_header_bar_get_title_widget$MH,"gtk_header_bar_get_title_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_header_bar_get_title_widget(GtkHeaderBar* bar);
     * }
     */
    public static MemorySegment gtk_header_bar_get_title_widget(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_title_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gtk_header_bar_pack_start$MH,"gtk_header_bar_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_pack_start(GtkHeaderBar* bar, GtkWidget* child);
     * }
     */
    public static void gtk_header_bar_pack_start(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_header_bar_pack_start$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gtk_header_bar_pack_end$MH,"gtk_header_bar_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_pack_end(GtkHeaderBar* bar, GtkWidget* child);
     * }
     */
    public static void gtk_header_bar_pack_end(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_header_bar_pack_end$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gtk_header_bar_remove$MH,"gtk_header_bar_remove");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_remove(GtkHeaderBar* bar, GtkWidget* child);
     * }
     */
    public static void gtk_header_bar_remove(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_header_bar_remove$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_show_title_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gtk_header_bar_get_show_title_buttons$MH,"gtk_header_bar_get_show_title_buttons");
    }
    /**
     * {@snippet :
     * gboolean gtk_header_bar_get_show_title_buttons(GtkHeaderBar* bar);
     * }
     */
    public static int gtk_header_bar_get_show_title_buttons(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_show_title_buttons$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_show_title_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gtk_header_bar_set_show_title_buttons$MH,"gtk_header_bar_set_show_title_buttons");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_show_title_buttons(GtkHeaderBar* bar, gboolean setting);
     * }
     */
    public static void gtk_header_bar_set_show_title_buttons(MemorySegment bar, int setting) {
        var mh$ = gtk_header_bar_set_show_title_buttons$MH();
        try {
            mh$.invokeExact(bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gtk_header_bar_set_decoration_layout$MH,"gtk_header_bar_set_decoration_layout");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_decoration_layout(GtkHeaderBar* bar, char* layout);
     * }
     */
    public static void gtk_header_bar_set_decoration_layout(MemorySegment bar, MemorySegment layout) {
        var mh$ = gtk_header_bar_set_decoration_layout$MH();
        try {
            mh$.invokeExact(bar, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gtk_header_bar_get_decoration_layout$MH,"gtk_header_bar_get_decoration_layout");
    }
    /**
     * {@snippet :
     * char* gtk_header_bar_get_decoration_layout(GtkHeaderBar* bar);
     * }
     */
    public static MemorySegment gtk_header_bar_get_decoration_layout(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_decoration_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_LOOKUP_FORCE_REGULAR = 1;
     * }
     */
    public static int GTK_ICON_LOOKUP_FORCE_REGULAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_LOOKUP_FORCE_SYMBOLIC = 2;
     * }
     */
    public static int GTK_ICON_LOOKUP_FORCE_SYMBOLIC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_LOOKUP_PRELOAD = 4;
     * }
     */
    public static int GTK_ICON_LOOKUP_PRELOAD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_THEME_NOT_FOUND = 0;
     * }
     */
    public static int GTK_ICON_THEME_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_THEME_FAILED = 1;
     * }
     */
    public static int GTK_ICON_THEME_FAILED() {
        return (int)1L;
    }
    public static MethodHandle gtk_icon_theme_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gtk_icon_theme_error_quark$MH,"gtk_icon_theme_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_icon_theme_error_quark();
     * }
     */
    public static int gtk_icon_theme_error_quark() {
        var mh$ = gtk_icon_theme_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gtk_icon_theme_get_type$MH,"gtk_icon_theme_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_theme_get_type();
     * }
     */
    public static long gtk_icon_theme_get_type() {
        var mh$ = gtk_icon_theme_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gtk_icon_theme_new$MH,"gtk_icon_theme_new");
    }
    /**
     * {@snippet :
     * GtkIconTheme* gtk_icon_theme_new();
     * }
     */
    public static MemorySegment gtk_icon_theme_new() {
        var mh$ = gtk_icon_theme_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gtk_icon_theme_get_for_display$MH,"gtk_icon_theme_get_for_display");
    }
    /**
     * {@snippet :
     * GtkIconTheme* gtk_icon_theme_get_for_display(GdkDisplay* display);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_for_display(MemorySegment display) {
        var mh$ = gtk_icon_theme_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gtk_icon_theme_get_display$MH,"gtk_icon_theme_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_icon_theme_get_display(GtkIconTheme* self);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_display(MemorySegment self) {
        var mh$ = gtk_icon_theme_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gtk_icon_theme_set_search_path$MH,"gtk_icon_theme_set_search_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_set_search_path(GtkIconTheme* self, char** path);
     * }
     */
    public static void gtk_icon_theme_set_search_path(MemorySegment self, MemorySegment path) {
        var mh$ = gtk_icon_theme_set_search_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gtk_icon_theme_get_search_path$MH,"gtk_icon_theme_get_search_path");
    }
    /**
     * {@snippet :
     * char** gtk_icon_theme_get_search_path(GtkIconTheme* self);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_search_path(MemorySegment self) {
        var mh$ = gtk_icon_theme_get_search_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_add_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gtk_icon_theme_add_search_path$MH,"gtk_icon_theme_add_search_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_add_search_path(GtkIconTheme* self, char* path);
     * }
     */
    public static void gtk_icon_theme_add_search_path(MemorySegment self, MemorySegment path) {
        var mh$ = gtk_icon_theme_add_search_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gtk_icon_theme_set_resource_path$MH,"gtk_icon_theme_set_resource_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_set_resource_path(GtkIconTheme* self, char** path);
     * }
     */
    public static void gtk_icon_theme_set_resource_path(MemorySegment self, MemorySegment path) {
        var mh$ = gtk_icon_theme_set_resource_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gtk_icon_theme_get_resource_path$MH,"gtk_icon_theme_get_resource_path");
    }
    /**
     * {@snippet :
     * char** gtk_icon_theme_get_resource_path(GtkIconTheme* self);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_resource_path(MemorySegment self) {
        var mh$ = gtk_icon_theme_get_resource_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_add_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gtk_icon_theme_add_resource_path$MH,"gtk_icon_theme_add_resource_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_add_resource_path(GtkIconTheme* self, char* path);
     * }
     */
    public static void gtk_icon_theme_add_resource_path(MemorySegment self, MemorySegment path) {
        var mh$ = gtk_icon_theme_add_resource_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_theme_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gtk_icon_theme_set_theme_name$MH,"gtk_icon_theme_set_theme_name");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_set_theme_name(GtkIconTheme* self, char* theme_name);
     * }
     */
    public static void gtk_icon_theme_set_theme_name(MemorySegment self, MemorySegment theme_name) {
        var mh$ = gtk_icon_theme_set_theme_name$MH();
        try {
            mh$.invokeExact(self, theme_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_theme_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gtk_icon_theme_get_theme_name$MH,"gtk_icon_theme_get_theme_name");
    }
    /**
     * {@snippet :
     * char* gtk_icon_theme_get_theme_name(GtkIconTheme* self);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_theme_name(MemorySegment self) {
        var mh$ = gtk_icon_theme_get_theme_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_has_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gtk_icon_theme_has_icon$MH,"gtk_icon_theme_has_icon");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_theme_has_icon(GtkIconTheme* self, char* icon_name);
     * }
     */
    public static int gtk_icon_theme_has_icon(MemorySegment self, MemorySegment icon_name) {
        var mh$ = gtk_icon_theme_has_icon$MH();
        try {
            return (int)mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_has_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gtk_icon_theme_has_gicon$MH,"gtk_icon_theme_has_gicon");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_theme_has_gicon(GtkIconTheme* self, GIcon* gicon);
     * }
     */
    public static int gtk_icon_theme_has_gicon(MemorySegment self, MemorySegment gicon) {
        var mh$ = gtk_icon_theme_has_gicon$MH();
        try {
            return (int)mh$.invokeExact(self, gicon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_icon_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gtk_icon_theme_get_icon_sizes$MH,"gtk_icon_theme_get_icon_sizes");
    }
    /**
     * {@snippet :
     * int* gtk_icon_theme_get_icon_sizes(GtkIconTheme* self, char* icon_name);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_icon_sizes(MemorySegment self, MemorySegment icon_name) {
        var mh$ = gtk_icon_theme_get_icon_sizes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gtk_icon_theme_lookup_icon$MH,"gtk_icon_theme_lookup_icon");
    }
    /**
     * {@snippet :
     * GtkIconPaintable* gtk_icon_theme_lookup_icon(GtkIconTheme* self, char* icon_name, char* fallbacks[], int size, int scale, GtkTextDirection direction, GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_lookup_icon(MemorySegment self, MemorySegment icon_name, MemorySegment fallbacks, int size, int scale, int direction, int flags) {
        var mh$ = gtk_icon_theme_lookup_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, icon_name, fallbacks, size, scale, direction, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_by_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gtk_icon_theme_lookup_by_gicon$MH,"gtk_icon_theme_lookup_by_gicon");
    }
    /**
     * {@snippet :
     * GtkIconPaintable* gtk_icon_theme_lookup_by_gicon(GtkIconTheme* self, GIcon* icon, int size, int scale, GtkTextDirection direction, GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_lookup_by_gicon(MemorySegment self, MemorySegment icon, int size, int scale, int direction, int flags) {
        var mh$ = gtk_icon_theme_lookup_by_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, icon, size, scale, direction, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_new_for_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gtk_icon_paintable_new_for_file$MH,"gtk_icon_paintable_new_for_file");
    }
    /**
     * {@snippet :
     * GtkIconPaintable* gtk_icon_paintable_new_for_file(GFile* file, int size, int scale);
     * }
     */
    public static MemorySegment gtk_icon_paintable_new_for_file(MemorySegment file, int size, int scale) {
        var mh$ = gtk_icon_paintable_new_for_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, size, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_icon_names$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gtk_icon_theme_get_icon_names$MH,"gtk_icon_theme_get_icon_names");
    }
    /**
     * {@snippet :
     * char** gtk_icon_theme_get_icon_names(GtkIconTheme* self);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_icon_names(MemorySegment self) {
        var mh$ = gtk_icon_theme_get_icon_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gtk_icon_paintable_get_type$MH,"gtk_icon_paintable_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_paintable_get_type();
     * }
     */
    public static long gtk_icon_paintable_get_type() {
        var mh$ = gtk_icon_paintable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gtk_icon_paintable_get_file$MH,"gtk_icon_paintable_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_icon_paintable_get_file(GtkIconPaintable* self);
     * }
     */
    public static MemorySegment gtk_icon_paintable_get_file(MemorySegment self) {
        var mh$ = gtk_icon_paintable_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gtk_icon_paintable_get_icon_name$MH,"gtk_icon_paintable_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_icon_paintable_get_icon_name(GtkIconPaintable* self);
     * }
     */
    public static MemorySegment gtk_icon_paintable_get_icon_name(MemorySegment self) {
        var mh$ = gtk_icon_paintable_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_is_symbolic$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gtk_icon_paintable_is_symbolic$MH,"gtk_icon_paintable_is_symbolic");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_paintable_is_symbolic(GtkIconPaintable* self);
     * }
     */
    public static int gtk_icon_paintable_is_symbolic(MemorySegment self) {
        var mh$ = gtk_icon_paintable_is_symbolic$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gtk_tooltip_get_type$MH,"gtk_tooltip_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tooltip_get_type();
     * }
     */
    public static long gtk_tooltip_get_type() {
        var mh$ = gtk_tooltip_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gtk_tooltip_set_markup$MH,"gtk_tooltip_set_markup");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_markup(GtkTooltip* tooltip, char* markup);
     * }
     */
    public static void gtk_tooltip_set_markup(MemorySegment tooltip, MemorySegment markup) {
        var mh$ = gtk_tooltip_set_markup$MH();
        try {
            mh$.invokeExact(tooltip, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gtk_tooltip_set_text$MH,"gtk_tooltip_set_text");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_text(GtkTooltip* tooltip, char* text);
     * }
     */
    public static void gtk_tooltip_set_text(MemorySegment tooltip, MemorySegment text) {
        var mh$ = gtk_tooltip_set_text$MH();
        try {
            mh$.invokeExact(tooltip, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gtk_tooltip_set_icon$MH,"gtk_tooltip_set_icon");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon(GtkTooltip* tooltip, GdkPaintable* paintable);
     * }
     */
    public static void gtk_tooltip_set_icon(MemorySegment tooltip, MemorySegment paintable) {
        var mh$ = gtk_tooltip_set_icon$MH();
        try {
            mh$.invokeExact(tooltip, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gtk_tooltip_set_icon_from_icon_name$MH,"gtk_tooltip_set_icon_from_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon_from_icon_name(GtkTooltip* tooltip, char* icon_name);
     * }
     */
    public static void gtk_tooltip_set_icon_from_icon_name(MemorySegment tooltip, MemorySegment icon_name) {
        var mh$ = gtk_tooltip_set_icon_from_icon_name$MH();
        try {
            mh$.invokeExact(tooltip, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gtk_tooltip_set_icon_from_gicon$MH,"gtk_tooltip_set_icon_from_gicon");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon_from_gicon(GtkTooltip* tooltip, GIcon* gicon);
     * }
     */
    public static void gtk_tooltip_set_icon_from_gicon(MemorySegment tooltip, MemorySegment gicon) {
        var mh$ = gtk_tooltip_set_icon_from_gicon$MH();
        try {
            mh$.invokeExact(tooltip, gicon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gtk_tooltip_set_custom$MH,"gtk_tooltip_set_custom");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_custom(GtkTooltip* tooltip, GtkWidget* custom_widget);
     * }
     */
    public static void gtk_tooltip_set_custom(MemorySegment tooltip, MemorySegment custom_widget) {
        var mh$ = gtk_tooltip_set_custom$MH();
        try {
            mh$.invokeExact(tooltip, custom_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_tip_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gtk_tooltip_set_tip_area$MH,"gtk_tooltip_set_tip_area");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_tip_area(GtkTooltip* tooltip, const GdkRectangle* rect);
     * }
     */
    public static void gtk_tooltip_set_tip_area(MemorySegment tooltip, MemorySegment rect) {
        var mh$ = gtk_tooltip_set_tip_area$MH();
        try {
            mh$.invokeExact(tooltip, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_VIEW_NO_DROP = 0;
     * }
     */
    public static int GTK_ICON_VIEW_NO_DROP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_VIEW_DROP_INTO = 1;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_INTO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_VIEW_DROP_LEFT = 2;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_LEFT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_VIEW_DROP_RIGHT = 3;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_VIEW_DROP_ABOVE = 4;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_ABOVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_VIEW_DROP_BELOW = 5;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_BELOW() {
        return (int)5L;
    }
    public static MethodHandle gtk_icon_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gtk_icon_view_get_type$MH,"gtk_icon_view_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_icon_view_get_type();
     * }
     */
    public static long gtk_icon_view_get_type() {
        var mh$ = gtk_icon_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gtk_icon_view_new$MH,"gtk_icon_view_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_icon_view_new();
     * }
     */
    public static MemorySegment gtk_icon_view_new() {
        var mh$ = gtk_icon_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gtk_icon_view_new_with_area$MH,"gtk_icon_view_new_with_area");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_icon_view_new_with_area(GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_icon_view_new_with_area(MemorySegment area) {
        var mh$ = gtk_icon_view_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gtk_icon_view_new_with_model$MH,"gtk_icon_view_new_with_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_icon_view_new_with_model(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_icon_view_new_with_model(MemorySegment model) {
        var mh$ = gtk_icon_view_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gtk_icon_view_set_model$MH,"gtk_icon_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_model(GtkIconView* icon_view, GtkTreeModel* model);
     * }
     */
    public static void gtk_icon_view_set_model(MemorySegment icon_view, MemorySegment model) {
        var mh$ = gtk_icon_view_set_model$MH();
        try {
            mh$.invokeExact(icon_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gtk_icon_view_get_model$MH,"gtk_icon_view_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_icon_view_get_model(GtkIconView* icon_view);
     * }
     */
    public static MemorySegment gtk_icon_view_get_model(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gtk_icon_view_set_text_column$MH,"gtk_icon_view_set_text_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_text_column(GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_text_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_text_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gtk_icon_view_get_text_column$MH,"gtk_icon_view_get_text_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_text_column(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_text_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_text_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_markup_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gtk_icon_view_set_markup_column$MH,"gtk_icon_view_set_markup_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_markup_column(GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_markup_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_markup_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_markup_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gtk_icon_view_get_markup_column$MH,"gtk_icon_view_get_markup_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_markup_column(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_markup_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_markup_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_pixbuf_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gtk_icon_view_set_pixbuf_column$MH,"gtk_icon_view_set_pixbuf_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_pixbuf_column(GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_pixbuf_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_pixbuf_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_pixbuf_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gtk_icon_view_get_pixbuf_column$MH,"gtk_icon_view_get_pixbuf_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_pixbuf_column(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_pixbuf_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_pixbuf_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gtk_icon_view_set_item_orientation$MH,"gtk_icon_view_set_item_orientation");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_item_orientation(GtkIconView* icon_view, GtkOrientation orientation);
     * }
     */
    public static void gtk_icon_view_set_item_orientation(MemorySegment icon_view, int orientation) {
        var mh$ = gtk_icon_view_set_item_orientation$MH();
        try {
            mh$.invokeExact(icon_view, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gtk_icon_view_get_item_orientation$MH,"gtk_icon_view_get_item_orientation");
    }
    /**
     * {@snippet :
     * GtkOrientation gtk_icon_view_get_item_orientation(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_item_orientation(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_item_orientation$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gtk_icon_view_set_columns$MH,"gtk_icon_view_set_columns");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_columns(GtkIconView* icon_view, int columns);
     * }
     */
    public static void gtk_icon_view_set_columns(MemorySegment icon_view, int columns) {
        var mh$ = gtk_icon_view_set_columns$MH();
        try {
            mh$.invokeExact(icon_view, columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gtk_icon_view_get_columns$MH,"gtk_icon_view_get_columns");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_columns(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_columns(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_columns$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gtk_icon_view_set_item_width$MH,"gtk_icon_view_set_item_width");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_item_width(GtkIconView* icon_view, int item_width);
     * }
     */
    public static void gtk_icon_view_set_item_width(MemorySegment icon_view, int item_width) {
        var mh$ = gtk_icon_view_set_item_width$MH();
        try {
            mh$.invokeExact(icon_view, item_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gtk_icon_view_get_item_width$MH,"gtk_icon_view_get_item_width");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_width(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_item_width(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_item_width$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gtk_icon_view_set_spacing$MH,"gtk_icon_view_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_spacing(GtkIconView* icon_view, int spacing);
     * }
     */
    public static void gtk_icon_view_set_spacing(MemorySegment icon_view, int spacing) {
        var mh$ = gtk_icon_view_set_spacing$MH();
        try {
            mh$.invokeExact(icon_view, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gtk_icon_view_get_spacing$MH,"gtk_icon_view_get_spacing");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_spacing(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_spacing(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gtk_icon_view_set_row_spacing$MH,"gtk_icon_view_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_row_spacing(GtkIconView* icon_view, int row_spacing);
     * }
     */
    public static void gtk_icon_view_set_row_spacing(MemorySegment icon_view, int row_spacing) {
        var mh$ = gtk_icon_view_set_row_spacing$MH();
        try {
            mh$.invokeExact(icon_view, row_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gtk_icon_view_get_row_spacing$MH,"gtk_icon_view_get_row_spacing");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_row_spacing(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_row_spacing(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gtk_icon_view_set_column_spacing$MH,"gtk_icon_view_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_column_spacing(GtkIconView* icon_view, int column_spacing);
     * }
     */
    public static void gtk_icon_view_set_column_spacing(MemorySegment icon_view, int column_spacing) {
        var mh$ = gtk_icon_view_set_column_spacing$MH();
        try {
            mh$.invokeExact(icon_view, column_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gtk_icon_view_get_column_spacing$MH,"gtk_icon_view_get_column_spacing");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_column_spacing(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_column_spacing(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gtk_icon_view_set_margin$MH,"gtk_icon_view_set_margin");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_margin(GtkIconView* icon_view, int margin);
     * }
     */
    public static void gtk_icon_view_set_margin(MemorySegment icon_view, int margin) {
        var mh$ = gtk_icon_view_set_margin$MH();
        try {
            mh$.invokeExact(icon_view, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gtk_icon_view_get_margin$MH,"gtk_icon_view_get_margin");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_margin(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_margin(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_margin$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gtk_icon_view_set_item_padding$MH,"gtk_icon_view_set_item_padding");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_item_padding(GtkIconView* icon_view, int item_padding);
     * }
     */
    public static void gtk_icon_view_set_item_padding(MemorySegment icon_view, int item_padding) {
        var mh$ = gtk_icon_view_set_item_padding$MH();
        try {
            mh$.invokeExact(icon_view, item_padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gtk_icon_view_get_item_padding$MH,"gtk_icon_view_get_item_padding");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_padding(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_item_padding(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_item_padding$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_path_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gtk_icon_view_get_path_at_pos$MH,"gtk_icon_view_get_path_at_pos");
    }
    /**
     * {@snippet :
     * GtkTreePath* gtk_icon_view_get_path_at_pos(GtkIconView* icon_view, int x, int y);
     * }
     */
    public static MemorySegment gtk_icon_view_get_path_at_pos(MemorySegment icon_view, int x, int y) {
        var mh$ = gtk_icon_view_get_path_at_pos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gtk_icon_view_get_item_at_pos$MH,"gtk_icon_view_get_item_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_item_at_pos(GtkIconView* icon_view, int x, int y, GtkTreePath** path, GtkCellRenderer** cell);
     * }
     */
    public static int gtk_icon_view_get_item_at_pos(MemorySegment icon_view, int x, int y, MemorySegment path, MemorySegment cell) {
        var mh$ = gtk_icon_view_get_item_at_pos$MH();
        try {
            return (int)mh$.invokeExact(icon_view, x, y, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_visible_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gtk_icon_view_get_visible_range$MH,"gtk_icon_view_get_visible_range");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_visible_range(GtkIconView* icon_view, GtkTreePath** start_path, GtkTreePath** end_path);
     * }
     */
    public static int gtk_icon_view_get_visible_range(MemorySegment icon_view, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_icon_view_get_visible_range$MH();
        try {
            return (int)mh$.invokeExact(icon_view, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gtk_icon_view_set_activate_on_single_click$MH,"gtk_icon_view_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_activate_on_single_click(GtkIconView* icon_view, gboolean single);
     * }
     */
    public static void gtk_icon_view_set_activate_on_single_click(MemorySegment icon_view, int single) {
        var mh$ = gtk_icon_view_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(icon_view, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gtk_icon_view_get_activate_on_single_click$MH,"gtk_icon_view_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_activate_on_single_click(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_activate_on_single_click(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gtk_icon_view_selected_foreach$MH,"gtk_icon_view_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_selected_foreach(GtkIconView* icon_view, GtkIconViewForeachFunc func, gpointer data);
     * }
     */
    public static void gtk_icon_view_selected_foreach(MemorySegment icon_view, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_icon_view_selected_foreach$MH();
        try {
            mh$.invokeExact(icon_view, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gtk_icon_view_set_selection_mode$MH,"gtk_icon_view_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_selection_mode(GtkIconView* icon_view, GtkSelectionMode mode);
     * }
     */
    public static void gtk_icon_view_set_selection_mode(MemorySegment icon_view, int mode) {
        var mh$ = gtk_icon_view_set_selection_mode$MH();
        try {
            mh$.invokeExact(icon_view, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gtk_icon_view_get_selection_mode$MH,"gtk_icon_view_get_selection_mode");
    }
    /**
     * {@snippet :
     * GtkSelectionMode gtk_icon_view_get_selection_mode(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_selection_mode(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_select_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gtk_icon_view_select_path$MH,"gtk_icon_view_select_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_select_path(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_select_path(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_select_path$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unselect_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gtk_icon_view_unselect_path$MH,"gtk_icon_view_unselect_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unselect_path(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_unselect_path(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_unselect_path$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_path_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gtk_icon_view_path_is_selected$MH,"gtk_icon_view_path_is_selected");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_path_is_selected(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static int gtk_icon_view_path_is_selected(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_path_is_selected$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gtk_icon_view_get_item_row$MH,"gtk_icon_view_get_item_row");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_row(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static int gtk_icon_view_get_item_row(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_get_item_row$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gtk_icon_view_get_item_column$MH,"gtk_icon_view_get_item_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_column(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static int gtk_icon_view_get_item_column(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_get_item_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_selected_items$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gtk_icon_view_get_selected_items$MH,"gtk_icon_view_get_selected_items");
    }
    /**
     * {@snippet :
     * GList* gtk_icon_view_get_selected_items(GtkIconView* icon_view);
     * }
     */
    public static MemorySegment gtk_icon_view_get_selected_items(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_selected_items$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gtk_icon_view_select_all$MH,"gtk_icon_view_select_all");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_select_all(GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_select_all(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_select_all$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gtk_icon_view_unselect_all$MH,"gtk_icon_view_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unselect_all(GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_unselect_all(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_unselect_all$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_item_activated$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gtk_icon_view_item_activated$MH,"gtk_icon_view_item_activated");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_item_activated(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_item_activated(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_item_activated$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gtk_icon_view_set_cursor$MH,"gtk_icon_view_set_cursor");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_cursor(GtkIconView* icon_view, GtkTreePath* path, GtkCellRenderer* cell, gboolean start_editing);
     * }
     */
    public static void gtk_icon_view_set_cursor(MemorySegment icon_view, MemorySegment path, MemorySegment cell, int start_editing) {
        var mh$ = gtk_icon_view_set_cursor$MH();
        try {
            mh$.invokeExact(icon_view, path, cell, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gtk_icon_view_get_cursor$MH,"gtk_icon_view_get_cursor");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_cursor(GtkIconView* icon_view, GtkTreePath** path, GtkCellRenderer** cell);
     * }
     */
    public static int gtk_icon_view_get_cursor(MemorySegment icon_view, MemorySegment path, MemorySegment cell) {
        var mh$ = gtk_icon_view_get_cursor$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_scroll_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gtk_icon_view_scroll_to_path$MH,"gtk_icon_view_scroll_to_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_scroll_to_path(GtkIconView* icon_view, GtkTreePath* path, gboolean use_align, float row_align, float col_align);
     * }
     */
    public static void gtk_icon_view_scroll_to_path(MemorySegment icon_view, MemorySegment path, int use_align, float row_align, float col_align) {
        var mh$ = gtk_icon_view_scroll_to_path$MH();
        try {
            mh$.invokeExact(icon_view, path, use_align, row_align, col_align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_enable_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gtk_icon_view_enable_model_drag_source$MH,"gtk_icon_view_enable_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_enable_model_drag_source(GtkIconView* icon_view, GdkModifierType start_button_mask, GdkContentFormats* formats, GdkDragAction actions);
     * }
     */
    public static void gtk_icon_view_enable_model_drag_source(MemorySegment icon_view, int start_button_mask, MemorySegment formats, int actions) {
        var mh$ = gtk_icon_view_enable_model_drag_source$MH();
        try {
            mh$.invokeExact(icon_view, start_button_mask, formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_enable_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gtk_icon_view_enable_model_drag_dest$MH,"gtk_icon_view_enable_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_enable_model_drag_dest(GtkIconView* icon_view, GdkContentFormats* formats, GdkDragAction actions);
     * }
     */
    public static void gtk_icon_view_enable_model_drag_dest(MemorySegment icon_view, MemorySegment formats, int actions) {
        var mh$ = gtk_icon_view_enable_model_drag_dest$MH();
        try {
            mh$.invokeExact(icon_view, formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unset_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gtk_icon_view_unset_model_drag_source$MH,"gtk_icon_view_unset_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unset_model_drag_source(GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_unset_model_drag_source(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_unset_model_drag_source$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unset_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gtk_icon_view_unset_model_drag_dest$MH,"gtk_icon_view_unset_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unset_model_drag_dest(GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_unset_model_drag_dest(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_unset_model_drag_dest$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gtk_icon_view_set_reorderable$MH,"gtk_icon_view_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_reorderable(GtkIconView* icon_view, gboolean reorderable);
     * }
     */
    public static void gtk_icon_view_set_reorderable(MemorySegment icon_view, int reorderable) {
        var mh$ = gtk_icon_view_set_reorderable$MH();
        try {
            mh$.invokeExact(icon_view, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gtk_icon_view_get_reorderable$MH,"gtk_icon_view_get_reorderable");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_reorderable(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_reorderable(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_drag_dest_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gtk_icon_view_set_drag_dest_item$MH,"gtk_icon_view_set_drag_dest_item");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_drag_dest_item(GtkIconView* icon_view, GtkTreePath* path, GtkIconViewDropPosition pos);
     * }
     */
    public static void gtk_icon_view_set_drag_dest_item(MemorySegment icon_view, MemorySegment path, int pos) {
        var mh$ = gtk_icon_view_set_drag_dest_item$MH();
        try {
            mh$.invokeExact(icon_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_drag_dest_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gtk_icon_view_get_drag_dest_item$MH,"gtk_icon_view_get_drag_dest_item");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_get_drag_dest_item(GtkIconView* icon_view, GtkTreePath** path, GtkIconViewDropPosition* pos);
     * }
     */
    public static void gtk_icon_view_get_drag_dest_item(MemorySegment icon_view, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_icon_view_get_drag_dest_item$MH();
        try {
            mh$.invokeExact(icon_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_dest_item_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gtk_icon_view_get_dest_item_at_pos$MH,"gtk_icon_view_get_dest_item_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_dest_item_at_pos(GtkIconView* icon_view, int drag_x, int drag_y, GtkTreePath** path, GtkIconViewDropPosition* pos);
     * }
     */
    public static int gtk_icon_view_get_dest_item_at_pos(MemorySegment icon_view, int drag_x, int drag_y, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_icon_view_get_dest_item_at_pos$MH();
        try {
            return (int)mh$.invokeExact(icon_view, drag_x, drag_y, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_create_drag_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gtk_icon_view_create_drag_icon$MH,"gtk_icon_view_create_drag_icon");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_icon_view_create_drag_icon(GtkIconView* icon_view, GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_icon_view_create_drag_icon(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_create_drag_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_cell_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gtk_icon_view_get_cell_rect$MH,"gtk_icon_view_get_cell_rect");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_cell_rect(GtkIconView* icon_view, GtkTreePath* path, GtkCellRenderer* cell, GdkRectangle* rect);
     * }
     */
    public static int gtk_icon_view_get_cell_rect(MemorySegment icon_view, MemorySegment path, MemorySegment cell, MemorySegment rect) {
        var mh$ = gtk_icon_view_get_cell_rect$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path, cell, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_tooltip_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gtk_icon_view_set_tooltip_item$MH,"gtk_icon_view_set_tooltip_item");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_tooltip_item(GtkIconView* icon_view, GtkTooltip* tooltip, GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_set_tooltip_item(MemorySegment icon_view, MemorySegment tooltip, MemorySegment path) {
        var mh$ = gtk_icon_view_set_tooltip_item$MH();
        try {
            mh$.invokeExact(icon_view, tooltip, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_tooltip_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gtk_icon_view_set_tooltip_cell$MH,"gtk_icon_view_set_tooltip_cell");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_tooltip_cell(GtkIconView* icon_view, GtkTooltip* tooltip, GtkTreePath* path, GtkCellRenderer* cell);
     * }
     */
    public static void gtk_icon_view_set_tooltip_cell(MemorySegment icon_view, MemorySegment tooltip, MemorySegment path, MemorySegment cell) {
        var mh$ = gtk_icon_view_set_tooltip_cell$MH();
        try {
            mh$.invokeExact(icon_view, tooltip, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_tooltip_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gtk_icon_view_get_tooltip_context$MH,"gtk_icon_view_get_tooltip_context");
    }
    /**
     * {@snippet :
     * gboolean gtk_icon_view_get_tooltip_context(GtkIconView* icon_view, int x, int y, gboolean keyboard_tip, GtkTreeModel** model, GtkTreePath** path, GtkTreeIter* iter);
     * }
     */
    public static int gtk_icon_view_get_tooltip_context(MemorySegment icon_view, int x, int y, int keyboard_tip, MemorySegment model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_icon_view_get_tooltip_context$MH();
        try {
            return (int)mh$.invokeExact(icon_view, x, y, keyboard_tip, model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gtk_icon_view_set_tooltip_column$MH,"gtk_icon_view_set_tooltip_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_tooltip_column(GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_tooltip_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_tooltip_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gtk_icon_view_get_tooltip_column$MH,"gtk_icon_view_get_tooltip_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_tooltip_column(GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_tooltip_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_tooltip_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gtk_im_context_simple_get_type$MH,"gtk_im_context_simple_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_im_context_simple_get_type();
     * }
     */
    public static long gtk_im_context_simple_get_type() {
        var mh$ = gtk_im_context_simple_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gtk_im_context_simple_new$MH,"gtk_im_context_simple_new");
    }
    /**
     * {@snippet :
     * GtkIMContext* gtk_im_context_simple_new();
     * }
     */
    public static MemorySegment gtk_im_context_simple_new() {
        var mh$ = gtk_im_context_simple_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_add_table$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gtk_im_context_simple_add_table$MH,"gtk_im_context_simple_add_table");
    }
    /**
     * {@snippet :
     * void gtk_im_context_simple_add_table(GtkIMContextSimple* context_simple, guint16* data, int max_seq_len, int n_seqs);
     * }
     */
    public static void gtk_im_context_simple_add_table(MemorySegment context_simple, MemorySegment data, int max_seq_len, int n_seqs) {
        var mh$ = gtk_im_context_simple_add_table$MH();
        try {
            mh$.invokeExact(context_simple, data, max_seq_len, n_seqs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_add_compose_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gtk_im_context_simple_add_compose_file$MH,"gtk_im_context_simple_add_compose_file");
    }
    /**
     * {@snippet :
     * void gtk_im_context_simple_add_compose_file(GtkIMContextSimple* context_simple, char* compose_file);
     * }
     */
    public static void gtk_im_context_simple_add_compose_file(MemorySegment context_simple, MemorySegment compose_file) {
        var mh$ = gtk_im_context_simple_add_compose_file$MH();
        try {
            mh$.invokeExact(context_simple, compose_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gtk_im_multicontext_get_type$MH,"gtk_im_multicontext_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_im_multicontext_get_type();
     * }
     */
    public static long gtk_im_multicontext_get_type() {
        var mh$ = gtk_im_multicontext_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gtk_im_multicontext_new$MH,"gtk_im_multicontext_new");
    }
    /**
     * {@snippet :
     * GtkIMContext* gtk_im_multicontext_new();
     * }
     */
    public static MemorySegment gtk_im_multicontext_new() {
        var mh$ = gtk_im_multicontext_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_get_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gtk_im_multicontext_get_context_id$MH,"gtk_im_multicontext_get_context_id");
    }
    /**
     * {@snippet :
     * char* gtk_im_multicontext_get_context_id(GtkIMMulticontext* context);
     * }
     */
    public static MemorySegment gtk_im_multicontext_get_context_id(MemorySegment context) {
        var mh$ = gtk_im_multicontext_get_context_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_set_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gtk_im_multicontext_set_context_id$MH,"gtk_im_multicontext_set_context_id");
    }
    /**
     * {@snippet :
     * void gtk_im_multicontext_set_context_id(GtkIMMulticontext* context, char* context_id);
     * }
     */
    public static void gtk_im_multicontext_set_context_id(MemorySegment context, MemorySegment context_id) {
        var mh$ = gtk_im_multicontext_set_context_id$MH();
        try {
            mh$.invokeExact(context, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gtk_info_bar_get_type$MH,"gtk_info_bar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_info_bar_get_type();
     * }
     */
    public static long gtk_info_bar_get_type() {
        var mh$ = gtk_info_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gtk_info_bar_new$MH,"gtk_info_bar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_info_bar_new();
     * }
     */
    public static MemorySegment gtk_info_bar_new() {
        var mh$ = gtk_info_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_new_with_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gtk_info_bar_new_with_buttons$MH,"gtk_info_bar_new_with_buttons");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_info_bar_new_with_buttons(char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_info_bar_new_with_buttons(MemorySegment first_button_text, Object... x1) {
        var mh$ = gtk_info_bar_new_with_buttons$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(first_button_text, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gtk_info_bar_add_action_widget$MH,"gtk_info_bar_add_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_add_action_widget(GtkInfoBar* info_bar, GtkWidget* child, int response_id);
     * }
     */
    public static void gtk_info_bar_add_action_widget(MemorySegment info_bar, MemorySegment child, int response_id) {
        var mh$ = gtk_info_bar_add_action_widget$MH();
        try {
            mh$.invokeExact(info_bar, child, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_remove_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gtk_info_bar_remove_action_widget$MH,"gtk_info_bar_remove_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_remove_action_widget(GtkInfoBar* info_bar, GtkWidget* widget);
     * }
     */
    public static void gtk_info_bar_remove_action_widget(MemorySegment info_bar, MemorySegment widget) {
        var mh$ = gtk_info_bar_remove_action_widget$MH();
        try {
            mh$.invokeExact(info_bar, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gtk_info_bar_add_button$MH,"gtk_info_bar_add_button");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_info_bar_add_button(GtkInfoBar* info_bar, char* button_text, int response_id);
     * }
     */
    public static MemorySegment gtk_info_bar_add_button(MemorySegment info_bar, MemorySegment button_text, int response_id) {
        var mh$ = gtk_info_bar_add_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info_bar, button_text, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gtk_info_bar_add_buttons$MH,"gtk_info_bar_add_buttons");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_add_buttons(GtkInfoBar* info_bar, char* first_button_text,...);
     * }
     */
    public static void gtk_info_bar_add_buttons(MemorySegment info_bar, MemorySegment first_button_text, Object... x2) {
        var mh$ = gtk_info_bar_add_buttons$MH();
        try {
            mh$.invokeExact(info_bar, first_button_text, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gtk_info_bar_add_child$MH,"gtk_info_bar_add_child");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_add_child(GtkInfoBar* info_bar, GtkWidget* widget);
     * }
     */
    public static void gtk_info_bar_add_child(MemorySegment info_bar, MemorySegment widget) {
        var mh$ = gtk_info_bar_add_child$MH();
        try {
            mh$.invokeExact(info_bar, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_remove_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gtk_info_bar_remove_child$MH,"gtk_info_bar_remove_child");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_remove_child(GtkInfoBar* info_bar, GtkWidget* widget);
     * }
     */
    public static void gtk_info_bar_remove_child(MemorySegment info_bar, MemorySegment widget) {
        var mh$ = gtk_info_bar_remove_child$MH();
        try {
            mh$.invokeExact(info_bar, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_response_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gtk_info_bar_set_response_sensitive$MH,"gtk_info_bar_set_response_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_response_sensitive(GtkInfoBar* info_bar, int response_id, gboolean setting);
     * }
     */
    public static void gtk_info_bar_set_response_sensitive(MemorySegment info_bar, int response_id, int setting) {
        var mh$ = gtk_info_bar_set_response_sensitive$MH();
        try {
            mh$.invokeExact(info_bar, response_id, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_default_response$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gtk_info_bar_set_default_response$MH,"gtk_info_bar_set_default_response");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_default_response(GtkInfoBar* info_bar, int response_id);
     * }
     */
    public static void gtk_info_bar_set_default_response(MemorySegment info_bar, int response_id) {
        var mh$ = gtk_info_bar_set_default_response$MH();
        try {
            mh$.invokeExact(info_bar, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_response$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gtk_info_bar_response$MH,"gtk_info_bar_response");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_response(GtkInfoBar* info_bar, int response_id);
     * }
     */
    public static void gtk_info_bar_response(MemorySegment info_bar, int response_id) {
        var mh$ = gtk_info_bar_response$MH();
        try {
            mh$.invokeExact(info_bar, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_message_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_info_bar_set_message_type$MH,"gtk_info_bar_set_message_type");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_message_type(GtkInfoBar* info_bar, GtkMessageType message_type);
     * }
     */
    public static void gtk_info_bar_set_message_type(MemorySegment info_bar, int message_type) {
        var mh$ = gtk_info_bar_set_message_type$MH();
        try {
            mh$.invokeExact(info_bar, message_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_message_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_info_bar_get_message_type$MH,"gtk_info_bar_get_message_type");
    }
    /**
     * {@snippet :
     * GtkMessageType gtk_info_bar_get_message_type(GtkInfoBar* info_bar);
     * }
     */
    public static int gtk_info_bar_get_message_type(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_message_type$MH();
        try {
            return (int)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_info_bar_set_show_close_button$MH,"gtk_info_bar_set_show_close_button");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_show_close_button(GtkInfoBar* info_bar, gboolean setting);
     * }
     */
    public static void gtk_info_bar_set_show_close_button(MemorySegment info_bar, int setting) {
        var mh$ = gtk_info_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(info_bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_info_bar_get_show_close_button$MH,"gtk_info_bar_get_show_close_button");
    }
    /**
     * {@snippet :
     * gboolean gtk_info_bar_get_show_close_button(GtkInfoBar* info_bar);
     * }
     */
    public static int gtk_info_bar_get_show_close_button(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_info_bar_set_revealed$MH,"gtk_info_bar_set_revealed");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_revealed(GtkInfoBar* info_bar, gboolean revealed);
     * }
     */
    public static void gtk_info_bar_set_revealed(MemorySegment info_bar, int revealed) {
        var mh$ = gtk_info_bar_set_revealed$MH();
        try {
            mh$.invokeExact(info_bar, revealed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_info_bar_get_revealed$MH,"gtk_info_bar_get_revealed");
    }
    /**
     * {@snippet :
     * gboolean gtk_info_bar_get_revealed(GtkInfoBar* info_bar);
     * }
     */
    public static int gtk_info_bar_get_revealed(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_revealed$MH();
        try {
            return (int)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_label_get_type$MH,"gtk_label_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_label_get_type();
     * }
     */
    public static long gtk_label_get_type() {
        var mh$ = gtk_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_label_new$MH,"gtk_label_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_label_new(char* str);
     * }
     */
    public static MemorySegment gtk_label_new(MemorySegment str) {
        var mh$ = gtk_label_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_label_new_with_mnemonic$MH,"gtk_label_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_label_new_with_mnemonic(char* str);
     * }
     */
    public static MemorySegment gtk_label_new_with_mnemonic(MemorySegment str) {
        var mh$ = gtk_label_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_label_set_text$MH,"gtk_label_set_text");
    }
    /**
     * {@snippet :
     * void gtk_label_set_text(GtkLabel* self, char* str);
     * }
     */
    public static void gtk_label_set_text(MemorySegment self, MemorySegment str) {
        var mh$ = gtk_label_set_text$MH();
        try {
            mh$.invokeExact(self, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_label_get_text$MH,"gtk_label_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_label_get_text(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_text(MemorySegment self) {
        var mh$ = gtk_label_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_label_set_attributes$MH,"gtk_label_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_label_set_attributes(GtkLabel* self, PangoAttrList* attrs);
     * }
     */
    public static void gtk_label_set_attributes(MemorySegment self, MemorySegment attrs) {
        var mh$ = gtk_label_set_attributes$MH();
        try {
            mh$.invokeExact(self, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_label_get_attributes$MH,"gtk_label_get_attributes");
    }
    /**
     * {@snippet :
     * PangoAttrList* gtk_label_get_attributes(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_attributes(MemorySegment self) {
        var mh$ = gtk_label_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_label_set_label$MH,"gtk_label_set_label");
    }
    /**
     * {@snippet :
     * void gtk_label_set_label(GtkLabel* self, char* str);
     * }
     */
    public static void gtk_label_set_label(MemorySegment self, MemorySegment str) {
        var mh$ = gtk_label_set_label$MH();
        try {
            mh$.invokeExact(self, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_label_get_label$MH,"gtk_label_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_label_get_label(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_label(MemorySegment self) {
        var mh$ = gtk_label_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_label_set_markup$MH,"gtk_label_set_markup");
    }
    /**
     * {@snippet :
     * void gtk_label_set_markup(GtkLabel* self, char* str);
     * }
     */
    public static void gtk_label_set_markup(MemorySegment self, MemorySegment str) {
        var mh$ = gtk_label_set_markup$MH();
        try {
            mh$.invokeExact(self, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_label_set_use_markup$MH,"gtk_label_set_use_markup");
    }
    /**
     * {@snippet :
     * void gtk_label_set_use_markup(GtkLabel* self, gboolean setting);
     * }
     */
    public static void gtk_label_set_use_markup(MemorySegment self, int setting) {
        var mh$ = gtk_label_set_use_markup$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_label_get_use_markup$MH,"gtk_label_get_use_markup");
    }
    /**
     * {@snippet :
     * gboolean gtk_label_get_use_markup(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_use_markup(MemorySegment self) {
        var mh$ = gtk_label_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_label_set_use_underline$MH,"gtk_label_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_label_set_use_underline(GtkLabel* self, gboolean setting);
     * }
     */
    public static void gtk_label_set_use_underline(MemorySegment self, int setting) {
        var mh$ = gtk_label_set_use_underline$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_label_get_use_underline$MH,"gtk_label_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_label_get_use_underline(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_use_underline(MemorySegment self) {
        var mh$ = gtk_label_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_markup_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_label_set_markup_with_mnemonic$MH,"gtk_label_set_markup_with_mnemonic");
    }
    /**
     * {@snippet :
     * void gtk_label_set_markup_with_mnemonic(GtkLabel* self, char* str);
     * }
     */
    public static void gtk_label_set_markup_with_mnemonic(MemorySegment self, MemorySegment str) {
        var mh$ = gtk_label_set_markup_with_mnemonic$MH();
        try {
            mh$.invokeExact(self, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_mnemonic_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_label_get_mnemonic_keyval$MH,"gtk_label_get_mnemonic_keyval");
    }
    /**
     * {@snippet :
     * guint gtk_label_get_mnemonic_keyval(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_mnemonic_keyval(MemorySegment self) {
        var mh$ = gtk_label_get_mnemonic_keyval$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_mnemonic_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_label_set_mnemonic_widget$MH,"gtk_label_set_mnemonic_widget");
    }
    /**
     * {@snippet :
     * void gtk_label_set_mnemonic_widget(GtkLabel* self, GtkWidget* widget);
     * }
     */
    public static void gtk_label_set_mnemonic_widget(MemorySegment self, MemorySegment widget) {
        var mh$ = gtk_label_set_mnemonic_widget$MH();
        try {
            mh$.invokeExact(self, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_mnemonic_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_label_get_mnemonic_widget$MH,"gtk_label_get_mnemonic_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_label_get_mnemonic_widget(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_mnemonic_widget(MemorySegment self) {
        var mh$ = gtk_label_get_mnemonic_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_text_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_label_set_text_with_mnemonic$MH,"gtk_label_set_text_with_mnemonic");
    }
    /**
     * {@snippet :
     * void gtk_label_set_text_with_mnemonic(GtkLabel* self, char* str);
     * }
     */
    public static void gtk_label_set_text_with_mnemonic(MemorySegment self, MemorySegment str) {
        var mh$ = gtk_label_set_text_with_mnemonic$MH();
        try {
            mh$.invokeExact(self, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_label_set_justify$MH,"gtk_label_set_justify");
    }
    /**
     * {@snippet :
     * void gtk_label_set_justify(GtkLabel* self, GtkJustification jtype);
     * }
     */
    public static void gtk_label_set_justify(MemorySegment self, int jtype) {
        var mh$ = gtk_label_set_justify$MH();
        try {
            mh$.invokeExact(self, jtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_label_get_justify$MH,"gtk_label_get_justify");
    }
    /**
     * {@snippet :
     * GtkJustification gtk_label_get_justify(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_justify(MemorySegment self) {
        var mh$ = gtk_label_get_justify$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_label_set_ellipsize$MH,"gtk_label_set_ellipsize");
    }
    /**
     * {@snippet :
     * void gtk_label_set_ellipsize(GtkLabel* self, PangoEllipsizeMode mode);
     * }
     */
    public static void gtk_label_set_ellipsize(MemorySegment self, int mode) {
        var mh$ = gtk_label_set_ellipsize$MH();
        try {
            mh$.invokeExact(self, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_label_get_ellipsize$MH,"gtk_label_get_ellipsize");
    }
    /**
     * {@snippet :
     * PangoEllipsizeMode gtk_label_get_ellipsize(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_ellipsize(MemorySegment self) {
        var mh$ = gtk_label_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_label_set_width_chars$MH,"gtk_label_set_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_label_set_width_chars(GtkLabel* self, int n_chars);
     * }
     */
    public static void gtk_label_set_width_chars(MemorySegment self, int n_chars) {
        var mh$ = gtk_label_set_width_chars$MH();
        try {
            mh$.invokeExact(self, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_label_get_width_chars$MH,"gtk_label_get_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_label_get_width_chars(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_width_chars(MemorySegment self) {
        var mh$ = gtk_label_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_label_set_max_width_chars$MH,"gtk_label_set_max_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_label_set_max_width_chars(GtkLabel* self, int n_chars);
     * }
     */
    public static void gtk_label_set_max_width_chars(MemorySegment self, int n_chars) {
        var mh$ = gtk_label_set_max_width_chars$MH();
        try {
            mh$.invokeExact(self, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_label_get_max_width_chars$MH,"gtk_label_get_max_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_label_get_max_width_chars(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_max_width_chars(MemorySegment self) {
        var mh$ = gtk_label_get_max_width_chars$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_label_set_lines$MH,"gtk_label_set_lines");
    }
    /**
     * {@snippet :
     * void gtk_label_set_lines(GtkLabel* self, int lines);
     * }
     */
    public static void gtk_label_set_lines(MemorySegment self, int lines) {
        var mh$ = gtk_label_set_lines$MH();
        try {
            mh$.invokeExact(self, lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_label_get_lines$MH,"gtk_label_get_lines");
    }
    /**
     * {@snippet :
     * int gtk_label_get_lines(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_lines(MemorySegment self) {
        var mh$ = gtk_label_get_lines$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_label_set_wrap$MH,"gtk_label_set_wrap");
    }
    /**
     * {@snippet :
     * void gtk_label_set_wrap(GtkLabel* self, gboolean wrap);
     * }
     */
    public static void gtk_label_set_wrap(MemorySegment self, int wrap) {
        var mh$ = gtk_label_set_wrap$MH();
        try {
            mh$.invokeExact(self, wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_label_get_wrap$MH,"gtk_label_get_wrap");
    }
    /**
     * {@snippet :
     * gboolean gtk_label_get_wrap(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_wrap(MemorySegment self) {
        var mh$ = gtk_label_get_wrap$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_label_set_wrap_mode$MH,"gtk_label_set_wrap_mode");
    }
    /**
     * {@snippet :
     * void gtk_label_set_wrap_mode(GtkLabel* self, PangoWrapMode wrap_mode);
     * }
     */
    public static void gtk_label_set_wrap_mode(MemorySegment self, int wrap_mode) {
        var mh$ = gtk_label_set_wrap_mode$MH();
        try {
            mh$.invokeExact(self, wrap_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_label_get_wrap_mode$MH,"gtk_label_get_wrap_mode");
    }
    /**
     * {@snippet :
     * PangoWrapMode gtk_label_get_wrap_mode(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_wrap_mode(MemorySegment self) {
        var mh$ = gtk_label_get_wrap_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_natural_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_label_set_natural_wrap_mode$MH,"gtk_label_set_natural_wrap_mode");
    }
    /**
     * {@snippet :
     * void gtk_label_set_natural_wrap_mode(GtkLabel* self, GtkNaturalWrapMode wrap_mode);
     * }
     */
    public static void gtk_label_set_natural_wrap_mode(MemorySegment self, int wrap_mode) {
        var mh$ = gtk_label_set_natural_wrap_mode$MH();
        try {
            mh$.invokeExact(self, wrap_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_natural_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_label_get_natural_wrap_mode$MH,"gtk_label_get_natural_wrap_mode");
    }
    /**
     * {@snippet :
     * GtkNaturalWrapMode gtk_label_get_natural_wrap_mode(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_natural_wrap_mode(MemorySegment self) {
        var mh$ = gtk_label_get_natural_wrap_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_label_set_selectable$MH,"gtk_label_set_selectable");
    }
    /**
     * {@snippet :
     * void gtk_label_set_selectable(GtkLabel* self, gboolean setting);
     * }
     */
    public static void gtk_label_set_selectable(MemorySegment self, int setting) {
        var mh$ = gtk_label_set_selectable$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_label_get_selectable$MH,"gtk_label_get_selectable");
    }
    /**
     * {@snippet :
     * gboolean gtk_label_get_selectable(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_selectable(MemorySegment self) {
        var mh$ = gtk_label_get_selectable$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_select_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_label_select_region$MH,"gtk_label_select_region");
    }
    /**
     * {@snippet :
     * void gtk_label_select_region(GtkLabel* self, int start_offset, int end_offset);
     * }
     */
    public static void gtk_label_select_region(MemorySegment self, int start_offset, int end_offset) {
        var mh$ = gtk_label_select_region$MH();
        try {
            mh$.invokeExact(self, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_label_get_selection_bounds$MH,"gtk_label_get_selection_bounds");
    }
    /**
     * {@snippet :
     * gboolean gtk_label_get_selection_bounds(GtkLabel* self, int* start, int* end);
     * }
     */
    public static int gtk_label_get_selection_bounds(MemorySegment self, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_label_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(self, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_label_get_layout$MH,"gtk_label_get_layout");
    }
    /**
     * {@snippet :
     * PangoLayout* gtk_label_get_layout(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_layout(MemorySegment self) {
        var mh$ = gtk_label_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_layout_offsets$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_label_get_layout_offsets$MH,"gtk_label_get_layout_offsets");
    }
    /**
     * {@snippet :
     * void gtk_label_get_layout_offsets(GtkLabel* self, int* x, int* y);
     * }
     */
    public static void gtk_label_get_layout_offsets(MemorySegment self, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_label_get_layout_offsets$MH();
        try {
            mh$.invokeExact(self, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_single_line_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_label_set_single_line_mode$MH,"gtk_label_set_single_line_mode");
    }
    /**
     * {@snippet :
     * void gtk_label_set_single_line_mode(GtkLabel* self, gboolean single_line_mode);
     * }
     */
    public static void gtk_label_set_single_line_mode(MemorySegment self, int single_line_mode) {
        var mh$ = gtk_label_set_single_line_mode$MH();
        try {
            mh$.invokeExact(self, single_line_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_single_line_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_label_get_single_line_mode$MH,"gtk_label_get_single_line_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_label_get_single_line_mode(GtkLabel* self);
     * }
     */
    public static int gtk_label_get_single_line_mode(MemorySegment self) {
        var mh$ = gtk_label_get_single_line_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_current_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_label_get_current_uri$MH,"gtk_label_get_current_uri");
    }
    /**
     * {@snippet :
     * char* gtk_label_get_current_uri(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_current_uri(MemorySegment self) {
        var mh$ = gtk_label_get_current_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_xalign$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_label_set_xalign$MH,"gtk_label_set_xalign");
    }
    /**
     * {@snippet :
     * void gtk_label_set_xalign(GtkLabel* self, float xalign);
     * }
     */
    public static void gtk_label_set_xalign(MemorySegment self, float xalign) {
        var mh$ = gtk_label_set_xalign$MH();
        try {
            mh$.invokeExact(self, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_xalign$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_label_get_xalign$MH,"gtk_label_get_xalign");
    }
    /**
     * {@snippet :
     * float gtk_label_get_xalign(GtkLabel* self);
     * }
     */
    public static float gtk_label_get_xalign(MemorySegment self) {
        var mh$ = gtk_label_get_xalign$MH();
        try {
            return (float)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_yalign$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_label_set_yalign$MH,"gtk_label_set_yalign");
    }
    /**
     * {@snippet :
     * void gtk_label_set_yalign(GtkLabel* self, float yalign);
     * }
     */
    public static void gtk_label_set_yalign(MemorySegment self, float yalign) {
        var mh$ = gtk_label_set_yalign$MH();
        try {
            mh$.invokeExact(self, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_yalign$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_label_get_yalign$MH,"gtk_label_get_yalign");
    }
    /**
     * {@snippet :
     * float gtk_label_get_yalign(GtkLabel* self);
     * }
     */
    public static float gtk_label_get_yalign(MemorySegment self) {
        var mh$ = gtk_label_get_yalign$MH();
        try {
            return (float)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_label_set_extra_menu$MH,"gtk_label_set_extra_menu");
    }
    /**
     * {@snippet :
     * void gtk_label_set_extra_menu(GtkLabel* self, GMenuModel* model);
     * }
     */
    public static void gtk_label_set_extra_menu(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_label_set_extra_menu$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_label_get_extra_menu$MH,"gtk_label_get_extra_menu");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_label_get_extra_menu(GtkLabel* self);
     * }
     */
    public static MemorySegment gtk_label_get_extra_menu(MemorySegment self) {
        var mh$ = gtk_label_get_extra_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkLabel* GtkLabel_autoptr;
     * }
     */
    public static final OfAddress GtkLabel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkLabel_listautoptr;
     * }
     */
    public static final OfAddress GtkLabel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkLabel_slistautoptr;
     * }
     */
    public static final OfAddress GtkLabel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkLabel_queueautoptr;
     * }
     */
    public static final OfAddress GtkLabel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_level_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_level_bar_get_type$MH,"gtk_level_bar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_level_bar_get_type();
     * }
     */
    public static long gtk_level_bar_get_type() {
        var mh$ = gtk_level_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_level_bar_new$MH,"gtk_level_bar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_level_bar_new();
     * }
     */
    public static MemorySegment gtk_level_bar_new() {
        var mh$ = gtk_level_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_new_for_interval$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_level_bar_new_for_interval$MH,"gtk_level_bar_new_for_interval");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_level_bar_new_for_interval(double min_value, double max_value);
     * }
     */
    public static MemorySegment gtk_level_bar_new_for_interval(double min_value, double max_value) {
        var mh$ = gtk_level_bar_new_for_interval$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(min_value, max_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_level_bar_set_mode$MH,"gtk_level_bar_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_mode(GtkLevelBar* self, GtkLevelBarMode mode);
     * }
     */
    public static void gtk_level_bar_set_mode(MemorySegment self, int mode) {
        var mh$ = gtk_level_bar_set_mode$MH();
        try {
            mh$.invokeExact(self, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_level_bar_get_mode$MH,"gtk_level_bar_get_mode");
    }
    /**
     * {@snippet :
     * GtkLevelBarMode gtk_level_bar_get_mode(GtkLevelBar* self);
     * }
     */
    public static int gtk_level_bar_get_mode(MemorySegment self) {
        var mh$ = gtk_level_bar_get_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_level_bar_set_value$MH,"gtk_level_bar_set_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_value(GtkLevelBar* self, double value);
     * }
     */
    public static void gtk_level_bar_set_value(MemorySegment self, double value) {
        var mh$ = gtk_level_bar_set_value$MH();
        try {
            mh$.invokeExact(self, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_level_bar_get_value$MH,"gtk_level_bar_get_value");
    }
    /**
     * {@snippet :
     * double gtk_level_bar_get_value(GtkLevelBar* self);
     * }
     */
    public static double gtk_level_bar_get_value(MemorySegment self) {
        var mh$ = gtk_level_bar_get_value$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_min_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_level_bar_set_min_value$MH,"gtk_level_bar_set_min_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_min_value(GtkLevelBar* self, double value);
     * }
     */
    public static void gtk_level_bar_set_min_value(MemorySegment self, double value) {
        var mh$ = gtk_level_bar_set_min_value$MH();
        try {
            mh$.invokeExact(self, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_min_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_level_bar_get_min_value$MH,"gtk_level_bar_get_min_value");
    }
    /**
     * {@snippet :
     * double gtk_level_bar_get_min_value(GtkLevelBar* self);
     * }
     */
    public static double gtk_level_bar_get_min_value(MemorySegment self) {
        var mh$ = gtk_level_bar_get_min_value$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_max_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_level_bar_set_max_value$MH,"gtk_level_bar_set_max_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_max_value(GtkLevelBar* self, double value);
     * }
     */
    public static void gtk_level_bar_set_max_value(MemorySegment self, double value) {
        var mh$ = gtk_level_bar_set_max_value$MH();
        try {
            mh$.invokeExact(self, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_max_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_level_bar_get_max_value$MH,"gtk_level_bar_get_max_value");
    }
    /**
     * {@snippet :
     * double gtk_level_bar_get_max_value(GtkLevelBar* self);
     * }
     */
    public static double gtk_level_bar_get_max_value(MemorySegment self) {
        var mh$ = gtk_level_bar_get_max_value$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_level_bar_set_inverted$MH,"gtk_level_bar_set_inverted");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_inverted(GtkLevelBar* self, gboolean inverted);
     * }
     */
    public static void gtk_level_bar_set_inverted(MemorySegment self, int inverted) {
        var mh$ = gtk_level_bar_set_inverted$MH();
        try {
            mh$.invokeExact(self, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_level_bar_get_inverted$MH,"gtk_level_bar_get_inverted");
    }
    /**
     * {@snippet :
     * gboolean gtk_level_bar_get_inverted(GtkLevelBar* self);
     * }
     */
    public static int gtk_level_bar_get_inverted(MemorySegment self) {
        var mh$ = gtk_level_bar_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_add_offset_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_level_bar_add_offset_value$MH,"gtk_level_bar_add_offset_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_add_offset_value(GtkLevelBar* self, char* name, double value);
     * }
     */
    public static void gtk_level_bar_add_offset_value(MemorySegment self, MemorySegment name, double value) {
        var mh$ = gtk_level_bar_add_offset_value$MH();
        try {
            mh$.invokeExact(self, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_remove_offset_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_level_bar_remove_offset_value$MH,"gtk_level_bar_remove_offset_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_remove_offset_value(GtkLevelBar* self, char* name);
     * }
     */
    public static void gtk_level_bar_remove_offset_value(MemorySegment self, MemorySegment name) {
        var mh$ = gtk_level_bar_remove_offset_value$MH();
        try {
            mh$.invokeExact(self, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_offset_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_level_bar_get_offset_value$MH,"gtk_level_bar_get_offset_value");
    }
    /**
     * {@snippet :
     * gboolean gtk_level_bar_get_offset_value(GtkLevelBar* self, char* name, double* value);
     * }
     */
    public static int gtk_level_bar_get_offset_value(MemorySegment self, MemorySegment name, MemorySegment value) {
        var mh$ = gtk_level_bar_get_offset_value$MH();
        try {
            return (int)mh$.invokeExact(self, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_link_button_get_type$MH,"gtk_link_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_link_button_get_type();
     * }
     */
    public static long gtk_link_button_get_type() {
        var mh$ = gtk_link_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_link_button_new$MH,"gtk_link_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_link_button_new(char* uri);
     * }
     */
    public static MemorySegment gtk_link_button_new(MemorySegment uri) {
        var mh$ = gtk_link_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_link_button_new_with_label$MH,"gtk_link_button_new_with_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_link_button_new_with_label(char* uri, char* label);
     * }
     */
    public static MemorySegment gtk_link_button_new_with_label(MemorySegment uri, MemorySegment label) {
        var mh$ = gtk_link_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_link_button_get_uri$MH,"gtk_link_button_get_uri");
    }
    /**
     * {@snippet :
     * char* gtk_link_button_get_uri(GtkLinkButton* link_button);
     * }
     */
    public static MemorySegment gtk_link_button_get_uri(MemorySegment link_button) {
        var mh$ = gtk_link_button_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(link_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_set_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_link_button_set_uri$MH,"gtk_link_button_set_uri");
    }
    /**
     * {@snippet :
     * void gtk_link_button_set_uri(GtkLinkButton* link_button, char* uri);
     * }
     */
    public static void gtk_link_button_set_uri(MemorySegment link_button, MemorySegment uri) {
        var mh$ = gtk_link_button_set_uri$MH();
        try {
            mh$.invokeExact(link_button, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_get_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_link_button_get_visited$MH,"gtk_link_button_get_visited");
    }
    /**
     * {@snippet :
     * gboolean gtk_link_button_get_visited(GtkLinkButton* link_button);
     * }
     */
    public static int gtk_link_button_get_visited(MemorySegment link_button) {
        var mh$ = gtk_link_button_get_visited$MH();
        try {
            return (int)mh$.invokeExact(link_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_set_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_link_button_set_visited$MH,"gtk_link_button_set_visited");
    }
    /**
     * {@snippet :
     * void gtk_link_button_set_visited(GtkLinkButton* link_button, gboolean visited);
     * }
     */
    public static void gtk_link_button_set_visited(MemorySegment link_button, int visited) {
        var mh$ = gtk_link_button_set_visited$MH();
        try {
            mh$.invokeExact(link_button, visited);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_list_box_row_get_type$MH,"gtk_list_box_row_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_list_box_row_get_type();
     * }
     */
    public static long gtk_list_box_row_get_type() {
        var mh$ = gtk_list_box_row_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_list_box_row_new$MH,"gtk_list_box_row_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_list_box_row_new();
     * }
     */
    public static MemorySegment gtk_list_box_row_new() {
        var mh$ = gtk_list_box_row_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_list_box_row_set_child$MH,"gtk_list_box_row_set_child");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_child(GtkListBoxRow* row, GtkWidget* child);
     * }
     */
    public static void gtk_list_box_row_set_child(MemorySegment row, MemorySegment child) {
        var mh$ = gtk_list_box_row_set_child$MH();
        try {
            mh$.invokeExact(row, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_list_box_row_get_child$MH,"gtk_list_box_row_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_list_box_row_get_child(GtkListBoxRow* row);
     * }
     */
    public static MemorySegment gtk_list_box_row_get_child(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_list_box_row_get_header$MH,"gtk_list_box_row_get_header");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_list_box_row_get_header(GtkListBoxRow* row);
     * }
     */
    public static MemorySegment gtk_list_box_row_get_header(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_list_box_row_set_header$MH,"gtk_list_box_row_set_header");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_header(GtkListBoxRow* row, GtkWidget* header);
     * }
     */
    public static void gtk_list_box_row_set_header(MemorySegment row, MemorySegment header) {
        var mh$ = gtk_list_box_row_set_header$MH();
        try {
            mh$.invokeExact(row, header);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_list_box_row_get_index$MH,"gtk_list_box_row_get_index");
    }
    /**
     * {@snippet :
     * int gtk_list_box_row_get_index(GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_get_index(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_index$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_list_box_row_changed$MH,"gtk_list_box_row_changed");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_changed(GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_row_changed(MemorySegment row) {
        var mh$ = gtk_list_box_row_changed$MH();
        try {
            mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_list_box_row_is_selected$MH,"gtk_list_box_row_is_selected");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_box_row_is_selected(GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_is_selected(MemorySegment row) {
        var mh$ = gtk_list_box_row_is_selected$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_list_box_row_set_selectable$MH,"gtk_list_box_row_set_selectable");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_selectable(GtkListBoxRow* row, gboolean selectable);
     * }
     */
    public static void gtk_list_box_row_set_selectable(MemorySegment row, int selectable) {
        var mh$ = gtk_list_box_row_set_selectable$MH();
        try {
            mh$.invokeExact(row, selectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_list_box_row_get_selectable$MH,"gtk_list_box_row_get_selectable");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_box_row_get_selectable(GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_get_selectable(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_selectable$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_list_box_row_set_activatable$MH,"gtk_list_box_row_set_activatable");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_activatable(GtkListBoxRow* row, gboolean activatable);
     * }
     */
    public static void gtk_list_box_row_set_activatable(MemorySegment row, int activatable) {
        var mh$ = gtk_list_box_row_set_activatable$MH();
        try {
            mh$.invokeExact(row, activatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_list_box_row_get_activatable$MH,"gtk_list_box_row_get_activatable");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_box_row_get_activatable(GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_get_activatable(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_activatable$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_list_box_get_type$MH,"gtk_list_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_list_box_get_type();
     * }
     */
    public static long gtk_list_box_get_type() {
        var mh$ = gtk_list_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_list_box_prepend$MH,"gtk_list_box_prepend");
    }
    /**
     * {@snippet :
     * void gtk_list_box_prepend(GtkListBox* box, GtkWidget* child);
     * }
     */
    public static void gtk_list_box_prepend(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_list_box_prepend$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_list_box_append$MH,"gtk_list_box_append");
    }
    /**
     * {@snippet :
     * void gtk_list_box_append(GtkListBox* box, GtkWidget* child);
     * }
     */
    public static void gtk_list_box_append(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_list_box_append$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_list_box_insert$MH,"gtk_list_box_insert");
    }
    /**
     * {@snippet :
     * void gtk_list_box_insert(GtkListBox* box, GtkWidget* child, int position);
     * }
     */
    public static void gtk_list_box_insert(MemorySegment box, MemorySegment child, int position) {
        var mh$ = gtk_list_box_insert$MH();
        try {
            mh$.invokeExact(box, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_list_box_remove$MH,"gtk_list_box_remove");
    }
    /**
     * {@snippet :
     * void gtk_list_box_remove(GtkListBox* box, GtkWidget* child);
     * }
     */
    public static void gtk_list_box_remove(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_list_box_remove$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_selected_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_list_box_get_selected_row$MH,"gtk_list_box_get_selected_row");
    }
    /**
     * {@snippet :
     * GtkListBoxRow* gtk_list_box_get_selected_row(GtkListBox* box);
     * }
     */
    public static MemorySegment gtk_list_box_get_selected_row(MemorySegment box) {
        var mh$ = gtk_list_box_get_selected_row$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_row_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_list_box_get_row_at_index$MH,"gtk_list_box_get_row_at_index");
    }
    /**
     * {@snippet :
     * GtkListBoxRow* gtk_list_box_get_row_at_index(GtkListBox* box, int index_);
     * }
     */
    public static MemorySegment gtk_list_box_get_row_at_index(MemorySegment box, int index_) {
        var mh$ = gtk_list_box_get_row_at_index$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_row_at_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_list_box_get_row_at_y$MH,"gtk_list_box_get_row_at_y");
    }
    /**
     * {@snippet :
     * GtkListBoxRow* gtk_list_box_get_row_at_y(GtkListBox* box, int y);
     * }
     */
    public static MemorySegment gtk_list_box_get_row_at_y(MemorySegment box, int y) {
        var mh$ = gtk_list_box_get_row_at_y$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_select_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_list_box_select_row$MH,"gtk_list_box_select_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_select_row(GtkListBox* box, GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_select_row(MemorySegment box, MemorySegment row) {
        var mh$ = gtk_list_box_select_row$MH();
        try {
            mh$.invokeExact(box, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_placeholder$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_list_box_set_placeholder$MH,"gtk_list_box_set_placeholder");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_placeholder(GtkListBox* box, GtkWidget* placeholder);
     * }
     */
    public static void gtk_list_box_set_placeholder(MemorySegment box, MemorySegment placeholder) {
        var mh$ = gtk_list_box_set_placeholder$MH();
        try {
            mh$.invokeExact(box, placeholder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_list_box_set_adjustment$MH,"gtk_list_box_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_adjustment(GtkListBox* box, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_list_box_set_adjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_list_box_set_adjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_list_box_get_adjustment$MH,"gtk_list_box_get_adjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_list_box_get_adjustment(GtkListBox* box);
     * }
     */
    public static MemorySegment gtk_list_box_get_adjustment(MemorySegment box) {
        var mh$ = gtk_list_box_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_list_box_selected_foreach$MH,"gtk_list_box_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_list_box_selected_foreach(GtkListBox* box, GtkListBoxForeachFunc func, gpointer data);
     * }
     */
    public static void gtk_list_box_selected_foreach(MemorySegment box, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_list_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_list_box_get_selected_rows$MH,"gtk_list_box_get_selected_rows");
    }
    /**
     * {@snippet :
     * GList* gtk_list_box_get_selected_rows(GtkListBox* box);
     * }
     */
    public static MemorySegment gtk_list_box_get_selected_rows(MemorySegment box) {
        var mh$ = gtk_list_box_get_selected_rows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_unselect_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_list_box_unselect_row$MH,"gtk_list_box_unselect_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_unselect_row(GtkListBox* box, GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_unselect_row(MemorySegment box, MemorySegment row) {
        var mh$ = gtk_list_box_unselect_row$MH();
        try {
            mh$.invokeExact(box, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_list_box_select_all$MH,"gtk_list_box_select_all");
    }
    /**
     * {@snippet :
     * void gtk_list_box_select_all(GtkListBox* box);
     * }
     */
    public static void gtk_list_box_select_all(MemorySegment box) {
        var mh$ = gtk_list_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_list_box_unselect_all$MH,"gtk_list_box_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_list_box_unselect_all(GtkListBox* box);
     * }
     */
    public static void gtk_list_box_unselect_all(MemorySegment box) {
        var mh$ = gtk_list_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_list_box_set_selection_mode$MH,"gtk_list_box_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_selection_mode(GtkListBox* box, GtkSelectionMode mode);
     * }
     */
    public static void gtk_list_box_set_selection_mode(MemorySegment box, int mode) {
        var mh$ = gtk_list_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_list_box_get_selection_mode$MH,"gtk_list_box_get_selection_mode");
    }
    /**
     * {@snippet :
     * GtkSelectionMode gtk_list_box_get_selection_mode(GtkListBox* box);
     * }
     */
    public static int gtk_list_box_get_selection_mode(MemorySegment box) {
        var mh$ = gtk_list_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_list_box_set_filter_func$MH,"gtk_list_box_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_filter_func(GtkListBox* box, GtkListBoxFilterFunc filter_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_list_box_set_filter_func(MemorySegment box, MemorySegment filter_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_list_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_header_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_list_box_set_header_func$MH,"gtk_list_box_set_header_func");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_header_func(GtkListBox* box, GtkListBoxUpdateHeaderFunc update_header, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_list_box_set_header_func(MemorySegment box, MemorySegment update_header, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_list_box_set_header_func$MH();
        try {
            mh$.invokeExact(box, update_header, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_list_box_invalidate_filter$MH,"gtk_list_box_invalidate_filter");
    }
    /**
     * {@snippet :
     * void gtk_list_box_invalidate_filter(GtkListBox* box);
     * }
     */
    public static void gtk_list_box_invalidate_filter(MemorySegment box) {
        var mh$ = gtk_list_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_list_box_invalidate_sort$MH,"gtk_list_box_invalidate_sort");
    }
    /**
     * {@snippet :
     * void gtk_list_box_invalidate_sort(GtkListBox* box);
     * }
     */
    public static void gtk_list_box_invalidate_sort(MemorySegment box) {
        var mh$ = gtk_list_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_invalidate_headers$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_list_box_invalidate_headers$MH,"gtk_list_box_invalidate_headers");
    }
    /**
     * {@snippet :
     * void gtk_list_box_invalidate_headers(GtkListBox* box);
     * }
     */
    public static void gtk_list_box_invalidate_headers(MemorySegment box) {
        var mh$ = gtk_list_box_invalidate_headers$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_list_box_set_sort_func$MH,"gtk_list_box_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_sort_func(GtkListBox* box, GtkListBoxSortFunc sort_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_list_box_set_sort_func(MemorySegment box, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_list_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_list_box_set_activate_on_single_click$MH,"gtk_list_box_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_activate_on_single_click(GtkListBox* box, gboolean single);
     * }
     */
    public static void gtk_list_box_set_activate_on_single_click(MemorySegment box, int single) {
        var mh$ = gtk_list_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_list_box_get_activate_on_single_click$MH,"gtk_list_box_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_box_get_activate_on_single_click(GtkListBox* box);
     * }
     */
    public static int gtk_list_box_get_activate_on_single_click(MemorySegment box) {
        var mh$ = gtk_list_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_drag_unhighlight_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_list_box_drag_unhighlight_row$MH,"gtk_list_box_drag_unhighlight_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_drag_unhighlight_row(GtkListBox* box);
     * }
     */
    public static void gtk_list_box_drag_unhighlight_row(MemorySegment box) {
        var mh$ = gtk_list_box_drag_unhighlight_row$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_drag_highlight_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_list_box_drag_highlight_row$MH,"gtk_list_box_drag_highlight_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_drag_highlight_row(GtkListBox* box, GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_drag_highlight_row(MemorySegment box, MemorySegment row) {
        var mh$ = gtk_list_box_drag_highlight_row$MH();
        try {
            mh$.invokeExact(box, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_list_box_new$MH,"gtk_list_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_list_box_new();
     * }
     */
    public static MemorySegment gtk_list_box_new() {
        var mh$ = gtk_list_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_list_box_bind_model$MH,"gtk_list_box_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_list_box_bind_model(GtkListBox* box, GListModel* model, GtkListBoxCreateWidgetFunc create_widget_func, gpointer user_data, GDestroyNotify user_data_free_func);
     * }
     */
    public static void gtk_list_box_bind_model(MemorySegment box, MemorySegment model, MemorySegment create_widget_func, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = gtk_list_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_show_separators$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_list_box_set_show_separators$MH,"gtk_list_box_set_show_separators");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_show_separators(GtkListBox* box, gboolean show_separators);
     * }
     */
    public static void gtk_list_box_set_show_separators(MemorySegment box, int show_separators) {
        var mh$ = gtk_list_box_set_show_separators$MH();
        try {
            mh$.invokeExact(box, show_separators);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_show_separators$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_list_box_get_show_separators$MH,"gtk_list_box_get_show_separators");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_box_get_show_separators(GtkListBox* box);
     * }
     */
    public static int gtk_list_box_get_show_separators(MemorySegment box) {
        var mh$ = gtk_list_box_get_show_separators$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkListBox* GtkListBox_autoptr;
     * }
     */
    public static final OfAddress GtkListBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkListBox_listautoptr;
     * }
     */
    public static final OfAddress GtkListBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkListBox_slistautoptr;
     * }
     */
    public static final OfAddress GtkListBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkListBox_queueautoptr;
     * }
     */
    public static final OfAddress GtkListBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkListBoxRow* GtkListBoxRow_autoptr;
     * }
     */
    public static final OfAddress GtkListBoxRow_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkListBoxRow_listautoptr;
     * }
     */
    public static final OfAddress GtkListBoxRow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkListBoxRow_slistautoptr;
     * }
     */
    public static final OfAddress GtkListBoxRow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkListBoxRow_queueautoptr;
     * }
     */
    public static final OfAddress GtkListBoxRow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_list_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_list_item_get_type$MH,"gtk_list_item_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_list_item_get_type();
     * }
     */
    public static long gtk_list_item_get_type() {
        var mh$ = gtk_list_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_get_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_list_item_get_item$MH,"gtk_list_item_get_item");
    }
    /**
     * {@snippet :
     * gpointer gtk_list_item_get_item(GtkListItem* self);
     * }
     */
    public static MemorySegment gtk_list_item_get_item(MemorySegment self) {
        var mh$ = gtk_list_item_get_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_list_item_get_position$MH,"gtk_list_item_get_position");
    }
    /**
     * {@snippet :
     * guint gtk_list_item_get_position(GtkListItem* self);
     * }
     */
    public static int gtk_list_item_get_position(MemorySegment self) {
        var mh$ = gtk_list_item_get_position$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_list_item_get_selected$MH,"gtk_list_item_get_selected");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_item_get_selected(GtkListItem* self);
     * }
     */
    public static int gtk_list_item_get_selected(MemorySegment self) {
        var mh$ = gtk_list_item_get_selected$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_get_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_list_item_get_selectable$MH,"gtk_list_item_get_selectable");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_item_get_selectable(GtkListItem* self);
     * }
     */
    public static int gtk_list_item_get_selectable(MemorySegment self) {
        var mh$ = gtk_list_item_get_selectable$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_set_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_list_item_set_selectable$MH,"gtk_list_item_set_selectable");
    }
    /**
     * {@snippet :
     * void gtk_list_item_set_selectable(GtkListItem* self, gboolean selectable);
     * }
     */
    public static void gtk_list_item_set_selectable(MemorySegment self, int selectable) {
        var mh$ = gtk_list_item_set_selectable$MH();
        try {
            mh$.invokeExact(self, selectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_get_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_list_item_get_activatable$MH,"gtk_list_item_get_activatable");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_item_get_activatable(GtkListItem* self);
     * }
     */
    public static int gtk_list_item_get_activatable(MemorySegment self) {
        var mh$ = gtk_list_item_get_activatable$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_set_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_list_item_set_activatable$MH,"gtk_list_item_set_activatable");
    }
    /**
     * {@snippet :
     * void gtk_list_item_set_activatable(GtkListItem* self, gboolean activatable);
     * }
     */
    public static void gtk_list_item_set_activatable(MemorySegment self, int activatable) {
        var mh$ = gtk_list_item_set_activatable$MH();
        try {
            mh$.invokeExact(self, activatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_list_item_set_child$MH,"gtk_list_item_set_child");
    }
    /**
     * {@snippet :
     * void gtk_list_item_set_child(GtkListItem* self, GtkWidget* child);
     * }
     */
    public static void gtk_list_item_set_child(MemorySegment self, MemorySegment child) {
        var mh$ = gtk_list_item_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_item_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_list_item_get_child$MH,"gtk_list_item_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_list_item_get_child(GtkListItem* self);
     * }
     */
    public static MemorySegment gtk_list_item_get_child(MemorySegment self) {
        var mh$ = gtk_list_item_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_list_view_get_type$MH,"gtk_list_view_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_list_view_get_type();
     * }
     */
    public static long gtk_list_view_get_type() {
        var mh$ = gtk_list_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_list_view_new$MH,"gtk_list_view_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_list_view_new(GtkSelectionModel* model, GtkListItemFactory* factory);
     * }
     */
    public static MemorySegment gtk_list_view_new(MemorySegment model, MemorySegment factory) {
        var mh$ = gtk_list_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_list_view_get_model$MH,"gtk_list_view_get_model");
    }
    /**
     * {@snippet :
     * GtkSelectionModel* gtk_list_view_get_model(GtkListView* self);
     * }
     */
    public static MemorySegment gtk_list_view_get_model(MemorySegment self) {
        var mh$ = gtk_list_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_list_view_set_model$MH,"gtk_list_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_list_view_set_model(GtkListView* self, GtkSelectionModel* model);
     * }
     */
    public static void gtk_list_view_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_list_view_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_set_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_list_view_set_factory$MH,"gtk_list_view_set_factory");
    }
    /**
     * {@snippet :
     * void gtk_list_view_set_factory(GtkListView* self, GtkListItemFactory* factory);
     * }
     */
    public static void gtk_list_view_set_factory(MemorySegment self, MemorySegment factory) {
        var mh$ = gtk_list_view_set_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_list_view_get_factory$MH,"gtk_list_view_get_factory");
    }
    /**
     * {@snippet :
     * GtkListItemFactory* gtk_list_view_get_factory(GtkListView* self);
     * }
     */
    public static MemorySegment gtk_list_view_get_factory(MemorySegment self) {
        var mh$ = gtk_list_view_get_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_set_show_separators$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_list_view_set_show_separators$MH,"gtk_list_view_set_show_separators");
    }
    /**
     * {@snippet :
     * void gtk_list_view_set_show_separators(GtkListView* self, gboolean show_separators);
     * }
     */
    public static void gtk_list_view_set_show_separators(MemorySegment self, int show_separators) {
        var mh$ = gtk_list_view_set_show_separators$MH();
        try {
            mh$.invokeExact(self, show_separators);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_get_show_separators$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_list_view_get_show_separators$MH,"gtk_list_view_get_show_separators");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_view_get_show_separators(GtkListView* self);
     * }
     */
    public static int gtk_list_view_get_show_separators(MemorySegment self) {
        var mh$ = gtk_list_view_get_show_separators$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_set_single_click_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_list_view_set_single_click_activate$MH,"gtk_list_view_set_single_click_activate");
    }
    /**
     * {@snippet :
     * void gtk_list_view_set_single_click_activate(GtkListView* self, gboolean single_click_activate);
     * }
     */
    public static void gtk_list_view_set_single_click_activate(MemorySegment self, int single_click_activate) {
        var mh$ = gtk_list_view_set_single_click_activate$MH();
        try {
            mh$.invokeExact(self, single_click_activate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_get_single_click_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_list_view_get_single_click_activate$MH,"gtk_list_view_get_single_click_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_view_get_single_click_activate(GtkListView* self);
     * }
     */
    public static int gtk_list_view_get_single_click_activate(MemorySegment self) {
        var mh$ = gtk_list_view_get_single_click_activate$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_set_enable_rubberband$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_list_view_set_enable_rubberband$MH,"gtk_list_view_set_enable_rubberband");
    }
    /**
     * {@snippet :
     * void gtk_list_view_set_enable_rubberband(GtkListView* self, gboolean enable_rubberband);
     * }
     */
    public static void gtk_list_view_set_enable_rubberband(MemorySegment self, int enable_rubberband) {
        var mh$ = gtk_list_view_set_enable_rubberband$MH();
        try {
            mh$.invokeExact(self, enable_rubberband);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_view_get_enable_rubberband$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_list_view_get_enable_rubberband$MH,"gtk_list_view_get_enable_rubberband");
    }
    /**
     * {@snippet :
     * gboolean gtk_list_view_get_enable_rubberband(GtkListView* self);
     * }
     */
    public static int gtk_list_view_get_enable_rubberband(MemorySegment self) {
        var mh$ = gtk_list_view_get_enable_rubberband$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkListView* GtkListView_autoptr;
     * }
     */
    public static final OfAddress GtkListView_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkListView_listautoptr;
     * }
     */
    public static final OfAddress GtkListView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkListView_slistautoptr;
     * }
     */
    public static final OfAddress GtkListView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkListView_queueautoptr;
     * }
     */
    public static final OfAddress GtkListView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_lock_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_lock_button_get_type$MH,"gtk_lock_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_lock_button_get_type();
     * }
     */
    public static long gtk_lock_button_get_type() {
        var mh$ = gtk_lock_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_lock_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_lock_button_new$MH,"gtk_lock_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_lock_button_new(GPermission* permission);
     * }
     */
    public static MemorySegment gtk_lock_button_new(MemorySegment permission) {
        var mh$ = gtk_lock_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_lock_button_get_permission$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_lock_button_get_permission$MH,"gtk_lock_button_get_permission");
    }
    /**
     * {@snippet :
     * GPermission* gtk_lock_button_get_permission(GtkLockButton* button);
     * }
     */
    public static MemorySegment gtk_lock_button_get_permission(MemorySegment button) {
        var mh$ = gtk_lock_button_get_permission$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_lock_button_set_permission$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_lock_button_set_permission$MH,"gtk_lock_button_set_permission");
    }
    /**
     * {@snippet :
     * void gtk_lock_button_set_permission(GtkLockButton* button, GPermission* permission);
     * }
     */
    public static void gtk_lock_button_set_permission(MemorySegment button, MemorySegment permission) {
        var mh$ = gtk_lock_button_set_permission$MH();
        try {
            mh$.invokeExact(button, permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_init$MH,"gtk_init");
    }
    /**
     * {@snippet :
     * void gtk_init();
     * }
     */
    public static void gtk_init() {
        var mh$ = gtk_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_init_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_init_check$MH,"gtk_init_check");
    }
    /**
     * {@snippet :
     * gboolean gtk_init_check();
     * }
     */
    public static int gtk_init_check() {
        var mh$ = gtk_init_check$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_is_initialized$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_is_initialized$MH,"gtk_is_initialized");
    }
    /**
     * {@snippet :
     * gboolean gtk_is_initialized();
     * }
     */
    public static int gtk_is_initialized() {
        var mh$ = gtk_is_initialized$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_disable_setlocale$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_disable_setlocale$MH,"gtk_disable_setlocale");
    }
    /**
     * {@snippet :
     * void gtk_disable_setlocale();
     * }
     */
    public static void gtk_disable_setlocale() {
        var mh$ = gtk_disable_setlocale$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_default_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_get_default_language$MH,"gtk_get_default_language");
    }
    /**
     * {@snippet :
     * PangoLanguage* gtk_get_default_language();
     * }
     */
    public static MemorySegment gtk_get_default_language() {
        var mh$ = gtk_get_default_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_locale_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_get_locale_direction$MH,"gtk_get_locale_direction");
    }
    /**
     * {@snippet :
     * GtkTextDirection gtk_get_locale_direction();
     * }
     */
    public static int gtk_get_locale_direction() {
        var mh$ = gtk_get_locale_direction$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_map_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_map_list_model_get_type$MH,"gtk_map_list_model_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_map_list_model_get_type();
     * }
     */
    public static long gtk_map_list_model_get_type() {
        var mh$ = gtk_map_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMapListModel* GtkMapListModel_autoptr;
     * }
     */
    public static final OfAddress GtkMapListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMapListModel_listautoptr;
     * }
     */
    public static final OfAddress GtkMapListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMapListModel_slistautoptr;
     * }
     */
    public static final OfAddress GtkMapListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMapListModel_queueautoptr;
     * }
     */
    public static final OfAddress GtkMapListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkMapListModelClass_autoptr;
     * }
     */
    public static final OfAddress GtkMapListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMapListModelClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMapListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMapListModelClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMapListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMapListModelClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMapListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_map_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_map_list_model_new$MH,"gtk_map_list_model_new");
    }
    /**
     * {@snippet :
     * GtkMapListModel* gtk_map_list_model_new(GListModel* model, GtkMapListModelMapFunc map_func, gpointer user_data, GDestroyNotify user_destroy);
     * }
     */
    public static MemorySegment gtk_map_list_model_new(MemorySegment model, MemorySegment map_func, MemorySegment user_data, MemorySegment user_destroy) {
        var mh$ = gtk_map_list_model_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, map_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_map_list_model_set_map_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_map_list_model_set_map_func$MH,"gtk_map_list_model_set_map_func");
    }
    /**
     * {@snippet :
     * void gtk_map_list_model_set_map_func(GtkMapListModel* self, GtkMapListModelMapFunc map_func, gpointer user_data, GDestroyNotify user_destroy);
     * }
     */
    public static void gtk_map_list_model_set_map_func(MemorySegment self, MemorySegment map_func, MemorySegment user_data, MemorySegment user_destroy) {
        var mh$ = gtk_map_list_model_set_map_func$MH();
        try {
            mh$.invokeExact(self, map_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_map_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_map_list_model_set_model$MH,"gtk_map_list_model_set_model");
    }
    /**
     * {@snippet :
     * void gtk_map_list_model_set_model(GtkMapListModel* self, GListModel* model);
     * }
     */
    public static void gtk_map_list_model_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_map_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_map_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_map_list_model_get_model$MH,"gtk_map_list_model_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_map_list_model_get_model(GtkMapListModel* self);
     * }
     */
    public static MemorySegment gtk_map_list_model_get_model(MemorySegment self) {
        var mh$ = gtk_map_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_map_list_model_has_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_map_list_model_has_map$MH,"gtk_map_list_model_has_map");
    }
    /**
     * {@snippet :
     * gboolean gtk_map_list_model_has_map(GtkMapListModel* self);
     * }
     */
    public static int gtk_map_list_model_has_map(MemorySegment self) {
        var mh$ = gtk_map_list_model_has_map$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_media_stream_get_type$MH,"gtk_media_stream_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_media_stream_get_type();
     * }
     */
    public static long gtk_media_stream_get_type() {
        var mh$ = gtk_media_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMediaStream* GtkMediaStream_autoptr;
     * }
     */
    public static final OfAddress GtkMediaStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMediaStream_listautoptr;
     * }
     */
    public static final OfAddress GtkMediaStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMediaStream_slistautoptr;
     * }
     */
    public static final OfAddress GtkMediaStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMediaStream_queueautoptr;
     * }
     */
    public static final OfAddress GtkMediaStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkMediaStreamClass* GtkMediaStreamClass_autoptr;
     * }
     */
    public static final OfAddress GtkMediaStreamClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMediaStreamClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMediaStreamClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMediaStreamClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMediaStreamClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMediaStreamClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMediaStreamClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_media_stream_is_prepared$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_media_stream_is_prepared$MH,"gtk_media_stream_is_prepared");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_is_prepared(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_is_prepared(MemorySegment self) {
        var mh$ = gtk_media_stream_is_prepared$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_media_stream_get_error$MH,"gtk_media_stream_get_error");
    }
    /**
     * {@snippet :
     * const GError* gtk_media_stream_get_error(GtkMediaStream* self);
     * }
     */
    public static MemorySegment gtk_media_stream_get_error(MemorySegment self) {
        var mh$ = gtk_media_stream_get_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_has_audio$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_media_stream_has_audio$MH,"gtk_media_stream_has_audio");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_has_audio(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_has_audio(MemorySegment self) {
        var mh$ = gtk_media_stream_has_audio$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_has_video$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_media_stream_has_video$MH,"gtk_media_stream_has_video");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_has_video(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_has_video(MemorySegment self) {
        var mh$ = gtk_media_stream_has_video$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_play$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_media_stream_play$MH,"gtk_media_stream_play");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_play(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_play(MemorySegment self) {
        var mh$ = gtk_media_stream_play$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_pause$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_media_stream_pause$MH,"gtk_media_stream_pause");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_pause(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_pause(MemorySegment self) {
        var mh$ = gtk_media_stream_pause$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_playing$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_media_stream_get_playing$MH,"gtk_media_stream_get_playing");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_get_playing(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_get_playing(MemorySegment self) {
        var mh$ = gtk_media_stream_get_playing$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_set_playing$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_media_stream_set_playing$MH,"gtk_media_stream_set_playing");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_set_playing(GtkMediaStream* self, gboolean playing);
     * }
     */
    public static void gtk_media_stream_set_playing(MemorySegment self, int playing) {
        var mh$ = gtk_media_stream_set_playing$MH();
        try {
            mh$.invokeExact(self, playing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_ended$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_media_stream_get_ended$MH,"gtk_media_stream_get_ended");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_get_ended(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_get_ended(MemorySegment self) {
        var mh$ = gtk_media_stream_get_ended$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_timestamp$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_media_stream_get_timestamp$MH,"gtk_media_stream_get_timestamp");
    }
    /**
     * {@snippet :
     * gint64 gtk_media_stream_get_timestamp(GtkMediaStream* self);
     * }
     */
    public static long gtk_media_stream_get_timestamp(MemorySegment self) {
        var mh$ = gtk_media_stream_get_timestamp$MH();
        try {
            return (long)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_media_stream_get_duration$MH,"gtk_media_stream_get_duration");
    }
    /**
     * {@snippet :
     * gint64 gtk_media_stream_get_duration(GtkMediaStream* self);
     * }
     */
    public static long gtk_media_stream_get_duration(MemorySegment self) {
        var mh$ = gtk_media_stream_get_duration$MH();
        try {
            return (long)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_is_seekable$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_media_stream_is_seekable$MH,"gtk_media_stream_is_seekable");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_is_seekable(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_is_seekable(MemorySegment self) {
        var mh$ = gtk_media_stream_is_seekable$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_is_seeking$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_media_stream_is_seeking$MH,"gtk_media_stream_is_seeking");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_is_seeking(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_is_seeking(MemorySegment self) {
        var mh$ = gtk_media_stream_is_seeking$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_media_stream_seek$MH,"gtk_media_stream_seek");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_seek(GtkMediaStream* self, gint64 timestamp);
     * }
     */
    public static void gtk_media_stream_seek(MemorySegment self, long timestamp) {
        var mh$ = gtk_media_stream_seek$MH();
        try {
            mh$.invokeExact(self, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_media_stream_get_loop$MH,"gtk_media_stream_get_loop");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_get_loop(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_get_loop(MemorySegment self) {
        var mh$ = gtk_media_stream_get_loop$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_set_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_media_stream_set_loop$MH,"gtk_media_stream_set_loop");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_set_loop(GtkMediaStream* self, gboolean loop);
     * }
     */
    public static void gtk_media_stream_set_loop(MemorySegment self, int loop) {
        var mh$ = gtk_media_stream_set_loop$MH();
        try {
            mh$.invokeExact(self, loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_muted$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_media_stream_get_muted$MH,"gtk_media_stream_get_muted");
    }
    /**
     * {@snippet :
     * gboolean gtk_media_stream_get_muted(GtkMediaStream* self);
     * }
     */
    public static int gtk_media_stream_get_muted(MemorySegment self) {
        var mh$ = gtk_media_stream_get_muted$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_set_muted$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_media_stream_set_muted$MH,"gtk_media_stream_set_muted");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_set_muted(GtkMediaStream* self, gboolean muted);
     * }
     */
    public static void gtk_media_stream_set_muted(MemorySegment self, int muted) {
        var mh$ = gtk_media_stream_set_muted$MH();
        try {
            mh$.invokeExact(self, muted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_get_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_media_stream_get_volume$MH,"gtk_media_stream_get_volume");
    }
    /**
     * {@snippet :
     * double gtk_media_stream_get_volume(GtkMediaStream* self);
     * }
     */
    public static double gtk_media_stream_get_volume(MemorySegment self) {
        var mh$ = gtk_media_stream_get_volume$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_set_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_media_stream_set_volume$MH,"gtk_media_stream_set_volume");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_set_volume(GtkMediaStream* self, double volume);
     * }
     */
    public static void gtk_media_stream_set_volume(MemorySegment self, double volume) {
        var mh$ = gtk_media_stream_set_volume$MH();
        try {
            mh$.invokeExact(self, volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_media_stream_realize$MH,"gtk_media_stream_realize");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_realize(GtkMediaStream* self, GdkSurface* surface);
     * }
     */
    public static void gtk_media_stream_realize(MemorySegment self, MemorySegment surface) {
        var mh$ = gtk_media_stream_realize$MH();
        try {
            mh$.invokeExact(self, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_media_stream_unrealize$MH,"gtk_media_stream_unrealize");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_unrealize(GtkMediaStream* self, GdkSurface* surface);
     * }
     */
    public static void gtk_media_stream_unrealize(MemorySegment self, MemorySegment surface) {
        var mh$ = gtk_media_stream_unrealize$MH();
        try {
            mh$.invokeExact(self, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_prepared$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_media_stream_prepared$MH,"gtk_media_stream_prepared");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_prepared(GtkMediaStream* self, gboolean has_audio, gboolean has_video, gboolean seekable, gint64 duration);
     * }
     */
    public static void gtk_media_stream_prepared(MemorySegment self, int has_audio, int has_video, int seekable, long duration) {
        var mh$ = gtk_media_stream_prepared$MH();
        try {
            mh$.invokeExact(self, has_audio, has_video, seekable, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_unprepared$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_media_stream_unprepared$MH,"gtk_media_stream_unprepared");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_unprepared(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_unprepared(MemorySegment self) {
        var mh$ = gtk_media_stream_unprepared$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_stream_prepared$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_media_stream_stream_prepared$MH,"gtk_media_stream_stream_prepared");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_stream_prepared(GtkMediaStream* self, gboolean has_audio, gboolean has_video, gboolean seekable, gint64 duration);
     * }
     */
    public static void gtk_media_stream_stream_prepared(MemorySegment self, int has_audio, int has_video, int seekable, long duration) {
        var mh$ = gtk_media_stream_stream_prepared$MH();
        try {
            mh$.invokeExact(self, has_audio, has_video, seekable, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_stream_unprepared$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_media_stream_stream_unprepared$MH,"gtk_media_stream_stream_unprepared");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_stream_unprepared(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_stream_unprepared(MemorySegment self) {
        var mh$ = gtk_media_stream_stream_unprepared$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_update$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_media_stream_update$MH,"gtk_media_stream_update");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_update(GtkMediaStream* self, gint64 timestamp);
     * }
     */
    public static void gtk_media_stream_update(MemorySegment self, long timestamp) {
        var mh$ = gtk_media_stream_update$MH();
        try {
            mh$.invokeExact(self, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_ended$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_media_stream_ended$MH,"gtk_media_stream_ended");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_ended(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_ended(MemorySegment self) {
        var mh$ = gtk_media_stream_ended$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_stream_ended$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_media_stream_stream_ended$MH,"gtk_media_stream_stream_ended");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_stream_ended(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_stream_ended(MemorySegment self) {
        var mh$ = gtk_media_stream_stream_ended$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_seek_success$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_media_stream_seek_success$MH,"gtk_media_stream_seek_success");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_seek_success(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_seek_success(MemorySegment self) {
        var mh$ = gtk_media_stream_seek_success$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_seek_failed$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_media_stream_seek_failed$MH,"gtk_media_stream_seek_failed");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_seek_failed(GtkMediaStream* self);
     * }
     */
    public static void gtk_media_stream_seek_failed(MemorySegment self) {
        var mh$ = gtk_media_stream_seek_failed$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_gerror$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_media_stream_gerror$MH,"gtk_media_stream_gerror");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_gerror(GtkMediaStream* self, GError* error);
     * }
     */
    public static void gtk_media_stream_gerror(MemorySegment self, MemorySegment error) {
        var mh$ = gtk_media_stream_gerror$MH();
        try {
            mh$.invokeExact(self, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_media_stream_error$MH,"gtk_media_stream_error");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_error(GtkMediaStream* self, GQuark domain, int code, char* format,...);
     * }
     */
    public static void gtk_media_stream_error(MemorySegment self, int domain, int code, MemorySegment format, Object... x4) {
        var mh$ = gtk_media_stream_error$MH();
        try {
            mh$.invokeExact(self, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_stream_error_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_media_stream_error_valist$MH,"gtk_media_stream_error_valist");
    }
    /**
     * {@snippet :
     * void gtk_media_stream_error_valist(GtkMediaStream* self, GQuark domain, int code, char* format, va_list args);
     * }
     */
    public static void gtk_media_stream_error_valist(MemorySegment self, int domain, int code, MemorySegment format, MemorySegment args) {
        var mh$ = gtk_media_stream_error_valist$MH();
        try {
            mh$.invokeExact(self, domain, code, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_controls_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_media_controls_get_type$MH,"gtk_media_controls_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_media_controls_get_type();
     * }
     */
    public static long gtk_media_controls_get_type() {
        var mh$ = gtk_media_controls_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMediaControls* GtkMediaControls_autoptr;
     * }
     */
    public static final OfAddress GtkMediaControls_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMediaControls_listautoptr;
     * }
     */
    public static final OfAddress GtkMediaControls_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMediaControls_slistautoptr;
     * }
     */
    public static final OfAddress GtkMediaControls_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMediaControls_queueautoptr;
     * }
     */
    public static final OfAddress GtkMediaControls_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkMediaControlsClass_autoptr;
     * }
     */
    public static final OfAddress GtkMediaControlsClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMediaControlsClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMediaControlsClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMediaControlsClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMediaControlsClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMediaControlsClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMediaControlsClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_media_controls_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_media_controls_new$MH,"gtk_media_controls_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_media_controls_new(GtkMediaStream* stream);
     * }
     */
    public static MemorySegment gtk_media_controls_new(MemorySegment stream) {
        var mh$ = gtk_media_controls_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_controls_get_media_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_media_controls_get_media_stream$MH,"gtk_media_controls_get_media_stream");
    }
    /**
     * {@snippet :
     * GtkMediaStream* gtk_media_controls_get_media_stream(GtkMediaControls* controls);
     * }
     */
    public static MemorySegment gtk_media_controls_get_media_stream(MemorySegment controls) {
        var mh$ = gtk_media_controls_get_media_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_controls_set_media_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_media_controls_set_media_stream$MH,"gtk_media_controls_set_media_stream");
    }
    /**
     * {@snippet :
     * void gtk_media_controls_set_media_stream(GtkMediaControls* controls, GtkMediaStream* stream);
     * }
     */
    public static void gtk_media_controls_set_media_stream(MemorySegment controls, MemorySegment stream) {
        var mh$ = gtk_media_controls_set_media_stream$MH();
        try {
            mh$.invokeExact(controls, stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_media_file_get_type$MH,"gtk_media_file_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_media_file_get_type();
     * }
     */
    public static long gtk_media_file_get_type() {
        var mh$ = gtk_media_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMediaFile* GtkMediaFile_autoptr;
     * }
     */
    public static final OfAddress GtkMediaFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMediaFile_listautoptr;
     * }
     */
    public static final OfAddress GtkMediaFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMediaFile_slistautoptr;
     * }
     */
    public static final OfAddress GtkMediaFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMediaFile_queueautoptr;
     * }
     */
    public static final OfAddress GtkMediaFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkMediaFileClass* GtkMediaFileClass_autoptr;
     * }
     */
    public static final OfAddress GtkMediaFileClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMediaFileClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMediaFileClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMediaFileClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMediaFileClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMediaFileClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMediaFileClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_media_file_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_media_file_new$MH,"gtk_media_file_new");
    }
    /**
     * {@snippet :
     * GtkMediaStream* gtk_media_file_new();
     * }
     */
    public static MemorySegment gtk_media_file_new() {
        var mh$ = gtk_media_file_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_new_for_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_media_file_new_for_filename$MH,"gtk_media_file_new_for_filename");
    }
    /**
     * {@snippet :
     * GtkMediaStream* gtk_media_file_new_for_filename(char* filename);
     * }
     */
    public static MemorySegment gtk_media_file_new_for_filename(MemorySegment filename) {
        var mh$ = gtk_media_file_new_for_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_new_for_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_media_file_new_for_resource$MH,"gtk_media_file_new_for_resource");
    }
    /**
     * {@snippet :
     * GtkMediaStream* gtk_media_file_new_for_resource(char* resource_path);
     * }
     */
    public static MemorySegment gtk_media_file_new_for_resource(MemorySegment resource_path) {
        var mh$ = gtk_media_file_new_for_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_new_for_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_media_file_new_for_file$MH,"gtk_media_file_new_for_file");
    }
    /**
     * {@snippet :
     * GtkMediaStream* gtk_media_file_new_for_file(GFile* file);
     * }
     */
    public static MemorySegment gtk_media_file_new_for_file(MemorySegment file) {
        var mh$ = gtk_media_file_new_for_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_new_for_input_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_media_file_new_for_input_stream$MH,"gtk_media_file_new_for_input_stream");
    }
    /**
     * {@snippet :
     * GtkMediaStream* gtk_media_file_new_for_input_stream(GInputStream* stream);
     * }
     */
    public static MemorySegment gtk_media_file_new_for_input_stream(MemorySegment stream) {
        var mh$ = gtk_media_file_new_for_input_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_media_file_clear$MH,"gtk_media_file_clear");
    }
    /**
     * {@snippet :
     * void gtk_media_file_clear(GtkMediaFile* self);
     * }
     */
    public static void gtk_media_file_clear(MemorySegment self) {
        var mh$ = gtk_media_file_clear$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_media_file_set_filename$MH,"gtk_media_file_set_filename");
    }
    /**
     * {@snippet :
     * void gtk_media_file_set_filename(GtkMediaFile* self, char* filename);
     * }
     */
    public static void gtk_media_file_set_filename(MemorySegment self, MemorySegment filename) {
        var mh$ = gtk_media_file_set_filename$MH();
        try {
            mh$.invokeExact(self, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_set_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_media_file_set_resource$MH,"gtk_media_file_set_resource");
    }
    /**
     * {@snippet :
     * void gtk_media_file_set_resource(GtkMediaFile* self, char* resource_path);
     * }
     */
    public static void gtk_media_file_set_resource(MemorySegment self, MemorySegment resource_path) {
        var mh$ = gtk_media_file_set_resource$MH();
        try {
            mh$.invokeExact(self, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_media_file_set_file$MH,"gtk_media_file_set_file");
    }
    /**
     * {@snippet :
     * void gtk_media_file_set_file(GtkMediaFile* self, GFile* file);
     * }
     */
    public static void gtk_media_file_set_file(MemorySegment self, MemorySegment file) {
        var mh$ = gtk_media_file_set_file$MH();
        try {
            mh$.invokeExact(self, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_media_file_get_file$MH,"gtk_media_file_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_media_file_get_file(GtkMediaFile* self);
     * }
     */
    public static MemorySegment gtk_media_file_get_file(MemorySegment self) {
        var mh$ = gtk_media_file_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_set_input_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_media_file_set_input_stream$MH,"gtk_media_file_set_input_stream");
    }
    /**
     * {@snippet :
     * void gtk_media_file_set_input_stream(GtkMediaFile* self, GInputStream* stream);
     * }
     */
    public static void gtk_media_file_set_input_stream(MemorySegment self, MemorySegment stream) {
        var mh$ = gtk_media_file_set_input_stream$MH();
        try {
            mh$.invokeExact(self, stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_media_file_get_input_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_media_file_get_input_stream$MH,"gtk_media_file_get_input_stream");
    }
    /**
     * {@snippet :
     * GInputStream* gtk_media_file_get_input_stream(GtkMediaFile* self);
     * }
     */
    public static MemorySegment gtk_media_file_get_input_stream(MemorySegment self) {
        var mh$ = gtk_media_file_get_input_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_popover_get_type$MH,"gtk_popover_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_popover_get_type();
     * }
     */
    public static long gtk_popover_get_type() {
        var mh$ = gtk_popover_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_popover_new$MH,"gtk_popover_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_popover_new();
     * }
     */
    public static MemorySegment gtk_popover_new() {
        var mh$ = gtk_popover_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_popover_set_child$MH,"gtk_popover_set_child");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_child(GtkPopover* popover, GtkWidget* child);
     * }
     */
    public static void gtk_popover_set_child(MemorySegment popover, MemorySegment child) {
        var mh$ = gtk_popover_set_child$MH();
        try {
            mh$.invokeExact(popover, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_popover_get_child$MH,"gtk_popover_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_popover_get_child(GtkPopover* popover);
     * }
     */
    public static MemorySegment gtk_popover_get_child(MemorySegment popover) {
        var mh$ = gtk_popover_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_pointing_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_popover_set_pointing_to$MH,"gtk_popover_set_pointing_to");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_pointing_to(GtkPopover* popover, const GdkRectangle* rect);
     * }
     */
    public static void gtk_popover_set_pointing_to(MemorySegment popover, MemorySegment rect) {
        var mh$ = gtk_popover_set_pointing_to$MH();
        try {
            mh$.invokeExact(popover, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_pointing_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_popover_get_pointing_to$MH,"gtk_popover_get_pointing_to");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_get_pointing_to(GtkPopover* popover, GdkRectangle* rect);
     * }
     */
    public static int gtk_popover_get_pointing_to(MemorySegment popover, MemorySegment rect) {
        var mh$ = gtk_popover_get_pointing_to$MH();
        try {
            return (int)mh$.invokeExact(popover, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_popover_set_position$MH,"gtk_popover_set_position");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_position(GtkPopover* popover, GtkPositionType position);
     * }
     */
    public static void gtk_popover_set_position(MemorySegment popover, int position) {
        var mh$ = gtk_popover_set_position$MH();
        try {
            mh$.invokeExact(popover, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_popover_get_position$MH,"gtk_popover_get_position");
    }
    /**
     * {@snippet :
     * GtkPositionType gtk_popover_get_position(GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_position(MemorySegment popover) {
        var mh$ = gtk_popover_get_position$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_autohide$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_popover_set_autohide$MH,"gtk_popover_set_autohide");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_autohide(GtkPopover* popover, gboolean autohide);
     * }
     */
    public static void gtk_popover_set_autohide(MemorySegment popover, int autohide) {
        var mh$ = gtk_popover_set_autohide$MH();
        try {
            mh$.invokeExact(popover, autohide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_autohide$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_popover_get_autohide$MH,"gtk_popover_get_autohide");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_get_autohide(GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_autohide(MemorySegment popover) {
        var mh$ = gtk_popover_get_autohide$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_has_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_popover_set_has_arrow$MH,"gtk_popover_set_has_arrow");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_has_arrow(GtkPopover* popover, gboolean has_arrow);
     * }
     */
    public static void gtk_popover_set_has_arrow(MemorySegment popover, int has_arrow) {
        var mh$ = gtk_popover_set_has_arrow$MH();
        try {
            mh$.invokeExact(popover, has_arrow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_has_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_popover_get_has_arrow$MH,"gtk_popover_get_has_arrow");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_get_has_arrow(GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_has_arrow(MemorySegment popover) {
        var mh$ = gtk_popover_get_has_arrow$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_popover_set_mnemonics_visible$MH,"gtk_popover_set_mnemonics_visible");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_mnemonics_visible(GtkPopover* popover, gboolean mnemonics_visible);
     * }
     */
    public static void gtk_popover_set_mnemonics_visible(MemorySegment popover, int mnemonics_visible) {
        var mh$ = gtk_popover_set_mnemonics_visible$MH();
        try {
            mh$.invokeExact(popover, mnemonics_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_popover_get_mnemonics_visible$MH,"gtk_popover_get_mnemonics_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_get_mnemonics_visible(GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_mnemonics_visible(MemorySegment popover) {
        var mh$ = gtk_popover_get_mnemonics_visible$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_popover_popup$MH,"gtk_popover_popup");
    }
    /**
     * {@snippet :
     * void gtk_popover_popup(GtkPopover* popover);
     * }
     */
    public static void gtk_popover_popup(MemorySegment popover) {
        var mh$ = gtk_popover_popup$MH();
        try {
            mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_popover_popdown$MH,"gtk_popover_popdown");
    }
    /**
     * {@snippet :
     * void gtk_popover_popdown(GtkPopover* popover);
     * }
     */
    public static void gtk_popover_popdown(MemorySegment popover) {
        var mh$ = gtk_popover_popdown$MH();
        try {
            mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_popover_set_offset$MH,"gtk_popover_set_offset");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_offset(GtkPopover* popover, int x_offset, int y_offset);
     * }
     */
    public static void gtk_popover_set_offset(MemorySegment popover, int x_offset, int y_offset) {
        var mh$ = gtk_popover_set_offset$MH();
        try {
            mh$.invokeExact(popover, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_popover_get_offset$MH,"gtk_popover_get_offset");
    }
    /**
     * {@snippet :
     * void gtk_popover_get_offset(GtkPopover* popover, int* x_offset, int* y_offset);
     * }
     */
    public static void gtk_popover_get_offset(MemorySegment popover, MemorySegment x_offset, MemorySegment y_offset) {
        var mh$ = gtk_popover_get_offset$MH();
        try {
            mh$.invokeExact(popover, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_cascade_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_popover_set_cascade_popdown$MH,"gtk_popover_set_cascade_popdown");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_cascade_popdown(GtkPopover* popover, gboolean cascade_popdown);
     * }
     */
    public static void gtk_popover_set_cascade_popdown(MemorySegment popover, int cascade_popdown) {
        var mh$ = gtk_popover_set_cascade_popdown$MH();
        try {
            mh$.invokeExact(popover, cascade_popdown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_cascade_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_popover_get_cascade_popdown$MH,"gtk_popover_get_cascade_popdown");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_get_cascade_popdown(GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_cascade_popdown(MemorySegment popover) {
        var mh$ = gtk_popover_get_cascade_popdown$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_popover_set_default_widget$MH,"gtk_popover_set_default_widget");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_default_widget(GtkPopover* popover, GtkWidget* widget);
     * }
     */
    public static void gtk_popover_set_default_widget(MemorySegment popover, MemorySegment widget) {
        var mh$ = gtk_popover_set_default_widget$MH();
        try {
            mh$.invokeExact(popover, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_present$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_popover_present$MH,"gtk_popover_present");
    }
    /**
     * {@snippet :
     * void gtk_popover_present(GtkPopover* popover);
     * }
     */
    public static void gtk_popover_present(MemorySegment popover) {
        var mh$ = gtk_popover_present$MH();
        try {
            mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_menu_button_get_type$MH,"gtk_menu_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_menu_button_get_type();
     * }
     */
    public static long gtk_menu_button_get_type() {
        var mh$ = gtk_menu_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_menu_button_new$MH,"gtk_menu_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_menu_button_new();
     * }
     */
    public static MemorySegment gtk_menu_button_new() {
        var mh$ = gtk_menu_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_popover$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_menu_button_set_popover$MH,"gtk_menu_button_set_popover");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_popover(GtkMenuButton* menu_button, GtkWidget* popover);
     * }
     */
    public static void gtk_menu_button_set_popover(MemorySegment menu_button, MemorySegment popover) {
        var mh$ = gtk_menu_button_set_popover$MH();
        try {
            mh$.invokeExact(menu_button, popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_popover$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_menu_button_get_popover$MH,"gtk_menu_button_get_popover");
    }
    /**
     * {@snippet :
     * GtkPopover* gtk_menu_button_get_popover(GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_popover(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_popover$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_menu_button_set_direction$MH,"gtk_menu_button_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_direction(GtkMenuButton* menu_button, GtkArrowType direction);
     * }
     */
    public static void gtk_menu_button_set_direction(MemorySegment menu_button, int direction) {
        var mh$ = gtk_menu_button_set_direction$MH();
        try {
            mh$.invokeExact(menu_button, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_menu_button_get_direction$MH,"gtk_menu_button_get_direction");
    }
    /**
     * {@snippet :
     * GtkArrowType gtk_menu_button_get_direction(GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_direction(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_direction$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_menu_button_set_menu_model$MH,"gtk_menu_button_set_menu_model");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_menu_model(GtkMenuButton* menu_button, GMenuModel* menu_model);
     * }
     */
    public static void gtk_menu_button_set_menu_model(MemorySegment menu_button, MemorySegment menu_model) {
        var mh$ = gtk_menu_button_set_menu_model$MH();
        try {
            mh$.invokeExact(menu_button, menu_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_menu_button_get_menu_model$MH,"gtk_menu_button_get_menu_model");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_menu_button_get_menu_model(GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_menu_model(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_menu_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_menu_button_set_icon_name$MH,"gtk_menu_button_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_icon_name(GtkMenuButton* menu_button, char* icon_name);
     * }
     */
    public static void gtk_menu_button_set_icon_name(MemorySegment menu_button, MemorySegment icon_name) {
        var mh$ = gtk_menu_button_set_icon_name$MH();
        try {
            mh$.invokeExact(menu_button, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_menu_button_get_icon_name$MH,"gtk_menu_button_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_menu_button_get_icon_name(GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_icon_name(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_always_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_menu_button_set_always_show_arrow$MH,"gtk_menu_button_set_always_show_arrow");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_always_show_arrow(GtkMenuButton* menu_button, gboolean always_show_arrow);
     * }
     */
    public static void gtk_menu_button_set_always_show_arrow(MemorySegment menu_button, int always_show_arrow) {
        var mh$ = gtk_menu_button_set_always_show_arrow$MH();
        try {
            mh$.invokeExact(menu_button, always_show_arrow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_always_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_menu_button_get_always_show_arrow$MH,"gtk_menu_button_get_always_show_arrow");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_button_get_always_show_arrow(GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_always_show_arrow(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_always_show_arrow$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_menu_button_set_label$MH,"gtk_menu_button_set_label");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_label(GtkMenuButton* menu_button, char* label);
     * }
     */
    public static void gtk_menu_button_set_label(MemorySegment menu_button, MemorySegment label) {
        var mh$ = gtk_menu_button_set_label$MH();
        try {
            mh$.invokeExact(menu_button, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_menu_button_get_label$MH,"gtk_menu_button_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_menu_button_get_label(GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_label(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_menu_button_set_use_underline$MH,"gtk_menu_button_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_use_underline(GtkMenuButton* menu_button, gboolean use_underline);
     * }
     */
    public static void gtk_menu_button_set_use_underline(MemorySegment menu_button, int use_underline) {
        var mh$ = gtk_menu_button_set_use_underline$MH();
        try {
            mh$.invokeExact(menu_button, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_menu_button_get_use_underline$MH,"gtk_menu_button_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_button_get_use_underline(GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_use_underline(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_menu_button_set_has_frame$MH,"gtk_menu_button_set_has_frame");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_has_frame(GtkMenuButton* menu_button, gboolean has_frame);
     * }
     */
    public static void gtk_menu_button_set_has_frame(MemorySegment menu_button, int has_frame) {
        var mh$ = gtk_menu_button_set_has_frame$MH();
        try {
            mh$.invokeExact(menu_button, has_frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_menu_button_get_has_frame$MH,"gtk_menu_button_get_has_frame");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_button_get_has_frame(GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_has_frame(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_has_frame$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_menu_button_popup$MH,"gtk_menu_button_popup");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_popup(GtkMenuButton* menu_button);
     * }
     */
    public static void gtk_menu_button_popup(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_popup$MH();
        try {
            mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_menu_button_popdown$MH,"gtk_menu_button_popdown");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_popdown(GtkMenuButton* menu_button);
     * }
     */
    public static void gtk_menu_button_popdown(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_popdown$MH();
        try {
            mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_create_popup_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_menu_button_set_create_popup_func$MH,"gtk_menu_button_set_create_popup_func");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_create_popup_func(GtkMenuButton* menu_button, GtkMenuButtonCreatePopupFunc func, gpointer user_data, GDestroyNotify destroy_notify);
     * }
     */
    public static void gtk_menu_button_set_create_popup_func(MemorySegment menu_button, MemorySegment func, MemorySegment user_data, MemorySegment destroy_notify) {
        var mh$ = gtk_menu_button_set_create_popup_func$MH();
        try {
            mh$.invokeExact(menu_button, func, user_data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_primary$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_menu_button_set_primary$MH,"gtk_menu_button_set_primary");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_primary(GtkMenuButton* menu_button, gboolean primary);
     * }
     */
    public static void gtk_menu_button_set_primary(MemorySegment menu_button, int primary) {
        var mh$ = gtk_menu_button_set_primary$MH();
        try {
            mh$.invokeExact(menu_button, primary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_primary$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_menu_button_get_primary$MH,"gtk_menu_button_get_primary");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_button_get_primary(GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_primary(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_primary$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_menu_button_set_child$MH,"gtk_menu_button_set_child");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_child(GtkMenuButton* menu_button, GtkWidget* child);
     * }
     */
    public static void gtk_menu_button_set_child(MemorySegment menu_button, MemorySegment child) {
        var mh$ = gtk_menu_button_set_child$MH();
        try {
            mh$.invokeExact(menu_button, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_menu_button_get_child$MH,"gtk_menu_button_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_menu_button_get_child(GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_child(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONS_NONE = 0;
     * }
     */
    public static int GTK_BUTTONS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONS_OK = 1;
     * }
     */
    public static int GTK_BUTTONS_OK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONS_CLOSE = 2;
     * }
     */
    public static int GTK_BUTTONS_CLOSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONS_CANCEL = 3;
     * }
     */
    public static int GTK_BUTTONS_CANCEL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONS_YES_NO = 4;
     * }
     */
    public static int GTK_BUTTONS_YES_NO() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONS_OK_CANCEL = 5;
     * }
     */
    public static int GTK_BUTTONS_OK_CANCEL() {
        return (int)5L;
    }
    public static MethodHandle gtk_message_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_message_dialog_get_type$MH,"gtk_message_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_message_dialog_get_type();
     * }
     */
    public static long gtk_message_dialog_get_type() {
        var mh$ = gtk_message_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_message_dialog_new$MH,"gtk_message_dialog_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_message_dialog_new(GtkWindow* parent, GtkDialogFlags flags, GtkMessageType type, GtkButtonsType buttons, char* message_format,...);
     * }
     */
    public static MemorySegment gtk_message_dialog_new(MemorySegment parent, int flags, int type, int buttons, MemorySegment message_format, Object... x5) {
        var mh$ = gtk_message_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, flags, type, buttons, message_format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_new_with_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_message_dialog_new_with_markup$MH,"gtk_message_dialog_new_with_markup");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_message_dialog_new_with_markup(GtkWindow* parent, GtkDialogFlags flags, GtkMessageType type, GtkButtonsType buttons, char* message_format,...);
     * }
     */
    public static MemorySegment gtk_message_dialog_new_with_markup(MemorySegment parent, int flags, int type, int buttons, MemorySegment message_format, Object... x5) {
        var mh$ = gtk_message_dialog_new_with_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, flags, type, buttons, message_format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_message_dialog_set_markup$MH,"gtk_message_dialog_set_markup");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_set_markup(GtkMessageDialog* message_dialog, char* str);
     * }
     */
    public static void gtk_message_dialog_set_markup(MemorySegment message_dialog, MemorySegment str) {
        var mh$ = gtk_message_dialog_set_markup$MH();
        try {
            mh$.invokeExact(message_dialog, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_format_secondary_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_message_dialog_format_secondary_text$MH,"gtk_message_dialog_format_secondary_text");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_format_secondary_text(GtkMessageDialog* message_dialog, char* message_format,...);
     * }
     */
    public static void gtk_message_dialog_format_secondary_text(MemorySegment message_dialog, MemorySegment message_format, Object... x2) {
        var mh$ = gtk_message_dialog_format_secondary_text$MH();
        try {
            mh$.invokeExact(message_dialog, message_format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_format_secondary_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_message_dialog_format_secondary_markup$MH,"gtk_message_dialog_format_secondary_markup");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_format_secondary_markup(GtkMessageDialog* message_dialog, char* message_format,...);
     * }
     */
    public static void gtk_message_dialog_format_secondary_markup(MemorySegment message_dialog, MemorySegment message_format, Object... x2) {
        var mh$ = gtk_message_dialog_format_secondary_markup$MH();
        try {
            mh$.invokeExact(message_dialog, message_format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_get_message_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_message_dialog_get_message_area$MH,"gtk_message_dialog_get_message_area");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_message_dialog_get_message_area(GtkMessageDialog* message_dialog);
     * }
     */
    public static MemorySegment gtk_message_dialog_get_message_area(MemorySegment message_dialog) {
        var mh$ = gtk_message_dialog_get_message_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message_dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_mount_operation_get_type$MH,"gtk_mount_operation_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_mount_operation_get_type();
     * }
     */
    public static long gtk_mount_operation_get_type() {
        var mh$ = gtk_mount_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_mount_operation_new$MH,"gtk_mount_operation_new");
    }
    /**
     * {@snippet :
     * GMountOperation* gtk_mount_operation_new(GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_mount_operation_new(MemorySegment parent) {
        var mh$ = gtk_mount_operation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_is_showing$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_mount_operation_is_showing$MH,"gtk_mount_operation_is_showing");
    }
    /**
     * {@snippet :
     * gboolean gtk_mount_operation_is_showing(GtkMountOperation* op);
     * }
     */
    public static int gtk_mount_operation_is_showing(MemorySegment op) {
        var mh$ = gtk_mount_operation_is_showing$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_mount_operation_set_parent$MH,"gtk_mount_operation_set_parent");
    }
    /**
     * {@snippet :
     * void gtk_mount_operation_set_parent(GtkMountOperation* op, GtkWindow* parent);
     * }
     */
    public static void gtk_mount_operation_set_parent(MemorySegment op, MemorySegment parent) {
        var mh$ = gtk_mount_operation_set_parent$MH();
        try {
            mh$.invokeExact(op, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_mount_operation_get_parent$MH,"gtk_mount_operation_get_parent");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_mount_operation_get_parent(GtkMountOperation* op);
     * }
     */
    public static MemorySegment gtk_mount_operation_get_parent(MemorySegment op) {
        var mh$ = gtk_mount_operation_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_set_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_mount_operation_set_display$MH,"gtk_mount_operation_set_display");
    }
    /**
     * {@snippet :
     * void gtk_mount_operation_set_display(GtkMountOperation* op, GdkDisplay* display);
     * }
     */
    public static void gtk_mount_operation_set_display(MemorySegment op, MemorySegment display) {
        var mh$ = gtk_mount_operation_set_display$MH();
        try {
            mh$.invokeExact(op, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_mount_operation_get_display$MH,"gtk_mount_operation_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_mount_operation_get_display(GtkMountOperation* op);
     * }
     */
    public static MemorySegment gtk_mount_operation_get_display(MemorySegment op) {
        var mh$ = gtk_mount_operation_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_multi_filter_get_type$MH,"gtk_multi_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_multi_filter_get_type();
     * }
     */
    public static long gtk_multi_filter_get_type() {
        var mh$ = gtk_multi_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMultiFilter* GtkMultiFilter_autoptr;
     * }
     */
    public static final OfAddress GtkMultiFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMultiFilter_listautoptr;
     * }
     */
    public static final OfAddress GtkMultiFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMultiFilter_slistautoptr;
     * }
     */
    public static final OfAddress GtkMultiFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMultiFilter_queueautoptr;
     * }
     */
    public static final OfAddress GtkMultiFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkMultiFilterClass* GtkMultiFilterClass_autoptr;
     * }
     */
    public static final OfAddress GtkMultiFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMultiFilterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMultiFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMultiFilterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMultiFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMultiFilterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMultiFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_multi_filter_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_multi_filter_append$MH,"gtk_multi_filter_append");
    }
    /**
     * {@snippet :
     * void gtk_multi_filter_append(GtkMultiFilter* self, GtkFilter* filter);
     * }
     */
    public static void gtk_multi_filter_append(MemorySegment self, MemorySegment filter) {
        var mh$ = gtk_multi_filter_append$MH();
        try {
            mh$.invokeExact(self, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_filter_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_multi_filter_remove$MH,"gtk_multi_filter_remove");
    }
    /**
     * {@snippet :
     * void gtk_multi_filter_remove(GtkMultiFilter* self, guint position);
     * }
     */
    public static void gtk_multi_filter_remove(MemorySegment self, int position) {
        var mh$ = gtk_multi_filter_remove$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_any_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_any_filter_get_type$MH,"gtk_any_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_any_filter_get_type();
     * }
     */
    public static long gtk_any_filter_get_type() {
        var mh$ = gtk_any_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkAnyFilter* GtkAnyFilter_autoptr;
     * }
     */
    public static final OfAddress GtkAnyFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAnyFilter_listautoptr;
     * }
     */
    public static final OfAddress GtkAnyFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAnyFilter_slistautoptr;
     * }
     */
    public static final OfAddress GtkAnyFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAnyFilter_queueautoptr;
     * }
     */
    public static final OfAddress GtkAnyFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkAnyFilterClass* GtkAnyFilterClass_autoptr;
     * }
     */
    public static final OfAddress GtkAnyFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAnyFilterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkAnyFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAnyFilterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkAnyFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAnyFilterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkAnyFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_any_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_any_filter_new$MH,"gtk_any_filter_new");
    }
    /**
     * {@snippet :
     * GtkAnyFilter* gtk_any_filter_new();
     * }
     */
    public static MemorySegment gtk_any_filter_new() {
        var mh$ = gtk_any_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_every_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_every_filter_get_type$MH,"gtk_every_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_every_filter_get_type();
     * }
     */
    public static long gtk_every_filter_get_type() {
        var mh$ = gtk_every_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkEveryFilter* GtkEveryFilter_autoptr;
     * }
     */
    public static final OfAddress GtkEveryFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkEveryFilter_listautoptr;
     * }
     */
    public static final OfAddress GtkEveryFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkEveryFilter_slistautoptr;
     * }
     */
    public static final OfAddress GtkEveryFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkEveryFilter_queueautoptr;
     * }
     */
    public static final OfAddress GtkEveryFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkEveryFilterClass* GtkEveryFilterClass_autoptr;
     * }
     */
    public static final OfAddress GtkEveryFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkEveryFilterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkEveryFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkEveryFilterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkEveryFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkEveryFilterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkEveryFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_every_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_every_filter_new$MH,"gtk_every_filter_new");
    }
    /**
     * {@snippet :
     * GtkEveryFilter* gtk_every_filter_new();
     * }
     */
    public static MemorySegment gtk_every_filter_new() {
        var mh$ = gtk_every_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_multi_selection_get_type$MH,"gtk_multi_selection_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_multi_selection_get_type();
     * }
     */
    public static long gtk_multi_selection_get_type() {
        var mh$ = gtk_multi_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMultiSelection* GtkMultiSelection_autoptr;
     * }
     */
    public static final OfAddress GtkMultiSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMultiSelection_listautoptr;
     * }
     */
    public static final OfAddress GtkMultiSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMultiSelection_slistautoptr;
     * }
     */
    public static final OfAddress GtkMultiSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMultiSelection_queueautoptr;
     * }
     */
    public static final OfAddress GtkMultiSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkMultiSelectionClass_autoptr;
     * }
     */
    public static final OfAddress GtkMultiSelectionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMultiSelectionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMultiSelectionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMultiSelectionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMultiSelectionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMultiSelectionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMultiSelectionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_multi_selection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_multi_selection_new$MH,"gtk_multi_selection_new");
    }
    /**
     * {@snippet :
     * GtkMultiSelection* gtk_multi_selection_new(GListModel* model);
     * }
     */
    public static MemorySegment gtk_multi_selection_new(MemorySegment model) {
        var mh$ = gtk_multi_selection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_selection_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_multi_selection_get_model$MH,"gtk_multi_selection_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_multi_selection_get_model(GtkMultiSelection* self);
     * }
     */
    public static MemorySegment gtk_multi_selection_get_model(MemorySegment self) {
        var mh$ = gtk_multi_selection_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_selection_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_multi_selection_set_model$MH,"gtk_multi_selection_set_model");
    }
    /**
     * {@snippet :
     * void gtk_multi_selection_set_model(GtkMultiSelection* self, GListModel* model);
     * }
     */
    public static void gtk_multi_selection_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_multi_selection_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_multi_sorter_get_type$MH,"gtk_multi_sorter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_multi_sorter_get_type();
     * }
     */
    public static long gtk_multi_sorter_get_type() {
        var mh$ = gtk_multi_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMultiSorter* GtkMultiSorter_autoptr;
     * }
     */
    public static final OfAddress GtkMultiSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMultiSorter_listautoptr;
     * }
     */
    public static final OfAddress GtkMultiSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMultiSorter_slistautoptr;
     * }
     */
    public static final OfAddress GtkMultiSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMultiSorter_queueautoptr;
     * }
     */
    public static final OfAddress GtkMultiSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkMultiSorterClass_autoptr;
     * }
     */
    public static final OfAddress GtkMultiSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMultiSorterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMultiSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMultiSorterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMultiSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMultiSorterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMultiSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_multi_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_multi_sorter_new$MH,"gtk_multi_sorter_new");
    }
    /**
     * {@snippet :
     * GtkMultiSorter* gtk_multi_sorter_new();
     * }
     */
    public static MemorySegment gtk_multi_sorter_new() {
        var mh$ = gtk_multi_sorter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_sorter_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_multi_sorter_append$MH,"gtk_multi_sorter_append");
    }
    /**
     * {@snippet :
     * void gtk_multi_sorter_append(GtkMultiSorter* self, GtkSorter* sorter);
     * }
     */
    public static void gtk_multi_sorter_append(MemorySegment self, MemorySegment sorter) {
        var mh$ = gtk_multi_sorter_append$MH();
        try {
            mh$.invokeExact(self, sorter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_multi_sorter_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_multi_sorter_remove$MH,"gtk_multi_sorter_remove");
    }
    /**
     * {@snippet :
     * void gtk_multi_sorter_remove(GtkMultiSorter* self, guint position);
     * }
     */
    public static void gtk_multi_sorter_remove(MemorySegment self, int position) {
        var mh$ = gtk_multi_sorter_remove$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_native_get_type$MH,"gtk_native_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_native_get_type();
     * }
     */
    public static long gtk_native_get_type() {
        var mh$ = gtk_native_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNative* GtkNative_autoptr;
     * }
     */
    public static final OfAddress GtkNative_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNative_listautoptr;
     * }
     */
    public static final OfAddress GtkNative_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNative_slistautoptr;
     * }
     */
    public static final OfAddress GtkNative_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNative_queueautoptr;
     * }
     */
    public static final OfAddress GtkNative_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_native_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_native_realize$MH,"gtk_native_realize");
    }
    /**
     * {@snippet :
     * void gtk_native_realize(GtkNative* self);
     * }
     */
    public static void gtk_native_realize(MemorySegment self) {
        var mh$ = gtk_native_realize$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_native_unrealize$MH,"gtk_native_unrealize");
    }
    /**
     * {@snippet :
     * void gtk_native_unrealize(GtkNative* self);
     * }
     */
    public static void gtk_native_unrealize(MemorySegment self) {
        var mh$ = gtk_native_unrealize$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_get_for_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_native_get_for_surface$MH,"gtk_native_get_for_surface");
    }
    /**
     * {@snippet :
     * GtkNative* gtk_native_get_for_surface(GdkSurface* surface);
     * }
     */
    public static MemorySegment gtk_native_get_for_surface(MemorySegment surface) {
        var mh$ = gtk_native_get_for_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_native_get_surface$MH,"gtk_native_get_surface");
    }
    /**
     * {@snippet :
     * GdkSurface* gtk_native_get_surface(GtkNative* self);
     * }
     */
    public static MemorySegment gtk_native_get_surface(MemorySegment self) {
        var mh$ = gtk_native_get_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_get_renderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_native_get_renderer$MH,"gtk_native_get_renderer");
    }
    /**
     * {@snippet :
     * GskRenderer* gtk_native_get_renderer(GtkNative* self);
     * }
     */
    public static MemorySegment gtk_native_get_renderer(MemorySegment self) {
        var mh$ = gtk_native_get_renderer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_get_surface_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_native_get_surface_transform$MH,"gtk_native_get_surface_transform");
    }
    /**
     * {@snippet :
     * void gtk_native_get_surface_transform(GtkNative* self, double* x, double* y);
     * }
     */
    public static void gtk_native_get_surface_transform(MemorySegment self, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_native_get_surface_transform$MH();
        try {
            mh$.invokeExact(self, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_no_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_no_selection_get_type$MH,"gtk_no_selection_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_no_selection_get_type();
     * }
     */
    public static long gtk_no_selection_get_type() {
        var mh$ = gtk_no_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNoSelection* GtkNoSelection_autoptr;
     * }
     */
    public static final OfAddress GtkNoSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNoSelection_listautoptr;
     * }
     */
    public static final OfAddress GtkNoSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNoSelection_slistautoptr;
     * }
     */
    public static final OfAddress GtkNoSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNoSelection_queueautoptr;
     * }
     */
    public static final OfAddress GtkNoSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkNoSelectionClass_autoptr;
     * }
     */
    public static final OfAddress GtkNoSelectionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNoSelectionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNoSelectionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNoSelectionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNoSelectionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNoSelectionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNoSelectionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_no_selection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_no_selection_new$MH,"gtk_no_selection_new");
    }
    /**
     * {@snippet :
     * GtkNoSelection* gtk_no_selection_new(GListModel* model);
     * }
     */
    public static MemorySegment gtk_no_selection_new(MemorySegment model) {
        var mh$ = gtk_no_selection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_no_selection_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_no_selection_get_model$MH,"gtk_no_selection_get_model");
    }
    /**
     * {@snippet :
     * GListModel* gtk_no_selection_get_model(GtkNoSelection* self);
     * }
     */
    public static MemorySegment gtk_no_selection_get_model(MemorySegment self) {
        var mh$ = gtk_no_selection_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_no_selection_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_no_selection_set_model$MH,"gtk_no_selection_set_model");
    }
    /**
     * {@snippet :
     * void gtk_no_selection_set_model(GtkNoSelection* self, GListModel* model);
     * }
     */
    public static void gtk_no_selection_set_model(MemorySegment self, MemorySegment model) {
        var mh$ = gtk_no_selection_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_NOTEBOOK_TAB_FIRST = 0;
     * }
     */
    public static int GTK_NOTEBOOK_TAB_FIRST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_NOTEBOOK_TAB_LAST = 1;
     * }
     */
    public static int GTK_NOTEBOOK_TAB_LAST() {
        return (int)1L;
    }
    public static MethodHandle gtk_notebook_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_notebook_get_type$MH,"gtk_notebook_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_notebook_get_type();
     * }
     */
    public static long gtk_notebook_get_type() {
        var mh$ = gtk_notebook_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_notebook_new$MH,"gtk_notebook_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_notebook_new();
     * }
     */
    public static MemorySegment gtk_notebook_new() {
        var mh$ = gtk_notebook_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_append_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_notebook_append_page$MH,"gtk_notebook_append_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_append_page(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label);
     * }
     */
    public static int gtk_notebook_append_page(MemorySegment notebook, MemorySegment child, MemorySegment tab_label) {
        var mh$ = gtk_notebook_append_page$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_append_page_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_notebook_append_page_menu$MH,"gtk_notebook_append_page_menu");
    }
    /**
     * {@snippet :
     * int gtk_notebook_append_page_menu(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label, GtkWidget* menu_label);
     * }
     */
    public static int gtk_notebook_append_page_menu(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, MemorySegment menu_label) {
        var mh$ = gtk_notebook_append_page_menu$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, menu_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_prepend_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_notebook_prepend_page$MH,"gtk_notebook_prepend_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_prepend_page(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label);
     * }
     */
    public static int gtk_notebook_prepend_page(MemorySegment notebook, MemorySegment child, MemorySegment tab_label) {
        var mh$ = gtk_notebook_prepend_page$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_prepend_page_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_notebook_prepend_page_menu$MH,"gtk_notebook_prepend_page_menu");
    }
    /**
     * {@snippet :
     * int gtk_notebook_prepend_page_menu(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label, GtkWidget* menu_label);
     * }
     */
    public static int gtk_notebook_prepend_page_menu(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, MemorySegment menu_label) {
        var mh$ = gtk_notebook_prepend_page_menu$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, menu_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_insert_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_notebook_insert_page$MH,"gtk_notebook_insert_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_insert_page(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label, int position);
     * }
     */
    public static int gtk_notebook_insert_page(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, int position) {
        var mh$ = gtk_notebook_insert_page$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_insert_page_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_notebook_insert_page_menu$MH,"gtk_notebook_insert_page_menu");
    }
    /**
     * {@snippet :
     * int gtk_notebook_insert_page_menu(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label, GtkWidget* menu_label, int position);
     * }
     */
    public static int gtk_notebook_insert_page_menu(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, MemorySegment menu_label, int position) {
        var mh$ = gtk_notebook_insert_page_menu$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, menu_label, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_remove_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.gtk_notebook_remove_page$MH,"gtk_notebook_remove_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_remove_page(GtkNotebook* notebook, int page_num);
     * }
     */
    public static void gtk_notebook_remove_page(MemorySegment notebook, int page_num) {
        var mh$ = gtk_notebook_remove_page$MH();
        try {
            mh$.invokeExact(notebook, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_group_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.gtk_notebook_set_group_name$MH,"gtk_notebook_set_group_name");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_group_name(GtkNotebook* notebook, char* group_name);
     * }
     */
    public static void gtk_notebook_set_group_name(MemorySegment notebook, MemorySegment group_name) {
        var mh$ = gtk_notebook_set_group_name$MH();
        try {
            mh$.invokeExact(notebook, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_group_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.gtk_notebook_get_group_name$MH,"gtk_notebook_get_group_name");
    }
    /**
     * {@snippet :
     * char* gtk_notebook_get_group_name(GtkNotebook* notebook);
     * }
     */
    public static MemorySegment gtk_notebook_get_group_name(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_group_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.gtk_notebook_get_current_page$MH,"gtk_notebook_get_current_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_current_page(GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_current_page(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_current_page$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_nth_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.gtk_notebook_get_nth_page$MH,"gtk_notebook_get_nth_page");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_notebook_get_nth_page(GtkNotebook* notebook, int page_num);
     * }
     */
    public static MemorySegment gtk_notebook_get_nth_page(MemorySegment notebook, int page_num) {
        var mh$ = gtk_notebook_get_nth_page$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.gtk_notebook_get_n_pages$MH,"gtk_notebook_get_n_pages");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_n_pages(GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_n_pages(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_n_pages$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_page_num$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.gtk_notebook_page_num$MH,"gtk_notebook_page_num");
    }
    /**
     * {@snippet :
     * int gtk_notebook_page_num(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static int gtk_notebook_page_num(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_page_num$MH();
        try {
            return (int)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.gtk_notebook_set_current_page$MH,"gtk_notebook_set_current_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_current_page(GtkNotebook* notebook, int page_num);
     * }
     */
    public static void gtk_notebook_set_current_page(MemorySegment notebook, int page_num) {
        var mh$ = gtk_notebook_set_current_page$MH();
        try {
            mh$.invokeExact(notebook, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_next_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.gtk_notebook_next_page$MH,"gtk_notebook_next_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_next_page(GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_next_page(MemorySegment notebook) {
        var mh$ = gtk_notebook_next_page$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_prev_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.gtk_notebook_prev_page$MH,"gtk_notebook_prev_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_prev_page(GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_prev_page(MemorySegment notebook) {
        var mh$ = gtk_notebook_prev_page$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_show_border$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.gtk_notebook_set_show_border$MH,"gtk_notebook_set_show_border");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_show_border(GtkNotebook* notebook, gboolean show_border);
     * }
     */
    public static void gtk_notebook_set_show_border(MemorySegment notebook, int show_border) {
        var mh$ = gtk_notebook_set_show_border$MH();
        try {
            mh$.invokeExact(notebook, show_border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_show_border$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.gtk_notebook_get_show_border$MH,"gtk_notebook_get_show_border");
    }
    /**
     * {@snippet :
     * gboolean gtk_notebook_get_show_border(GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_show_border(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_show_border$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_show_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_notebook_set_show_tabs$MH,"gtk_notebook_set_show_tabs");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_show_tabs(GtkNotebook* notebook, gboolean show_tabs);
     * }
     */
    public static void gtk_notebook_set_show_tabs(MemorySegment notebook, int show_tabs) {
        var mh$ = gtk_notebook_set_show_tabs$MH();
        try {
            mh$.invokeExact(notebook, show_tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_show_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_notebook_get_show_tabs$MH,"gtk_notebook_get_show_tabs");
    }
    /**
     * {@snippet :
     * gboolean gtk_notebook_get_show_tabs(GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_show_tabs(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_show_tabs$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_notebook_set_tab_pos$MH,"gtk_notebook_set_tab_pos");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_pos(GtkNotebook* notebook, GtkPositionType pos);
     * }
     */
    public static void gtk_notebook_set_tab_pos(MemorySegment notebook, int pos) {
        var mh$ = gtk_notebook_set_tab_pos$MH();
        try {
            mh$.invokeExact(notebook, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_notebook_get_tab_pos$MH,"gtk_notebook_get_tab_pos");
    }
    /**
     * {@snippet :
     * GtkPositionType gtk_notebook_get_tab_pos(GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_tab_pos(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_tab_pos$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_scrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_notebook_set_scrollable$MH,"gtk_notebook_set_scrollable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_scrollable(GtkNotebook* notebook, gboolean scrollable);
     * }
     */
    public static void gtk_notebook_set_scrollable(MemorySegment notebook, int scrollable) {
        var mh$ = gtk_notebook_set_scrollable$MH();
        try {
            mh$.invokeExact(notebook, scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_scrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_notebook_get_scrollable$MH,"gtk_notebook_get_scrollable");
    }
    /**
     * {@snippet :
     * gboolean gtk_notebook_get_scrollable(GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_scrollable(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_scrollable$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_popup_enable$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_notebook_popup_enable$MH,"gtk_notebook_popup_enable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_popup_enable(GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_popup_enable(MemorySegment notebook) {
        var mh$ = gtk_notebook_popup_enable$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_popup_disable$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_notebook_popup_disable$MH,"gtk_notebook_popup_disable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_popup_disable(GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_popup_disable(MemorySegment notebook) {
        var mh$ = gtk_notebook_popup_disable$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_notebook_get_tab_label$MH,"gtk_notebook_get_tab_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_notebook_get_tab_label(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_tab_label(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_notebook_set_tab_label$MH,"gtk_notebook_set_tab_label");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_label(GtkNotebook* notebook, GtkWidget* child, GtkWidget* tab_label);
     * }
     */
    public static void gtk_notebook_set_tab_label(MemorySegment notebook, MemorySegment child, MemorySegment tab_label) {
        var mh$ = gtk_notebook_set_tab_label$MH();
        try {
            mh$.invokeExact(notebook, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_notebook_set_tab_label_text$MH,"gtk_notebook_set_tab_label_text");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_label_text(GtkNotebook* notebook, GtkWidget* child, char* tab_text);
     * }
     */
    public static void gtk_notebook_set_tab_label_text(MemorySegment notebook, MemorySegment child, MemorySegment tab_text) {
        var mh$ = gtk_notebook_set_tab_label_text$MH();
        try {
            mh$.invokeExact(notebook, child, tab_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_notebook_get_tab_label_text$MH,"gtk_notebook_get_tab_label_text");
    }
    /**
     * {@snippet :
     * char* gtk_notebook_get_tab_label_text(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_tab_label_text(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_label_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_menu_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_notebook_get_menu_label$MH,"gtk_notebook_get_menu_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_notebook_get_menu_label(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_menu_label(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_menu_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_menu_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_notebook_set_menu_label$MH,"gtk_notebook_set_menu_label");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_menu_label(GtkNotebook* notebook, GtkWidget* child, GtkWidget* menu_label);
     * }
     */
    public static void gtk_notebook_set_menu_label(MemorySegment notebook, MemorySegment child, MemorySegment menu_label) {
        var mh$ = gtk_notebook_set_menu_label$MH();
        try {
            mh$.invokeExact(notebook, child, menu_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_menu_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_notebook_set_menu_label_text$MH,"gtk_notebook_set_menu_label_text");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_menu_label_text(GtkNotebook* notebook, GtkWidget* child, char* menu_text);
     * }
     */
    public static void gtk_notebook_set_menu_label_text(MemorySegment notebook, MemorySegment child, MemorySegment menu_text) {
        var mh$ = gtk_notebook_set_menu_label_text$MH();
        try {
            mh$.invokeExact(notebook, child, menu_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_menu_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_notebook_get_menu_label_text$MH,"gtk_notebook_get_menu_label_text");
    }
    /**
     * {@snippet :
     * char* gtk_notebook_get_menu_label_text(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_menu_label_text(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_menu_label_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_reorder_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_notebook_reorder_child$MH,"gtk_notebook_reorder_child");
    }
    /**
     * {@snippet :
     * void gtk_notebook_reorder_child(GtkNotebook* notebook, GtkWidget* child, int position);
     * }
     */
    public static void gtk_notebook_reorder_child(MemorySegment notebook, MemorySegment child, int position) {
        var mh$ = gtk_notebook_reorder_child$MH();
        try {
            mh$.invokeExact(notebook, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_notebook_get_tab_reorderable$MH,"gtk_notebook_get_tab_reorderable");
    }
    /**
     * {@snippet :
     * gboolean gtk_notebook_get_tab_reorderable(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static int gtk_notebook_get_tab_reorderable(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_reorderable$MH();
        try {
            return (int)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_notebook_set_tab_reorderable$MH,"gtk_notebook_set_tab_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_reorderable(GtkNotebook* notebook, GtkWidget* child, gboolean reorderable);
     * }
     */
    public static void gtk_notebook_set_tab_reorderable(MemorySegment notebook, MemorySegment child, int reorderable) {
        var mh$ = gtk_notebook_set_tab_reorderable$MH();
        try {
            mh$.invokeExact(notebook, child, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_detachable$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_notebook_get_tab_detachable$MH,"gtk_notebook_get_tab_detachable");
    }
    /**
     * {@snippet :
     * gboolean gtk_notebook_get_tab_detachable(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static int gtk_notebook_get_tab_detachable(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_detachable$MH();
        try {
            return (int)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_detachable$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_notebook_set_tab_detachable$MH,"gtk_notebook_set_tab_detachable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_detachable(GtkNotebook* notebook, GtkWidget* child, gboolean detachable);
     * }
     */
    public static void gtk_notebook_set_tab_detachable(MemorySegment notebook, MemorySegment child, int detachable) {
        var mh$ = gtk_notebook_set_tab_detachable$MH();
        try {
            mh$.invokeExact(notebook, child, detachable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_detach_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_notebook_detach_tab$MH,"gtk_notebook_detach_tab");
    }
    /**
     * {@snippet :
     * void gtk_notebook_detach_tab(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static void gtk_notebook_detach_tab(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_detach_tab$MH();
        try {
            mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_notebook_get_action_widget$MH,"gtk_notebook_get_action_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_notebook_get_action_widget(GtkNotebook* notebook, GtkPackType pack_type);
     * }
     */
    public static MemorySegment gtk_notebook_get_action_widget(MemorySegment notebook, int pack_type) {
        var mh$ = gtk_notebook_get_action_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, pack_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_notebook_set_action_widget$MH,"gtk_notebook_set_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_action_widget(GtkNotebook* notebook, GtkWidget* widget, GtkPackType pack_type);
     * }
     */
    public static void gtk_notebook_set_action_widget(MemorySegment notebook, MemorySegment widget, int pack_type) {
        var mh$ = gtk_notebook_set_action_widget$MH();
        try {
            mh$.invokeExact(notebook, widget, pack_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_page_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_notebook_page_get_type$MH,"gtk_notebook_page_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_notebook_page_get_type();
     * }
     */
    public static long gtk_notebook_page_get_type() {
        var mh$ = gtk_notebook_page_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_notebook_get_page$MH,"gtk_notebook_get_page");
    }
    /**
     * {@snippet :
     * GtkNotebookPage* gtk_notebook_get_page(GtkNotebook* notebook, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_page(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_page$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_page_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_notebook_page_get_child$MH,"gtk_notebook_page_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_notebook_page_get_child(GtkNotebookPage* page);
     * }
     */
    public static MemorySegment gtk_notebook_page_get_child(MemorySegment page) {
        var mh$ = gtk_notebook_page_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_notebook_get_pages$MH,"gtk_notebook_get_pages");
    }
    /**
     * {@snippet :
     * GListModel* gtk_notebook_get_pages(GtkNotebook* notebook);
     * }
     */
    public static MemorySegment gtk_notebook_get_pages(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_pages$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_numeric_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_numeric_sorter_get_type$MH,"gtk_numeric_sorter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_numeric_sorter_get_type();
     * }
     */
    public static long gtk_numeric_sorter_get_type() {
        var mh$ = gtk_numeric_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNumericSorter* GtkNumericSorter_autoptr;
     * }
     */
    public static final OfAddress GtkNumericSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNumericSorter_listautoptr;
     * }
     */
    public static final OfAddress GtkNumericSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNumericSorter_slistautoptr;
     * }
     */
    public static final OfAddress GtkNumericSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNumericSorter_queueautoptr;
     * }
     */
    public static final OfAddress GtkNumericSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkNumericSorterClass_autoptr;
     * }
     */
    public static final OfAddress GtkNumericSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNumericSorterClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNumericSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNumericSorterClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNumericSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNumericSorterClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNumericSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_numeric_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_numeric_sorter_new$MH,"gtk_numeric_sorter_new");
    }
    /**
     * {@snippet :
     * GtkNumericSorter* gtk_numeric_sorter_new(GtkExpression* expression);
     * }
     */
    public static MemorySegment gtk_numeric_sorter_new(MemorySegment expression) {
        var mh$ = gtk_numeric_sorter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_numeric_sorter_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_numeric_sorter_get_expression$MH,"gtk_numeric_sorter_get_expression");
    }
    /**
     * {@snippet :
     * GtkExpression* gtk_numeric_sorter_get_expression(GtkNumericSorter* self);
     * }
     */
    public static MemorySegment gtk_numeric_sorter_get_expression(MemorySegment self) {
        var mh$ = gtk_numeric_sorter_get_expression$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_numeric_sorter_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_numeric_sorter_set_expression$MH,"gtk_numeric_sorter_set_expression");
    }
    /**
     * {@snippet :
     * void gtk_numeric_sorter_set_expression(GtkNumericSorter* self, GtkExpression* expression);
     * }
     */
    public static void gtk_numeric_sorter_set_expression(MemorySegment self, MemorySegment expression) {
        var mh$ = gtk_numeric_sorter_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_numeric_sorter_get_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_numeric_sorter_get_sort_order$MH,"gtk_numeric_sorter_get_sort_order");
    }
    /**
     * {@snippet :
     * GtkSortType gtk_numeric_sorter_get_sort_order(GtkNumericSorter* self);
     * }
     */
    public static int gtk_numeric_sorter_get_sort_order(MemorySegment self) {
        var mh$ = gtk_numeric_sorter_get_sort_order$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_numeric_sorter_set_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_numeric_sorter_set_sort_order$MH,"gtk_numeric_sorter_set_sort_order");
    }
    /**
     * {@snippet :
     * void gtk_numeric_sorter_set_sort_order(GtkNumericSorter* self, GtkSortType sort_order);
     * }
     */
    public static void gtk_numeric_sorter_set_sort_order(MemorySegment self, int sort_order) {
        var mh$ = gtk_numeric_sorter_set_sort_order$MH();
        try {
            mh$.invokeExact(self, sort_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_orientable_get_type$MH,"gtk_orientable_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_orientable_get_type();
     * }
     */
    public static long gtk_orientable_get_type() {
        var mh$ = gtk_orientable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientable_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_orientable_set_orientation$MH,"gtk_orientable_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_orientable_set_orientation(GtkOrientable* orientable, GtkOrientation orientation);
     * }
     */
    public static void gtk_orientable_set_orientation(MemorySegment orientable, int orientation) {
        var mh$ = gtk_orientable_set_orientation$MH();
        try {
            mh$.invokeExact(orientable, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientable_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_orientable_get_orientation$MH,"gtk_orientable_get_orientation");
    }
    /**
     * {@snippet :
     * GtkOrientation gtk_orientable_get_orientation(GtkOrientable* orientable);
     * }
     */
    public static int gtk_orientable_get_orientation(MemorySegment orientable) {
        var mh$ = gtk_orientable_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(orientable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_overlay_get_type$MH,"gtk_overlay_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_overlay_get_type();
     * }
     */
    public static long gtk_overlay_get_type() {
        var mh$ = gtk_overlay_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_overlay_new$MH,"gtk_overlay_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_overlay_new();
     * }
     */
    public static MemorySegment gtk_overlay_new() {
        var mh$ = gtk_overlay_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_add_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_overlay_add_overlay$MH,"gtk_overlay_add_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_add_overlay(GtkOverlay* overlay, GtkWidget* widget);
     * }
     */
    public static void gtk_overlay_add_overlay(MemorySegment overlay, MemorySegment widget) {
        var mh$ = gtk_overlay_add_overlay$MH();
        try {
            mh$.invokeExact(overlay, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_remove_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_overlay_remove_overlay$MH,"gtk_overlay_remove_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_remove_overlay(GtkOverlay* overlay, GtkWidget* widget);
     * }
     */
    public static void gtk_overlay_remove_overlay(MemorySegment overlay, MemorySegment widget) {
        var mh$ = gtk_overlay_remove_overlay$MH();
        try {
            mh$.invokeExact(overlay, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_overlay_set_child$MH,"gtk_overlay_set_child");
    }
    /**
     * {@snippet :
     * void gtk_overlay_set_child(GtkOverlay* overlay, GtkWidget* child);
     * }
     */
    public static void gtk_overlay_set_child(MemorySegment overlay, MemorySegment child) {
        var mh$ = gtk_overlay_set_child$MH();
        try {
            mh$.invokeExact(overlay, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_overlay_get_child$MH,"gtk_overlay_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_overlay_get_child(GtkOverlay* overlay);
     * }
     */
    public static MemorySegment gtk_overlay_get_child(MemorySegment overlay) {
        var mh$ = gtk_overlay_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(overlay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_get_measure_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_overlay_get_measure_overlay$MH,"gtk_overlay_get_measure_overlay");
    }
    /**
     * {@snippet :
     * gboolean gtk_overlay_get_measure_overlay(GtkOverlay* overlay, GtkWidget* widget);
     * }
     */
    public static int gtk_overlay_get_measure_overlay(MemorySegment overlay, MemorySegment widget) {
        var mh$ = gtk_overlay_get_measure_overlay$MH();
        try {
            return (int)mh$.invokeExact(overlay, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_set_measure_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_overlay_set_measure_overlay$MH,"gtk_overlay_set_measure_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_set_measure_overlay(GtkOverlay* overlay, GtkWidget* widget, gboolean measure);
     * }
     */
    public static void gtk_overlay_set_measure_overlay(MemorySegment overlay, MemorySegment widget, int measure) {
        var mh$ = gtk_overlay_set_measure_overlay$MH();
        try {
            mh$.invokeExact(overlay, widget, measure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_get_clip_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_overlay_get_clip_overlay$MH,"gtk_overlay_get_clip_overlay");
    }
    /**
     * {@snippet :
     * gboolean gtk_overlay_get_clip_overlay(GtkOverlay* overlay, GtkWidget* widget);
     * }
     */
    public static int gtk_overlay_get_clip_overlay(MemorySegment overlay, MemorySegment widget) {
        var mh$ = gtk_overlay_get_clip_overlay$MH();
        try {
            return (int)mh$.invokeExact(overlay, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_set_clip_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_overlay_set_clip_overlay$MH,"gtk_overlay_set_clip_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_set_clip_overlay(GtkOverlay* overlay, GtkWidget* widget, gboolean clip_overlay);
     * }
     */
    public static void gtk_overlay_set_clip_overlay(MemorySegment overlay, MemorySegment widget, int clip_overlay) {
        var mh$ = gtk_overlay_set_clip_overlay$MH();
        try {
            mh$.invokeExact(overlay, widget, clip_overlay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_overlay_layout_get_type$MH,"gtk_overlay_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_overlay_layout_get_type();
     * }
     */
    public static long gtk_overlay_layout_get_type() {
        var mh$ = gtk_overlay_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkOverlayLayout* GtkOverlayLayout_autoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkOverlayLayout_listautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkOverlayLayout_slistautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkOverlayLayout_queueautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkOverlayLayoutClass_autoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkOverlayLayoutClass_listautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkOverlayLayoutClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkOverlayLayoutClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_overlay_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_overlay_layout_new$MH,"gtk_overlay_layout_new");
    }
    /**
     * {@snippet :
     * GtkLayoutManager* gtk_overlay_layout_new();
     * }
     */
    public static MemorySegment gtk_overlay_layout_new() {
        var mh$ = gtk_overlay_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_overlay_layout_child_get_type$MH,"gtk_overlay_layout_child_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_overlay_layout_child_get_type();
     * }
     */
    public static long gtk_overlay_layout_child_get_type() {
        var mh$ = gtk_overlay_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkOverlayLayoutChild* GtkOverlayLayoutChild_autoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkOverlayLayoutChild_listautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkOverlayLayoutChild_slistautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkOverlayLayoutChild_queueautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkOverlayLayoutChildClass_autoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkOverlayLayoutChildClass_listautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkOverlayLayoutChildClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkOverlayLayoutChildClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkOverlayLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_overlay_layout_child_set_measure$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_overlay_layout_child_set_measure$MH,"gtk_overlay_layout_child_set_measure");
    }
    /**
     * {@snippet :
     * void gtk_overlay_layout_child_set_measure(GtkOverlayLayoutChild* child, gboolean measure);
     * }
     */
    public static void gtk_overlay_layout_child_set_measure(MemorySegment child, int measure) {
        var mh$ = gtk_overlay_layout_child_set_measure$MH();
        try {
            mh$.invokeExact(child, measure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_layout_child_get_measure$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_overlay_layout_child_get_measure$MH,"gtk_overlay_layout_child_get_measure");
    }
    /**
     * {@snippet :
     * gboolean gtk_overlay_layout_child_get_measure(GtkOverlayLayoutChild* child);
     * }
     */
    public static int gtk_overlay_layout_child_get_measure(MemorySegment child) {
        var mh$ = gtk_overlay_layout_child_get_measure$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_layout_child_set_clip_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_overlay_layout_child_set_clip_overlay$MH,"gtk_overlay_layout_child_set_clip_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_layout_child_set_clip_overlay(GtkOverlayLayoutChild* child, gboolean clip_overlay);
     * }
     */
    public static void gtk_overlay_layout_child_set_clip_overlay(MemorySegment child, int clip_overlay) {
        var mh$ = gtk_overlay_layout_child_set_clip_overlay$MH();
        try {
            mh$.invokeExact(child, clip_overlay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_layout_child_get_clip_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_overlay_layout_child_get_clip_overlay$MH,"gtk_overlay_layout_child_get_clip_overlay");
    }
    /**
     * {@snippet :
     * gboolean gtk_overlay_layout_child_get_clip_overlay(GtkOverlayLayoutChild* child);
     * }
     */
    public static int gtk_overlay_layout_child_get_clip_overlay(MemorySegment child) {
        var mh$ = gtk_overlay_layout_child_get_clip_overlay$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_PAD_ACTION_BUTTON = 0;
     * }
     */
    public static int GTK_PAD_ACTION_BUTTON() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAD_ACTION_RING = 1;
     * }
     */
    public static int GTK_PAD_ACTION_RING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAD_ACTION_STRIP = 2;
     * }
     */
    public static int GTK_PAD_ACTION_STRIP() {
        return (int)2L;
    }
    public static MethodHandle gtk_pad_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_pad_controller_get_type$MH,"gtk_pad_controller_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_pad_controller_get_type();
     * }
     */
    public static long gtk_pad_controller_get_type() {
        var mh$ = gtk_pad_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_controller_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_pad_controller_new$MH,"gtk_pad_controller_new");
    }
    /**
     * {@snippet :
     * GtkPadController* gtk_pad_controller_new(GActionGroup* group, GdkDevice* pad);
     * }
     */
    public static MemorySegment gtk_pad_controller_new(MemorySegment group, MemorySegment pad) {
        var mh$ = gtk_pad_controller_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, pad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_controller_set_action_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_pad_controller_set_action_entries$MH,"gtk_pad_controller_set_action_entries");
    }
    /**
     * {@snippet :
     * void gtk_pad_controller_set_action_entries(GtkPadController* controller, const GtkPadActionEntry* entries, int n_entries);
     * }
     */
    public static void gtk_pad_controller_set_action_entries(MemorySegment controller, MemorySegment entries, int n_entries) {
        var mh$ = gtk_pad_controller_set_action_entries$MH();
        try {
            mh$.invokeExact(controller, entries, n_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_controller_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_pad_controller_set_action$MH,"gtk_pad_controller_set_action");
    }
    /**
     * {@snippet :
     * void gtk_pad_controller_set_action(GtkPadController* controller, GtkPadActionType type, int index, int mode, char* label, char* action_name);
     * }
     */
    public static void gtk_pad_controller_set_action(MemorySegment controller, int type, int index, int mode, MemorySegment label, MemorySegment action_name) {
        var mh$ = gtk_pad_controller_set_action$MH();
        try {
            mh$.invokeExact(controller, type, index, mode, label, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_paper_size_get_type$MH,"gtk_paper_size_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_paper_size_get_type();
     * }
     */
    public static long gtk_paper_size_get_type() {
        var mh$ = gtk_paper_size_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_paper_size_new$MH,"gtk_paper_size_new");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_new(char* name);
     * }
     */
    public static MemorySegment gtk_paper_size_new(MemorySegment name) {
        var mh$ = gtk_paper_size_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_ppd$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_paper_size_new_from_ppd$MH,"gtk_paper_size_new_from_ppd");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_new_from_ppd(char* ppd_name, char* ppd_display_name, double width, double height);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_ppd(MemorySegment ppd_name, MemorySegment ppd_display_name, double width, double height) {
        var mh$ = gtk_paper_size_new_from_ppd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ppd_name, ppd_display_name, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_ipp$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_paper_size_new_from_ipp$MH,"gtk_paper_size_new_from_ipp");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_new_from_ipp(char* ipp_name, double width, double height);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_ipp(MemorySegment ipp_name, double width, double height) {
        var mh$ = gtk_paper_size_new_from_ipp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ipp_name, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_paper_size_new_custom$MH,"gtk_paper_size_new_custom");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_new_custom(char* name, char* display_name, double width, double height, GtkUnit unit);
     * }
     */
    public static MemorySegment gtk_paper_size_new_custom(MemorySegment name, MemorySegment display_name, double width, double height, int unit) {
        var mh$ = gtk_paper_size_new_custom$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, display_name, width, height, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_paper_size_copy$MH,"gtk_paper_size_copy");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_copy(GtkPaperSize* other);
     * }
     */
    public static MemorySegment gtk_paper_size_copy(MemorySegment other) {
        var mh$ = gtk_paper_size_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_paper_size_free$MH,"gtk_paper_size_free");
    }
    /**
     * {@snippet :
     * void gtk_paper_size_free(GtkPaperSize* size);
     * }
     */
    public static void gtk_paper_size_free(MemorySegment size) {
        var mh$ = gtk_paper_size_free$MH();
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_is_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_paper_size_is_equal$MH,"gtk_paper_size_is_equal");
    }
    /**
     * {@snippet :
     * gboolean gtk_paper_size_is_equal(GtkPaperSize* size1, GtkPaperSize* size2);
     * }
     */
    public static int gtk_paper_size_is_equal(MemorySegment size1, MemorySegment size2) {
        var mh$ = gtk_paper_size_is_equal$MH();
        try {
            return (int)mh$.invokeExact(size1, size2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_paper_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_paper_size_get_paper_sizes$MH,"gtk_paper_size_get_paper_sizes");
    }
    /**
     * {@snippet :
     * GList* gtk_paper_size_get_paper_sizes(gboolean include_custom);
     * }
     */
    public static MemorySegment gtk_paper_size_get_paper_sizes(int include_custom) {
        var mh$ = gtk_paper_size_get_paper_sizes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(include_custom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_paper_size_get_name$MH,"gtk_paper_size_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_name(GtkPaperSize* size);
     * }
     */
    public static MemorySegment gtk_paper_size_get_name(MemorySegment size) {
        var mh$ = gtk_paper_size_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_paper_size_get_display_name$MH,"gtk_paper_size_get_display_name");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_display_name(GtkPaperSize* size);
     * }
     */
    public static MemorySegment gtk_paper_size_get_display_name(MemorySegment size) {
        var mh$ = gtk_paper_size_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_ppd_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_paper_size_get_ppd_name$MH,"gtk_paper_size_get_ppd_name");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_ppd_name(GtkPaperSize* size);
     * }
     */
    public static MemorySegment gtk_paper_size_get_ppd_name(MemorySegment size) {
        var mh$ = gtk_paper_size_get_ppd_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_paper_size_get_width$MH,"gtk_paper_size_get_width");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_width(GtkPaperSize* size, GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_width(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_width$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_paper_size_get_height$MH,"gtk_paper_size_get_height");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_height(GtkPaperSize* size, GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_height(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_height$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_is_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_paper_size_is_custom$MH,"gtk_paper_size_is_custom");
    }
    /**
     * {@snippet :
     * gboolean gtk_paper_size_is_custom(GtkPaperSize* size);
     * }
     */
    public static int gtk_paper_size_is_custom(MemorySegment size) {
        var mh$ = gtk_paper_size_is_custom$MH();
        try {
            return (int)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_is_ipp$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_paper_size_is_ipp$MH,"gtk_paper_size_is_ipp");
    }
    /**
     * {@snippet :
     * gboolean gtk_paper_size_is_ipp(GtkPaperSize* size);
     * }
     */
    public static int gtk_paper_size_is_ipp(MemorySegment size) {
        var mh$ = gtk_paper_size_is_ipp$MH();
        try {
            return (int)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_paper_size_set_size$MH,"gtk_paper_size_set_size");
    }
    /**
     * {@snippet :
     * void gtk_paper_size_set_size(GtkPaperSize* size, double width, double height, GtkUnit unit);
     * }
     */
    public static void gtk_paper_size_set_size(MemorySegment size, double width, double height, int unit) {
        var mh$ = gtk_paper_size_set_size$MH();
        try {
            mh$.invokeExact(size, width, height, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_paper_size_get_default_top_margin$MH,"gtk_paper_size_get_default_top_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_top_margin(GtkPaperSize* size, GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_top_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_top_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_paper_size_get_default_bottom_margin$MH,"gtk_paper_size_get_default_bottom_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_bottom_margin(GtkPaperSize* size, GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_bottom_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_bottom_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_paper_size_get_default_left_margin$MH,"gtk_paper_size_get_default_left_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_left_margin(GtkPaperSize* size, GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_left_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_left_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_paper_size_get_default_right_margin$MH,"gtk_paper_size_get_default_right_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_right_margin(GtkPaperSize* size, GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_right_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_right_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_paper_size_get_default$MH,"gtk_paper_size_get_default");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_default();
     * }
     */
    public static MemorySegment gtk_paper_size_get_default() {
        var mh$ = gtk_paper_size_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_paper_size_new_from_key_file$MH,"gtk_paper_size_new_from_key_file");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_new_from_key_file(GKeyFile* key_file, char* group_name, GError** error);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_key_file(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_paper_size_new_from_key_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_to_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_paper_size_to_key_file$MH,"gtk_paper_size_to_key_file");
    }
    /**
     * {@snippet :
     * void gtk_paper_size_to_key_file(GtkPaperSize* size, GKeyFile* key_file, char* group_name);
     * }
     */
    public static void gtk_paper_size_to_key_file(MemorySegment size, MemorySegment key_file, MemorySegment group_name) {
        var mh$ = gtk_paper_size_to_key_file$MH();
        try {
            mh$.invokeExact(size, key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_paper_size_new_from_gvariant$MH,"gtk_paper_size_new_from_gvariant");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_paper_size_new_from_gvariant(GVariant* variant);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_paper_size_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_paper_size_to_gvariant$MH,"gtk_paper_size_to_gvariant");
    }
    /**
     * {@snippet :
     * GVariant* gtk_paper_size_to_gvariant(GtkPaperSize* paper_size);
     * }
     */
    public static MemorySegment gtk_paper_size_to_gvariant(MemorySegment paper_size) {
        var mh$ = gtk_paper_size_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paper_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_page_setup_get_type$MH,"gtk_page_setup_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_page_setup_get_type();
     * }
     */
    public static long gtk_page_setup_get_type() {
        var mh$ = gtk_page_setup_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_page_setup_new$MH,"gtk_page_setup_new");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_page_setup_new();
     * }
     */
    public static MemorySegment gtk_page_setup_new() {
        var mh$ = gtk_page_setup_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_page_setup_copy$MH,"gtk_page_setup_copy");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_page_setup_copy(GtkPageSetup* other);
     * }
     */
    public static MemorySegment gtk_page_setup_copy(MemorySegment other) {
        var mh$ = gtk_page_setup_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_page_setup_get_orientation$MH,"gtk_page_setup_get_orientation");
    }
    /**
     * {@snippet :
     * GtkPageOrientation gtk_page_setup_get_orientation(GtkPageSetup* setup);
     * }
     */
    public static int gtk_page_setup_get_orientation(MemorySegment setup) {
        var mh$ = gtk_page_setup_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_page_setup_set_orientation$MH,"gtk_page_setup_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_orientation(GtkPageSetup* setup, GtkPageOrientation orientation);
     * }
     */
    public static void gtk_page_setup_set_orientation(MemorySegment setup, int orientation) {
        var mh$ = gtk_page_setup_set_orientation$MH();
        try {
            mh$.invokeExact(setup, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_page_setup_get_paper_size$MH,"gtk_page_setup_get_paper_size");
    }
    /**
     * {@snippet :
     * GtkPaperSize* gtk_page_setup_get_paper_size(GtkPageSetup* setup);
     * }
     */
    public static MemorySegment gtk_page_setup_get_paper_size(MemorySegment setup) {
        var mh$ = gtk_page_setup_get_paper_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_page_setup_set_paper_size$MH,"gtk_page_setup_set_paper_size");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_paper_size(GtkPageSetup* setup, GtkPaperSize* size);
     * }
     */
    public static void gtk_page_setup_set_paper_size(MemorySegment setup, MemorySegment size) {
        var mh$ = gtk_page_setup_set_paper_size$MH();
        try {
            mh$.invokeExact(setup, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_page_setup_get_top_margin$MH,"gtk_page_setup_get_top_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_top_margin(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_top_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_top_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_page_setup_set_top_margin$MH,"gtk_page_setup_set_top_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_top_margin(GtkPageSetup* setup, double margin, GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_top_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_top_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_page_setup_get_bottom_margin$MH,"gtk_page_setup_get_bottom_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_bottom_margin(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_bottom_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_bottom_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_page_setup_set_bottom_margin$MH,"gtk_page_setup_set_bottom_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_bottom_margin(GtkPageSetup* setup, double margin, GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_bottom_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_bottom_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_page_setup_get_left_margin$MH,"gtk_page_setup_get_left_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_left_margin(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_left_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_left_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_page_setup_set_left_margin$MH,"gtk_page_setup_set_left_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_left_margin(GtkPageSetup* setup, double margin, GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_left_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_left_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_page_setup_get_right_margin$MH,"gtk_page_setup_get_right_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_right_margin(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_right_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_right_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_page_setup_set_right_margin$MH,"gtk_page_setup_set_right_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_right_margin(GtkPageSetup* setup, double margin, GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_right_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_right_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_paper_size_and_default_margins$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_page_setup_set_paper_size_and_default_margins$MH,"gtk_page_setup_set_paper_size_and_default_margins");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_paper_size_and_default_margins(GtkPageSetup* setup, GtkPaperSize* size);
     * }
     */
    public static void gtk_page_setup_set_paper_size_and_default_margins(MemorySegment setup, MemorySegment size) {
        var mh$ = gtk_page_setup_set_paper_size_and_default_margins$MH();
        try {
            mh$.invokeExact(setup, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_paper_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_page_setup_get_paper_width$MH,"gtk_page_setup_get_paper_width");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_paper_width(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_paper_width(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_paper_width$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_paper_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_page_setup_get_paper_height$MH,"gtk_page_setup_get_paper_height");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_paper_height(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_paper_height(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_paper_height$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_page_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_page_setup_get_page_width$MH,"gtk_page_setup_get_page_width");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_page_width(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_page_width(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_page_width$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_page_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_page_setup_get_page_height$MH,"gtk_page_setup_get_page_height");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_page_height(GtkPageSetup* setup, GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_page_height(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_page_height$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_page_setup_new_from_file$MH,"gtk_page_setup_new_from_file");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_page_setup_new_from_file(char* file_name, GError** error);
     * }
     */
    public static MemorySegment gtk_page_setup_new_from_file(MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_page_setup_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_load_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_page_setup_load_file$MH,"gtk_page_setup_load_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_page_setup_load_file(GtkPageSetup* setup, char* file_name, GError** error);
     * }
     */
    public static int gtk_page_setup_load_file(MemorySegment setup, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_page_setup_load_file$MH();
        try {
            return (int)mh$.invokeExact(setup, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_page_setup_to_file$MH,"gtk_page_setup_to_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_page_setup_to_file(GtkPageSetup* setup, char* file_name, GError** error);
     * }
     */
    public static int gtk_page_setup_to_file(MemorySegment setup, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_page_setup_to_file$MH();
        try {
            return (int)mh$.invokeExact(setup, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new_from_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_page_setup_new_from_key_file$MH,"gtk_page_setup_new_from_key_file");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_page_setup_new_from_key_file(GKeyFile* key_file, char* group_name, GError** error);
     * }
     */
    public static MemorySegment gtk_page_setup_new_from_key_file(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_page_setup_new_from_key_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_load_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_page_setup_load_key_file$MH,"gtk_page_setup_load_key_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_page_setup_load_key_file(GtkPageSetup* setup, GKeyFile* key_file, char* group_name, GError** error);
     * }
     */
    public static int gtk_page_setup_load_key_file(MemorySegment setup, MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_page_setup_load_key_file$MH();
        try {
            return (int)mh$.invokeExact(setup, key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_to_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_page_setup_to_key_file$MH,"gtk_page_setup_to_key_file");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_to_key_file(GtkPageSetup* setup, GKeyFile* key_file, char* group_name);
     * }
     */
    public static void gtk_page_setup_to_key_file(MemorySegment setup, MemorySegment key_file, MemorySegment group_name) {
        var mh$ = gtk_page_setup_to_key_file$MH();
        try {
            mh$.invokeExact(setup, key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_page_setup_to_gvariant$MH,"gtk_page_setup_to_gvariant");
    }
    /**
     * {@snippet :
     * GVariant* gtk_page_setup_to_gvariant(GtkPageSetup* setup);
     * }
     */
    public static MemorySegment gtk_page_setup_to_gvariant(MemorySegment setup) {
        var mh$ = gtk_page_setup_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_page_setup_new_from_gvariant$MH,"gtk_page_setup_new_from_gvariant");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_page_setup_new_from_gvariant(GVariant* variant);
     * }
     */
    public static MemorySegment gtk_page_setup_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_page_setup_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_paned_get_type$MH,"gtk_paned_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_paned_get_type();
     * }
     */
    public static long gtk_paned_get_type() {
        var mh$ = gtk_paned_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_paned_new$MH,"gtk_paned_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_paned_new(GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_paned_new(int orientation) {
        var mh$ = gtk_paned_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_paned_set_start_child$MH,"gtk_paned_set_start_child");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_start_child(GtkPaned* paned, GtkWidget* child);
     * }
     */
    public static void gtk_paned_set_start_child(MemorySegment paned, MemorySegment child) {
        var mh$ = gtk_paned_set_start_child$MH();
        try {
            mh$.invokeExact(paned, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_paned_get_start_child$MH,"gtk_paned_get_start_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_paned_get_start_child(GtkPaned* paned);
     * }
     */
    public static MemorySegment gtk_paned_get_start_child(MemorySegment paned) {
        var mh$ = gtk_paned_get_start_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_resize_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_paned_set_resize_start_child$MH,"gtk_paned_set_resize_start_child");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_resize_start_child(GtkPaned* paned, gboolean resize);
     * }
     */
    public static void gtk_paned_set_resize_start_child(MemorySegment paned, int resize) {
        var mh$ = gtk_paned_set_resize_start_child$MH();
        try {
            mh$.invokeExact(paned, resize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_resize_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_paned_get_resize_start_child$MH,"gtk_paned_get_resize_start_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_paned_get_resize_start_child(GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_resize_start_child(MemorySegment paned) {
        var mh$ = gtk_paned_get_resize_start_child$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_paned_set_end_child$MH,"gtk_paned_set_end_child");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_end_child(GtkPaned* paned, GtkWidget* child);
     * }
     */
    public static void gtk_paned_set_end_child(MemorySegment paned, MemorySegment child) {
        var mh$ = gtk_paned_set_end_child$MH();
        try {
            mh$.invokeExact(paned, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_paned_get_end_child$MH,"gtk_paned_get_end_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_paned_get_end_child(GtkPaned* paned);
     * }
     */
    public static MemorySegment gtk_paned_get_end_child(MemorySegment paned) {
        var mh$ = gtk_paned_get_end_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_shrink_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_paned_set_shrink_start_child$MH,"gtk_paned_set_shrink_start_child");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_shrink_start_child(GtkPaned* paned, gboolean resize);
     * }
     */
    public static void gtk_paned_set_shrink_start_child(MemorySegment paned, int resize) {
        var mh$ = gtk_paned_set_shrink_start_child$MH();
        try {
            mh$.invokeExact(paned, resize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_shrink_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_paned_get_shrink_start_child$MH,"gtk_paned_get_shrink_start_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_paned_get_shrink_start_child(GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_shrink_start_child(MemorySegment paned) {
        var mh$ = gtk_paned_get_shrink_start_child$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_resize_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_paned_set_resize_end_child$MH,"gtk_paned_set_resize_end_child");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_resize_end_child(GtkPaned* paned, gboolean resize);
     * }
     */
    public static void gtk_paned_set_resize_end_child(MemorySegment paned, int resize) {
        var mh$ = gtk_paned_set_resize_end_child$MH();
        try {
            mh$.invokeExact(paned, resize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_resize_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_paned_get_resize_end_child$MH,"gtk_paned_get_resize_end_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_paned_get_resize_end_child(GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_resize_end_child(MemorySegment paned) {
        var mh$ = gtk_paned_get_resize_end_child$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_shrink_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_paned_set_shrink_end_child$MH,"gtk_paned_set_shrink_end_child");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_shrink_end_child(GtkPaned* paned, gboolean resize);
     * }
     */
    public static void gtk_paned_set_shrink_end_child(MemorySegment paned, int resize) {
        var mh$ = gtk_paned_set_shrink_end_child$MH();
        try {
            mh$.invokeExact(paned, resize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_shrink_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_paned_get_shrink_end_child$MH,"gtk_paned_get_shrink_end_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_paned_get_shrink_end_child(GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_shrink_end_child(MemorySegment paned) {
        var mh$ = gtk_paned_get_shrink_end_child$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_paned_get_position$MH,"gtk_paned_get_position");
    }
    /**
     * {@snippet :
     * int gtk_paned_get_position(GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_position(MemorySegment paned) {
        var mh$ = gtk_paned_get_position$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_paned_set_position$MH,"gtk_paned_set_position");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_position(GtkPaned* paned, int position);
     * }
     */
    public static void gtk_paned_set_position(MemorySegment paned, int position) {
        var mh$ = gtk_paned_set_position$MH();
        try {
            mh$.invokeExact(paned, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_wide_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_paned_set_wide_handle$MH,"gtk_paned_set_wide_handle");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_wide_handle(GtkPaned* paned, gboolean wide);
     * }
     */
    public static void gtk_paned_set_wide_handle(MemorySegment paned, int wide) {
        var mh$ = gtk_paned_set_wide_handle$MH();
        try {
            mh$.invokeExact(paned, wide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_wide_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_paned_get_wide_handle$MH,"gtk_paned_get_wide_handle");
    }
    /**
     * {@snippet :
     * gboolean gtk_paned_get_wide_handle(GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_wide_handle(MemorySegment paned) {
        var mh$ = gtk_paned_get_wide_handle$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_password_entry_get_type$MH,"gtk_password_entry_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_password_entry_get_type();
     * }
     */
    public static long gtk_password_entry_get_type() {
        var mh$ = gtk_password_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_password_entry_new$MH,"gtk_password_entry_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_password_entry_new();
     * }
     */
    public static MemorySegment gtk_password_entry_new() {
        var mh$ = gtk_password_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_set_show_peek_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_password_entry_set_show_peek_icon$MH,"gtk_password_entry_set_show_peek_icon");
    }
    /**
     * {@snippet :
     * void gtk_password_entry_set_show_peek_icon(GtkPasswordEntry* entry, gboolean show_peek_icon);
     * }
     */
    public static void gtk_password_entry_set_show_peek_icon(MemorySegment entry, int show_peek_icon) {
        var mh$ = gtk_password_entry_set_show_peek_icon$MH();
        try {
            mh$.invokeExact(entry, show_peek_icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_get_show_peek_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_password_entry_get_show_peek_icon$MH,"gtk_password_entry_get_show_peek_icon");
    }
    /**
     * {@snippet :
     * gboolean gtk_password_entry_get_show_peek_icon(GtkPasswordEntry* entry);
     * }
     */
    public static int gtk_password_entry_get_show_peek_icon(MemorySegment entry) {
        var mh$ = gtk_password_entry_get_show_peek_icon$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_set_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_password_entry_set_extra_menu$MH,"gtk_password_entry_set_extra_menu");
    }
    /**
     * {@snippet :
     * void gtk_password_entry_set_extra_menu(GtkPasswordEntry* entry, GMenuModel* model);
     * }
     */
    public static void gtk_password_entry_set_extra_menu(MemorySegment entry, MemorySegment model) {
        var mh$ = gtk_password_entry_set_extra_menu$MH();
        try {
            mh$.invokeExact(entry, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_get_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_password_entry_get_extra_menu$MH,"gtk_password_entry_get_extra_menu");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_password_entry_get_extra_menu(GtkPasswordEntry* entry);
     * }
     */
    public static MemorySegment gtk_password_entry_get_extra_menu(MemorySegment entry) {
        var mh$ = gtk_password_entry_get_extra_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_password_entry_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_password_entry_buffer_get_type$MH,"gtk_password_entry_buffer_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_password_entry_buffer_get_type();
     * }
     */
    public static long gtk_password_entry_buffer_get_type() {
        var mh$ = gtk_password_entry_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkPasswordEntryBuffer* GtkPasswordEntryBuffer_autoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBuffer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkPasswordEntryBuffer_listautoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBuffer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkPasswordEntryBuffer_slistautoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBuffer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkPasswordEntryBuffer_queueautoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBuffer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkPasswordEntryBufferClass_autoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBufferClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkPasswordEntryBufferClass_listautoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBufferClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkPasswordEntryBufferClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBufferClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkPasswordEntryBufferClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkPasswordEntryBufferClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_password_entry_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_password_entry_buffer_new$MH,"gtk_password_entry_buffer_new");
    }
    /**
     * {@snippet :
     * GtkEntryBuffer* gtk_password_entry_buffer_new();
     * }
     */
    public static MemorySegment gtk_password_entry_buffer_new() {
        var mh$ = gtk_password_entry_buffer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_picture_get_type$MH,"gtk_picture_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_picture_get_type();
     * }
     */
    public static long gtk_picture_get_type() {
        var mh$ = gtk_picture_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkPicture* GtkPicture_autoptr;
     * }
     */
    public static final OfAddress GtkPicture_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkPicture_listautoptr;
     * }
     */
    public static final OfAddress GtkPicture_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkPicture_slistautoptr;
     * }
     */
    public static final OfAddress GtkPicture_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkPicture_queueautoptr;
     * }
     */
    public static final OfAddress GtkPicture_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkPictureClass_autoptr;
     * }
     */
    public static final OfAddress GtkPictureClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkPictureClass_listautoptr;
     * }
     */
    public static final OfAddress GtkPictureClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkPictureClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkPictureClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkPictureClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkPictureClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_picture_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_picture_new$MH,"gtk_picture_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_picture_new();
     * }
     */
    public static MemorySegment gtk_picture_new() {
        var mh$ = gtk_picture_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_new_for_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_picture_new_for_paintable$MH,"gtk_picture_new_for_paintable");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_picture_new_for_paintable(GdkPaintable* paintable);
     * }
     */
    public static MemorySegment gtk_picture_new_for_paintable(MemorySegment paintable) {
        var mh$ = gtk_picture_new_for_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_new_for_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_picture_new_for_pixbuf$MH,"gtk_picture_new_for_pixbuf");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_picture_new_for_pixbuf(GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_picture_new_for_pixbuf(MemorySegment pixbuf) {
        var mh$ = gtk_picture_new_for_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_new_for_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_picture_new_for_file$MH,"gtk_picture_new_for_file");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_picture_new_for_file(GFile* file);
     * }
     */
    public static MemorySegment gtk_picture_new_for_file(MemorySegment file) {
        var mh$ = gtk_picture_new_for_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_new_for_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_picture_new_for_filename$MH,"gtk_picture_new_for_filename");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_picture_new_for_filename(char* filename);
     * }
     */
    public static MemorySegment gtk_picture_new_for_filename(MemorySegment filename) {
        var mh$ = gtk_picture_new_for_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_new_for_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_picture_new_for_resource$MH,"gtk_picture_new_for_resource");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_picture_new_for_resource(char* resource_path);
     * }
     */
    public static MemorySegment gtk_picture_new_for_resource(MemorySegment resource_path) {
        var mh$ = gtk_picture_new_for_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_picture_set_paintable$MH,"gtk_picture_set_paintable");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_paintable(GtkPicture* self, GdkPaintable* paintable);
     * }
     */
    public static void gtk_picture_set_paintable(MemorySegment self, MemorySegment paintable) {
        var mh$ = gtk_picture_set_paintable$MH();
        try {
            mh$.invokeExact(self, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_get_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_picture_get_paintable$MH,"gtk_picture_get_paintable");
    }
    /**
     * {@snippet :
     * GdkPaintable* gtk_picture_get_paintable(GtkPicture* self);
     * }
     */
    public static MemorySegment gtk_picture_get_paintable(MemorySegment self) {
        var mh$ = gtk_picture_get_paintable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_picture_set_file$MH,"gtk_picture_set_file");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_file(GtkPicture* self, GFile* file);
     * }
     */
    public static void gtk_picture_set_file(MemorySegment self, MemorySegment file) {
        var mh$ = gtk_picture_set_file$MH();
        try {
            mh$.invokeExact(self, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_picture_get_file$MH,"gtk_picture_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_picture_get_file(GtkPicture* self);
     * }
     */
    public static MemorySegment gtk_picture_get_file(MemorySegment self) {
        var mh$ = gtk_picture_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_picture_set_filename$MH,"gtk_picture_set_filename");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_filename(GtkPicture* self, char* filename);
     * }
     */
    public static void gtk_picture_set_filename(MemorySegment self, MemorySegment filename) {
        var mh$ = gtk_picture_set_filename$MH();
        try {
            mh$.invokeExact(self, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_picture_set_resource$MH,"gtk_picture_set_resource");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_resource(GtkPicture* self, char* resource_path);
     * }
     */
    public static void gtk_picture_set_resource(MemorySegment self, MemorySegment resource_path) {
        var mh$ = gtk_picture_set_resource$MH();
        try {
            mh$.invokeExact(self, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_picture_set_pixbuf$MH,"gtk_picture_set_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_pixbuf(GtkPicture* self, GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_picture_set_pixbuf(MemorySegment self, MemorySegment pixbuf) {
        var mh$ = gtk_picture_set_pixbuf$MH();
        try {
            mh$.invokeExact(self, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_keep_aspect_ratio$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_picture_set_keep_aspect_ratio$MH,"gtk_picture_set_keep_aspect_ratio");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_keep_aspect_ratio(GtkPicture* self, gboolean keep_aspect_ratio);
     * }
     */
    public static void gtk_picture_set_keep_aspect_ratio(MemorySegment self, int keep_aspect_ratio) {
        var mh$ = gtk_picture_set_keep_aspect_ratio$MH();
        try {
            mh$.invokeExact(self, keep_aspect_ratio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_get_keep_aspect_ratio$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_picture_get_keep_aspect_ratio$MH,"gtk_picture_get_keep_aspect_ratio");
    }
    /**
     * {@snippet :
     * gboolean gtk_picture_get_keep_aspect_ratio(GtkPicture* self);
     * }
     */
    public static int gtk_picture_get_keep_aspect_ratio(MemorySegment self) {
        var mh$ = gtk_picture_get_keep_aspect_ratio$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_can_shrink$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_picture_set_can_shrink$MH,"gtk_picture_set_can_shrink");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_can_shrink(GtkPicture* self, gboolean can_shrink);
     * }
     */
    public static void gtk_picture_set_can_shrink(MemorySegment self, int can_shrink) {
        var mh$ = gtk_picture_set_can_shrink$MH();
        try {
            mh$.invokeExact(self, can_shrink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_get_can_shrink$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_picture_get_can_shrink$MH,"gtk_picture_get_can_shrink");
    }
    /**
     * {@snippet :
     * gboolean gtk_picture_get_can_shrink(GtkPicture* self);
     * }
     */
    public static int gtk_picture_get_can_shrink(MemorySegment self) {
        var mh$ = gtk_picture_get_can_shrink$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_set_alternative_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_picture_set_alternative_text$MH,"gtk_picture_set_alternative_text");
    }
    /**
     * {@snippet :
     * void gtk_picture_set_alternative_text(GtkPicture* self, char* alternative_text);
     * }
     */
    public static void gtk_picture_set_alternative_text(MemorySegment self, MemorySegment alternative_text) {
        var mh$ = gtk_picture_set_alternative_text$MH();
        try {
            mh$.invokeExact(self, alternative_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_picture_get_alternative_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_picture_get_alternative_text$MH,"gtk_picture_get_alternative_text");
    }
    /**
     * {@snippet :
     * char* gtk_picture_get_alternative_text(GtkPicture* self);
     * }
     */
    public static MemorySegment gtk_picture_get_alternative_text(MemorySegment self) {
        var mh$ = gtk_picture_get_alternative_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_popover_menu_get_type$MH,"gtk_popover_menu_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_popover_menu_get_type();
     * }
     */
    public static long gtk_popover_menu_get_type() {
        var mh$ = gtk_popover_menu_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_new_from_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_popover_menu_new_from_model$MH,"gtk_popover_menu_new_from_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_popover_menu_new_from_model(GMenuModel* model);
     * }
     */
    public static MemorySegment gtk_popover_menu_new_from_model(MemorySegment model) {
        var mh$ = gtk_popover_menu_new_from_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_POPOVER_MENU_NESTED = 1;
     * }
     */
    public static int GTK_POPOVER_MENU_NESTED() {
        return (int)1L;
    }
    public static MethodHandle gtk_popover_menu_new_from_model_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_popover_menu_new_from_model_full$MH,"gtk_popover_menu_new_from_model_full");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_popover_menu_new_from_model_full(GMenuModel* model, GtkPopoverMenuFlags flags);
     * }
     */
    public static MemorySegment gtk_popover_menu_new_from_model_full(MemorySegment model, int flags) {
        var mh$ = gtk_popover_menu_new_from_model_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_set_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_popover_menu_set_menu_model$MH,"gtk_popover_menu_set_menu_model");
    }
    /**
     * {@snippet :
     * void gtk_popover_menu_set_menu_model(GtkPopoverMenu* popover, GMenuModel* model);
     * }
     */
    public static void gtk_popover_menu_set_menu_model(MemorySegment popover, MemorySegment model) {
        var mh$ = gtk_popover_menu_set_menu_model$MH();
        try {
            mh$.invokeExact(popover, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_get_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_popover_menu_get_menu_model$MH,"gtk_popover_menu_get_menu_model");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_popover_menu_get_menu_model(GtkPopoverMenu* popover);
     * }
     */
    public static MemorySegment gtk_popover_menu_get_menu_model(MemorySegment popover) {
        var mh$ = gtk_popover_menu_get_menu_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_popover_menu_add_child$MH,"gtk_popover_menu_add_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_menu_add_child(GtkPopoverMenu* popover, GtkWidget* child, char* id);
     * }
     */
    public static int gtk_popover_menu_add_child(MemorySegment popover, MemorySegment child, MemorySegment id) {
        var mh$ = gtk_popover_menu_add_child$MH();
        try {
            return (int)mh$.invokeExact(popover, child, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_remove_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_popover_menu_remove_child$MH,"gtk_popover_menu_remove_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_menu_remove_child(GtkPopoverMenu* popover, GtkWidget* child);
     * }
     */
    public static int gtk_popover_menu_remove_child(MemorySegment popover, MemorySegment child) {
        var mh$ = gtk_popover_menu_remove_child$MH();
        try {
            return (int)mh$.invokeExact(popover, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_popover_menu_bar_get_type$MH,"gtk_popover_menu_bar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_popover_menu_bar_get_type();
     * }
     */
    public static long gtk_popover_menu_bar_get_type() {
        var mh$ = gtk_popover_menu_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_bar_new_from_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_popover_menu_bar_new_from_model$MH,"gtk_popover_menu_bar_new_from_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_popover_menu_bar_new_from_model(GMenuModel* model);
     * }
     */
    public static MemorySegment gtk_popover_menu_bar_new_from_model(MemorySegment model) {
        var mh$ = gtk_popover_menu_bar_new_from_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_bar_set_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_popover_menu_bar_set_menu_model$MH,"gtk_popover_menu_bar_set_menu_model");
    }
    /**
     * {@snippet :
     * void gtk_popover_menu_bar_set_menu_model(GtkPopoverMenuBar* bar, GMenuModel* model);
     * }
     */
    public static void gtk_popover_menu_bar_set_menu_model(MemorySegment bar, MemorySegment model) {
        var mh$ = gtk_popover_menu_bar_set_menu_model$MH();
        try {
            mh$.invokeExact(bar, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_bar_get_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_popover_menu_bar_get_menu_model$MH,"gtk_popover_menu_bar_get_menu_model");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_popover_menu_bar_get_menu_model(GtkPopoverMenuBar* bar);
     * }
     */
    public static MemorySegment gtk_popover_menu_bar_get_menu_model(MemorySegment bar) {
        var mh$ = gtk_popover_menu_bar_get_menu_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_bar_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_popover_menu_bar_add_child$MH,"gtk_popover_menu_bar_add_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_menu_bar_add_child(GtkPopoverMenuBar* bar, GtkWidget* child, char* id);
     * }
     */
    public static int gtk_popover_menu_bar_add_child(MemorySegment bar, MemorySegment child, MemorySegment id) {
        var mh$ = gtk_popover_menu_bar_add_child$MH();
        try {
            return (int)mh$.invokeExact(bar, child, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_bar_remove_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_popover_menu_bar_remove_child$MH,"gtk_popover_menu_bar_remove_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_popover_menu_bar_remove_child(GtkPopoverMenuBar* bar, GtkWidget* child);
     * }
     */
    public static int gtk_popover_menu_bar_remove_child(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_popover_menu_bar_remove_child$MH();
        try {
            return (int)mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_print_context_get_type$MH,"gtk_print_context_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_context_get_type();
     * }
     */
    public static long gtk_print_context_get_type() {
        var mh$ = gtk_print_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_cairo_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_print_context_get_cairo_context$MH,"gtk_print_context_get_cairo_context");
    }
    /**
     * {@snippet :
     * cairo_t* gtk_print_context_get_cairo_context(GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_get_cairo_context(MemorySegment context) {
        var mh$ = gtk_print_context_get_cairo_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_print_context_get_page_setup$MH,"gtk_print_context_get_page_setup");
    }
    /**
     * {@snippet :
     * GtkPageSetup* gtk_print_context_get_page_setup(GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_get_page_setup(MemorySegment context) {
        var mh$ = gtk_print_context_get_page_setup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_print_context_get_width$MH,"gtk_print_context_get_width");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_width(GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_width(MemorySegment context) {
        var mh$ = gtk_print_context_get_width$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_print_context_get_height$MH,"gtk_print_context_get_height");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_height(GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_height(MemorySegment context) {
        var mh$ = gtk_print_context_get_height$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_dpi_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_print_context_get_dpi_x$MH,"gtk_print_context_get_dpi_x");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_dpi_x(GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_dpi_x(MemorySegment context) {
        var mh$ = gtk_print_context_get_dpi_x$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_dpi_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_print_context_get_dpi_y$MH,"gtk_print_context_get_dpi_y");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_dpi_y(GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_dpi_y(MemorySegment context) {
        var mh$ = gtk_print_context_get_dpi_y$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_hard_margins$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_print_context_get_hard_margins$MH,"gtk_print_context_get_hard_margins");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_context_get_hard_margins(GtkPrintContext* context, double* top, double* bottom, double* left, double* right);
     * }
     */
    public static int gtk_print_context_get_hard_margins(MemorySegment context, MemorySegment top, MemorySegment bottom, MemorySegment left, MemorySegment right) {
        var mh$ = gtk_print_context_get_hard_margins$MH();
        try {
            return (int)mh$.invokeExact(context, top, bottom, left, right);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_pango_fontmap$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_print_context_get_pango_fontmap$MH,"gtk_print_context_get_pango_fontmap");
    }
    /**
     * {@snippet :
     * PangoFontMap* gtk_print_context_get_pango_fontmap(GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_get_pango_fontmap(MemorySegment context) {
        var mh$ = gtk_print_context_get_pango_fontmap$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_create_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_print_context_create_pango_context$MH,"gtk_print_context_create_pango_context");
    }
    /**
     * {@snippet :
     * PangoContext* gtk_print_context_create_pango_context(GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_create_pango_context(MemorySegment context) {
        var mh$ = gtk_print_context_create_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_create_pango_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_print_context_create_pango_layout$MH,"gtk_print_context_create_pango_layout");
    }
    /**
     * {@snippet :
     * PangoLayout* gtk_print_context_create_pango_layout(GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_create_pango_layout(MemorySegment context) {
        var mh$ = gtk_print_context_create_pango_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_set_cairo_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_print_context_set_cairo_context$MH,"gtk_print_context_set_cairo_context");
    }
    /**
     * {@snippet :
     * void gtk_print_context_set_cairo_context(GtkPrintContext* context, cairo_t* cr, double dpi_x, double dpi_y);
     * }
     */
    public static void gtk_print_context_set_cairo_context(MemorySegment context, MemorySegment cr, double dpi_x, double dpi_y) {
        var mh$ = gtk_print_context_set_cairo_context$MH();
        try {
            mh$.invokeExact(context, cr, dpi_x, dpi_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_print_settings_get_type$MH,"gtk_print_settings_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_print_settings_get_type();
     * }
     */
    public static long gtk_print_settings_get_type() {
        var mh$ = gtk_print_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_print_settings_new$MH,"gtk_print_settings_new");
    }
    /**
     * {@snippet :
     * GtkPrintSettings* gtk_print_settings_new();
     * }
     */
    public static MemorySegment gtk_print_settings_new() {
        var mh$ = gtk_print_settings_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_print_settings_copy$MH,"gtk_print_settings_copy");
    }
    /**
     * {@snippet :
     * GtkPrintSettings* gtk_print_settings_copy(GtkPrintSettings* other);
     * }
     */
    public static MemorySegment gtk_print_settings_copy(MemorySegment other) {
        var mh$ = gtk_print_settings_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_print_settings_new_from_file$MH,"gtk_print_settings_new_from_file");
    }
    /**
     * {@snippet :
     * GtkPrintSettings* gtk_print_settings_new_from_file(char* file_name, GError** error);
     * }
     */
    public static MemorySegment gtk_print_settings_new_from_file(MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_print_settings_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_load_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_print_settings_load_file$MH,"gtk_print_settings_load_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_load_file(GtkPrintSettings* settings, char* file_name, GError** error);
     * }
     */
    public static int gtk_print_settings_load_file(MemorySegment settings, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_print_settings_load_file$MH();
        try {
            return (int)mh$.invokeExact(settings, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_print_settings_to_file$MH,"gtk_print_settings_to_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_to_file(GtkPrintSettings* settings, char* file_name, GError** error);
     * }
     */
    public static int gtk_print_settings_to_file(MemorySegment settings, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_print_settings_to_file$MH();
        try {
            return (int)mh$.invokeExact(settings, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new_from_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_print_settings_new_from_key_file$MH,"gtk_print_settings_new_from_key_file");
    }
    /**
     * {@snippet :
     * GtkPrintSettings* gtk_print_settings_new_from_key_file(GKeyFile* key_file, char* group_name, GError** error);
     * }
     */
    public static MemorySegment gtk_print_settings_new_from_key_file(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_print_settings_new_from_key_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_load_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_print_settings_load_key_file$MH,"gtk_print_settings_load_key_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_load_key_file(GtkPrintSettings* settings, GKeyFile* key_file, char* group_name, GError** error);
     * }
     */
    public static int gtk_print_settings_load_key_file(MemorySegment settings, MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_print_settings_load_key_file$MH();
        try {
            return (int)mh$.invokeExact(settings, key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_to_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_print_settings_to_key_file$MH,"gtk_print_settings_to_key_file");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_to_key_file(GtkPrintSettings* settings, GKeyFile* key_file, char* group_name);
     * }
     */
    public static void gtk_print_settings_to_key_file(MemorySegment settings, MemorySegment key_file, MemorySegment group_name) {
        var mh$ = gtk_print_settings_to_key_file$MH();
        try {
            mh$.invokeExact(settings, key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_print_settings_has_key$MH,"gtk_print_settings_has_key");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_has_key(GtkPrintSettings* settings, char* key);
     * }
     */
    public static int gtk_print_settings_has_key(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_has_key$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_print_settings_get$MH,"gtk_print_settings_get");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get(GtkPrintSettings* settings, char* key);
     * }
     */
    public static MemorySegment gtk_print_settings_get(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_print_settings_set$MH,"gtk_print_settings_set");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set(GtkPrintSettings* settings, char* key, char* value);
     * }
     */
    public static void gtk_print_settings_set(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = gtk_print_settings_set$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_print_settings_unset$MH,"gtk_print_settings_unset");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_unset(GtkPrintSettings* settings, char* key);
     * }
     */
    public static void gtk_print_settings_unset(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_unset$MH();
        try {
            mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_print_settings_foreach$MH,"gtk_print_settings_foreach");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_foreach(GtkPrintSettings* settings, GtkPrintSettingsFunc func, gpointer user_data);
     * }
     */
    public static void gtk_print_settings_foreach(MemorySegment settings, MemorySegment func, MemorySegment user_data) {
        var mh$ = gtk_print_settings_foreach$MH();
        try {
            mh$.invokeExact(settings, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_print_settings_get_bool$MH,"gtk_print_settings_get_bool");
    }
    /**
     * {@snippet :
     * gboolean gtk_print_settings_get_bool(GtkPrintSettings* settings, char* key);
     * }
     */
    public static int gtk_print_settings_get_bool(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get_bool$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_print_settings_set_bool$MH,"gtk_print_settings_set_bool");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_bool(GtkPrintSettings* settings, char* key, gboolean value);
     * }
     */
    public static void gtk_print_settings_set_bool(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = gtk_print_settings_set_bool$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_print_settings_get_double$MH,"gtk_print_settings_get_double");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_double(GtkPrintSettings* settings, char* key);
     * }
     */
    public static double gtk_print_settings_get_double(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get_double$MH();
        try {
            return (double)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


