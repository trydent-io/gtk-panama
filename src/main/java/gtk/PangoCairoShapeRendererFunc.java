// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PangoCairoShapeRendererFunc)(struct _cairo* cr,struct _PangoAttrShape* attr,int do_path,void* data);
 * }
 */
public interface PangoCairoShapeRendererFunc {

    void apply(java.lang.foreign.MemorySegment cr, java.lang.foreign.MemorySegment attr, int do_path, java.lang.foreign.MemorySegment data);
    static MemorySegment allocate(PangoCairoShapeRendererFunc fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1059.PangoCairoShapeRendererFunc_UP$MH, fi, constants$1059.PangoCairoShapeRendererFunc$FUNC, scope);
    }
    static PangoCairoShapeRendererFunc ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _cr, java.lang.foreign.MemorySegment _attr, int _do_path, java.lang.foreign.MemorySegment _data) -> {
            try {
                constants$1059.PangoCairoShapeRendererFunc_DOWN$MH.invokeExact(symbol, _cr, _attr, _do_path, _data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


