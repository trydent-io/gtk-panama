// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$59 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$59() {}
    static final FunctionDescriptor g_thread_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_new$MH = RuntimeHelper.downcallHandle(
        "g_thread_new",
        constants$59.g_thread_new$FUNC
    );
    static final FunctionDescriptor g_thread_try_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_try_new$MH = RuntimeHelper.downcallHandle(
        "g_thread_try_new",
        constants$59.g_thread_try_new$FUNC
    );
    static final FunctionDescriptor g_thread_self$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_thread_self$MH = RuntimeHelper.downcallHandle(
        "g_thread_self",
        constants$59.g_thread_self$FUNC
    );
    static final FunctionDescriptor g_thread_exit$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_exit$MH = RuntimeHelper.downcallHandle(
        "g_thread_exit",
        constants$59.g_thread_exit$FUNC
    );
    static final FunctionDescriptor g_thread_join$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_join$MH = RuntimeHelper.downcallHandle(
        "g_thread_join",
        constants$59.g_thread_join$FUNC
    );
    static final FunctionDescriptor g_thread_yield$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_thread_yield$MH = RuntimeHelper.downcallHandle(
        "g_thread_yield",
        constants$59.g_thread_yield$FUNC
    );
}


