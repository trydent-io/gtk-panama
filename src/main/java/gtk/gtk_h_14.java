// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class gtk_h_14 extends gtk_h_13 {

    public static MethodHandle gsk_rounded_rect_init_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gsk_rounded_rect_init_copy$MH,"gsk_rounded_rect_init_copy");
    }
    /**
     * {@snippet :
     * GskRoundedRect* gsk_rounded_rect_init_copy(GskRoundedRect* self, const GskRoundedRect* src);
     * }
     */
    public static MemorySegment gsk_rounded_rect_init_copy(MemorySegment self, MemorySegment src) {
        var mh$ = gsk_rounded_rect_init_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_init_from_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gsk_rounded_rect_init_from_rect$MH,"gsk_rounded_rect_init_from_rect");
    }
    /**
     * {@snippet :
     * GskRoundedRect* gsk_rounded_rect_init_from_rect(GskRoundedRect* self, const graphene_rect_t* bounds, float radius);
     * }
     */
    public static MemorySegment gsk_rounded_rect_init_from_rect(MemorySegment self, MemorySegment bounds, float radius) {
        var mh$ = gsk_rounded_rect_init_from_rect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, bounds, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gsk_rounded_rect_normalize$MH,"gsk_rounded_rect_normalize");
    }
    /**
     * {@snippet :
     * GskRoundedRect* gsk_rounded_rect_normalize(GskRoundedRect* self);
     * }
     */
    public static MemorySegment gsk_rounded_rect_normalize(MemorySegment self) {
        var mh$ = gsk_rounded_rect_normalize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gsk_rounded_rect_offset$MH,"gsk_rounded_rect_offset");
    }
    /**
     * {@snippet :
     * GskRoundedRect* gsk_rounded_rect_offset(GskRoundedRect* self, float dx, float dy);
     * }
     */
    public static MemorySegment gsk_rounded_rect_offset(MemorySegment self, float dx, float dy) {
        var mh$ = gsk_rounded_rect_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_shrink$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gsk_rounded_rect_shrink$MH,"gsk_rounded_rect_shrink");
    }
    /**
     * {@snippet :
     * GskRoundedRect* gsk_rounded_rect_shrink(GskRoundedRect* self, float top, float right, float bottom, float left);
     * }
     */
    public static MemorySegment gsk_rounded_rect_shrink(MemorySegment self, float top, float right, float bottom, float left) {
        var mh$ = gsk_rounded_rect_shrink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, top, right, bottom, left);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_is_rectilinear$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gsk_rounded_rect_is_rectilinear$MH,"gsk_rounded_rect_is_rectilinear");
    }
    /**
     * {@snippet :
     * gboolean gsk_rounded_rect_is_rectilinear(const GskRoundedRect* self);
     * }
     */
    public static int gsk_rounded_rect_is_rectilinear(MemorySegment self) {
        var mh$ = gsk_rounded_rect_is_rectilinear$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gsk_rounded_rect_contains_point$MH,"gsk_rounded_rect_contains_point");
    }
    /**
     * {@snippet :
     * gboolean gsk_rounded_rect_contains_point(const GskRoundedRect* self, const graphene_point_t* point);
     * }
     */
    public static int gsk_rounded_rect_contains_point(MemorySegment self, MemorySegment point) {
        var mh$ = gsk_rounded_rect_contains_point$MH();
        try {
            return (int)mh$.invokeExact(self, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_contains_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gsk_rounded_rect_contains_rect$MH,"gsk_rounded_rect_contains_rect");
    }
    /**
     * {@snippet :
     * gboolean gsk_rounded_rect_contains_rect(const GskRoundedRect* self, const graphene_rect_t* rect);
     * }
     */
    public static int gsk_rounded_rect_contains_rect(MemorySegment self, MemorySegment rect) {
        var mh$ = gsk_rounded_rect_contains_rect$MH();
        try {
            return (int)mh$.invokeExact(self, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_intersects_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gsk_rounded_rect_intersects_rect$MH,"gsk_rounded_rect_intersects_rect");
    }
    /**
     * {@snippet :
     * gboolean gsk_rounded_rect_intersects_rect(const GskRoundedRect* self, const graphene_rect_t* rect);
     * }
     */
    public static int gsk_rounded_rect_intersects_rect(MemorySegment self, MemorySegment rect) {
        var mh$ = gsk_rounded_rect_intersects_rect$MH();
        try {
            return (int)mh$.invokeExact(self, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gsk_gl_shader_get_type$MH,"gsk_gl_shader_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_gl_shader_get_type();
     * }
     */
    public static long gsk_gl_shader_get_type() {
        var mh$ = gsk_gl_shader_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GskGLShader* GskGLShader_autoptr;
     * }
     */
    public static final OfAddress GskGLShader_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GskGLShader_listautoptr;
     * }
     */
    public static final OfAddress GskGLShader_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GskGLShader_slistautoptr;
     * }
     */
    public static final OfAddress GskGLShader_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GskGLShader_queueautoptr;
     * }
     */
    public static final OfAddress GskGLShader_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GskGLShaderClass_autoptr;
     * }
     */
    public static final OfAddress GskGLShaderClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GskGLShaderClass_listautoptr;
     * }
     */
    public static final OfAddress GskGLShaderClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GskGLShaderClass_slistautoptr;
     * }
     */
    public static final OfAddress GskGLShaderClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GskGLShaderClass_queueautoptr;
     * }
     */
    public static final OfAddress GskGLShaderClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gsk_gl_shader_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gsk_gl_shader_new_from_bytes$MH,"gsk_gl_shader_new_from_bytes");
    }
    /**
     * {@snippet :
     * GskGLShader* gsk_gl_shader_new_from_bytes(GBytes* sourcecode);
     * }
     */
    public static MemorySegment gsk_gl_shader_new_from_bytes(MemorySegment sourcecode) {
        var mh$ = gsk_gl_shader_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sourcecode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gsk_gl_shader_new_from_resource$MH,"gsk_gl_shader_new_from_resource");
    }
    /**
     * {@snippet :
     * GskGLShader* gsk_gl_shader_new_from_resource(char* resource_path);
     * }
     */
    public static MemorySegment gsk_gl_shader_new_from_resource(MemorySegment resource_path) {
        var mh$ = gsk_gl_shader_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_compile$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gsk_gl_shader_compile$MH,"gsk_gl_shader_compile");
    }
    /**
     * {@snippet :
     * gboolean gsk_gl_shader_compile(GskGLShader* shader, GskRenderer* renderer, GError** error);
     * }
     */
    public static int gsk_gl_shader_compile(MemorySegment shader, MemorySegment renderer, MemorySegment error) {
        var mh$ = gsk_gl_shader_compile$MH();
        try {
            return (int)mh$.invokeExact(shader, renderer, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gsk_gl_shader_get_source$MH,"gsk_gl_shader_get_source");
    }
    /**
     * {@snippet :
     * GBytes* gsk_gl_shader_get_source(GskGLShader* shader);
     * }
     */
    public static MemorySegment gsk_gl_shader_get_source(MemorySegment shader) {
        var mh$ = gsk_gl_shader_get_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gsk_gl_shader_get_resource$MH,"gsk_gl_shader_get_resource");
    }
    /**
     * {@snippet :
     * char* gsk_gl_shader_get_resource(GskGLShader* shader);
     * }
     */
    public static MemorySegment gsk_gl_shader_get_resource(MemorySegment shader) {
        var mh$ = gsk_gl_shader_get_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_n_textures$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gsk_gl_shader_get_n_textures$MH,"gsk_gl_shader_get_n_textures");
    }
    /**
     * {@snippet :
     * int gsk_gl_shader_get_n_textures(GskGLShader* shader);
     * }
     */
    public static int gsk_gl_shader_get_n_textures(MemorySegment shader) {
        var mh$ = gsk_gl_shader_get_n_textures$MH();
        try {
            return (int)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_n_uniforms$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gsk_gl_shader_get_n_uniforms$MH,"gsk_gl_shader_get_n_uniforms");
    }
    /**
     * {@snippet :
     * int gsk_gl_shader_get_n_uniforms(GskGLShader* shader);
     * }
     */
    public static int gsk_gl_shader_get_n_uniforms(MemorySegment shader) {
        var mh$ = gsk_gl_shader_get_n_uniforms$MH();
        try {
            return (int)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_uniform_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gsk_gl_shader_get_uniform_name$MH,"gsk_gl_shader_get_uniform_name");
    }
    /**
     * {@snippet :
     * char* gsk_gl_shader_get_uniform_name(GskGLShader* shader, int idx);
     * }
     */
    public static MemorySegment gsk_gl_shader_get_uniform_name(MemorySegment shader, int idx) {
        var mh$ = gsk_gl_shader_get_uniform_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_find_uniform_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gsk_gl_shader_find_uniform_by_name$MH,"gsk_gl_shader_find_uniform_by_name");
    }
    /**
     * {@snippet :
     * int gsk_gl_shader_find_uniform_by_name(GskGLShader* shader, char* name);
     * }
     */
    public static int gsk_gl_shader_find_uniform_by_name(MemorySegment shader, MemorySegment name) {
        var mh$ = gsk_gl_shader_find_uniform_by_name$MH();
        try {
            return (int)mh$.invokeExact(shader, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_uniform_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gsk_gl_shader_get_uniform_type$MH,"gsk_gl_shader_get_uniform_type");
    }
    /**
     * {@snippet :
     * GskGLUniformType gsk_gl_shader_get_uniform_type(GskGLShader* shader, int idx);
     * }
     */
    public static int gsk_gl_shader_get_uniform_type(MemorySegment shader, int idx) {
        var mh$ = gsk_gl_shader_get_uniform_type$MH();
        try {
            return (int)mh$.invokeExact(shader, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_uniform_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gsk_gl_shader_get_uniform_offset$MH,"gsk_gl_shader_get_uniform_offset");
    }
    /**
     * {@snippet :
     * int gsk_gl_shader_get_uniform_offset(GskGLShader* shader, int idx);
     * }
     */
    public static int gsk_gl_shader_get_uniform_offset(MemorySegment shader, int idx) {
        var mh$ = gsk_gl_shader_get_uniform_offset$MH();
        try {
            return (int)mh$.invokeExact(shader, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_args_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gsk_gl_shader_get_args_size$MH,"gsk_gl_shader_get_args_size");
    }
    /**
     * {@snippet :
     * gsize gsk_gl_shader_get_args_size(GskGLShader* shader);
     * }
     */
    public static long gsk_gl_shader_get_args_size(MemorySegment shader) {
        var mh$ = gsk_gl_shader_get_args_size$MH();
        try {
            return (long)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_format_args_va$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gsk_gl_shader_format_args_va$MH,"gsk_gl_shader_format_args_va");
    }
    /**
     * {@snippet :
     * GBytes* gsk_gl_shader_format_args_va(GskGLShader* shader, va_list uniforms);
     * }
     */
    public static MemorySegment gsk_gl_shader_format_args_va(MemorySegment shader, MemorySegment uniforms) {
        var mh$ = gsk_gl_shader_format_args_va$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader, uniforms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_format_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gsk_gl_shader_format_args$MH,"gsk_gl_shader_format_args");
    }
    /**
     * {@snippet :
     * GBytes* gsk_gl_shader_format_args(GskGLShader* shader,...);
     * }
     */
    public static MemorySegment gsk_gl_shader_format_args(MemorySegment shader, Object... x1) {
        var mh$ = gsk_gl_shader_format_args$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gsk_gl_shader_get_arg_float$MH,"gsk_gl_shader_get_arg_float");
    }
    /**
     * {@snippet :
     * float gsk_gl_shader_get_arg_float(GskGLShader* shader, GBytes* args, int idx);
     * }
     */
    public static float gsk_gl_shader_get_arg_float(MemorySegment shader, MemorySegment args, int idx) {
        var mh$ = gsk_gl_shader_get_arg_float$MH();
        try {
            return (float)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gsk_gl_shader_get_arg_int$MH,"gsk_gl_shader_get_arg_int");
    }
    /**
     * {@snippet :
     * gint32 gsk_gl_shader_get_arg_int(GskGLShader* shader, GBytes* args, int idx);
     * }
     */
    public static int gsk_gl_shader_get_arg_int(MemorySegment shader, MemorySegment args, int idx) {
        var mh$ = gsk_gl_shader_get_arg_int$MH();
        try {
            return (int)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gsk_gl_shader_get_arg_uint$MH,"gsk_gl_shader_get_arg_uint");
    }
    /**
     * {@snippet :
     * guint32 gsk_gl_shader_get_arg_uint(GskGLShader* shader, GBytes* args, int idx);
     * }
     */
    public static int gsk_gl_shader_get_arg_uint(MemorySegment shader, MemorySegment args, int idx) {
        var mh$ = gsk_gl_shader_get_arg_uint$MH();
        try {
            return (int)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gsk_gl_shader_get_arg_bool$MH,"gsk_gl_shader_get_arg_bool");
    }
    /**
     * {@snippet :
     * gboolean gsk_gl_shader_get_arg_bool(GskGLShader* shader, GBytes* args, int idx);
     * }
     */
    public static int gsk_gl_shader_get_arg_bool(MemorySegment shader, MemorySegment args, int idx) {
        var mh$ = gsk_gl_shader_get_arg_bool$MH();
        try {
            return (int)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gsk_gl_shader_get_arg_vec2$MH,"gsk_gl_shader_get_arg_vec2");
    }
    /**
     * {@snippet :
     * void gsk_gl_shader_get_arg_vec2(GskGLShader* shader, GBytes* args, int idx, graphene_vec2_t* out_value);
     * }
     */
    public static void gsk_gl_shader_get_arg_vec2(MemorySegment shader, MemorySegment args, int idx, MemorySegment out_value) {
        var mh$ = gsk_gl_shader_get_arg_vec2$MH();
        try {
            mh$.invokeExact(shader, args, idx, out_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gsk_gl_shader_get_arg_vec3$MH,"gsk_gl_shader_get_arg_vec3");
    }
    /**
     * {@snippet :
     * void gsk_gl_shader_get_arg_vec3(GskGLShader* shader, GBytes* args, int idx, graphene_vec3_t* out_value);
     * }
     */
    public static void gsk_gl_shader_get_arg_vec3(MemorySegment shader, MemorySegment args, int idx, MemorySegment out_value) {
        var mh$ = gsk_gl_shader_get_arg_vec3$MH();
        try {
            mh$.invokeExact(shader, args, idx, out_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gsk_gl_shader_get_arg_vec4$MH,"gsk_gl_shader_get_arg_vec4");
    }
    /**
     * {@snippet :
     * void gsk_gl_shader_get_arg_vec4(GskGLShader* shader, GBytes* args, int idx, graphene_vec4_t* out_value);
     * }
     */
    public static void gsk_gl_shader_get_arg_vec4(MemorySegment shader, MemorySegment args, int idx, MemorySegment out_value) {
        var mh$ = gsk_gl_shader_get_arg_vec4$MH();
        try {
            mh$.invokeExact(shader, args, idx, out_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gsk_shader_args_builder_get_type$MH,"gsk_shader_args_builder_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_shader_args_builder_get_type();
     * }
     */
    public static long gsk_shader_args_builder_get_type() {
        var mh$ = gsk_shader_args_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gsk_shader_args_builder_new$MH,"gsk_shader_args_builder_new");
    }
    /**
     * {@snippet :
     * GskShaderArgsBuilder* gsk_shader_args_builder_new(GskGLShader* shader, GBytes* initial_values);
     * }
     */
    public static MemorySegment gsk_shader_args_builder_new(MemorySegment shader, MemorySegment initial_values) {
        var mh$ = gsk_shader_args_builder_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader, initial_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_to_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gsk_shader_args_builder_to_args$MH,"gsk_shader_args_builder_to_args");
    }
    /**
     * {@snippet :
     * GBytes* gsk_shader_args_builder_to_args(GskShaderArgsBuilder* builder);
     * }
     */
    public static MemorySegment gsk_shader_args_builder_to_args(MemorySegment builder) {
        var mh$ = gsk_shader_args_builder_to_args$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_free_to_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gsk_shader_args_builder_free_to_args$MH,"gsk_shader_args_builder_free_to_args");
    }
    /**
     * {@snippet :
     * GBytes* gsk_shader_args_builder_free_to_args(GskShaderArgsBuilder* builder);
     * }
     */
    public static MemorySegment gsk_shader_args_builder_free_to_args(MemorySegment builder) {
        var mh$ = gsk_shader_args_builder_free_to_args$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gsk_shader_args_builder_ref$MH,"gsk_shader_args_builder_ref");
    }
    /**
     * {@snippet :
     * GskShaderArgsBuilder* gsk_shader_args_builder_ref(GskShaderArgsBuilder* builder);
     * }
     */
    public static MemorySegment gsk_shader_args_builder_ref(MemorySegment builder) {
        var mh$ = gsk_shader_args_builder_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gsk_shader_args_builder_unref$MH,"gsk_shader_args_builder_unref");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_unref(GskShaderArgsBuilder* builder);
     * }
     */
    public static void gsk_shader_args_builder_unref(MemorySegment builder) {
        var mh$ = gsk_shader_args_builder_unref$MH();
        try {
            mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gsk_shader_args_builder_set_float$MH,"gsk_shader_args_builder_set_float");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_float(GskShaderArgsBuilder* builder, int idx, float value);
     * }
     */
    public static void gsk_shader_args_builder_set_float(MemorySegment builder, int idx, float value) {
        var mh$ = gsk_shader_args_builder_set_float$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gsk_shader_args_builder_set_int$MH,"gsk_shader_args_builder_set_int");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_int(GskShaderArgsBuilder* builder, int idx, gint32 value);
     * }
     */
    public static void gsk_shader_args_builder_set_int(MemorySegment builder, int idx, int value) {
        var mh$ = gsk_shader_args_builder_set_int$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gsk_shader_args_builder_set_uint$MH,"gsk_shader_args_builder_set_uint");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_uint(GskShaderArgsBuilder* builder, int idx, guint32 value);
     * }
     */
    public static void gsk_shader_args_builder_set_uint(MemorySegment builder, int idx, int value) {
        var mh$ = gsk_shader_args_builder_set_uint$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gsk_shader_args_builder_set_bool$MH,"gsk_shader_args_builder_set_bool");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_bool(GskShaderArgsBuilder* builder, int idx, gboolean value);
     * }
     */
    public static void gsk_shader_args_builder_set_bool(MemorySegment builder, int idx, int value) {
        var mh$ = gsk_shader_args_builder_set_bool$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gsk_shader_args_builder_set_vec2$MH,"gsk_shader_args_builder_set_vec2");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_vec2(GskShaderArgsBuilder* builder, int idx, const graphene_vec2_t* value);
     * }
     */
    public static void gsk_shader_args_builder_set_vec2(MemorySegment builder, int idx, MemorySegment value) {
        var mh$ = gsk_shader_args_builder_set_vec2$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gsk_shader_args_builder_set_vec3$MH,"gsk_shader_args_builder_set_vec3");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_vec3(GskShaderArgsBuilder* builder, int idx, const graphene_vec3_t* value);
     * }
     */
    public static void gsk_shader_args_builder_set_vec3(MemorySegment builder, int idx, MemorySegment value) {
        var mh$ = gsk_shader_args_builder_set_vec3$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gsk_shader_args_builder_set_vec4$MH,"gsk_shader_args_builder_set_vec4");
    }
    /**
     * {@snippet :
     * void gsk_shader_args_builder_set_vec4(GskShaderArgsBuilder* builder, int idx, const graphene_vec4_t* value);
     * }
     */
    public static void gsk_shader_args_builder_set_vec4(MemorySegment builder, int idx, MemorySegment value) {
        var mh$ = gsk_shader_args_builder_set_vec4$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gsk_render_node_get_type$MH,"gsk_render_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_render_node_get_type();
     * }
     */
    public static long gsk_render_node_get_type() {
        var mh$ = gsk_render_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_serialization_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gsk_serialization_error_quark$MH,"gsk_serialization_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gsk_serialization_error_quark();
     * }
     */
    public static int gsk_serialization_error_quark() {
        var mh$ = gsk_serialization_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gsk_render_node_ref$MH,"gsk_render_node_ref");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_render_node_ref(GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_render_node_ref(MemorySegment node) {
        var mh$ = gsk_render_node_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gsk_render_node_unref$MH,"gsk_render_node_unref");
    }
    /**
     * {@snippet :
     * void gsk_render_node_unref(GskRenderNode* node);
     * }
     */
    public static void gsk_render_node_unref(MemorySegment node) {
        var mh$ = gsk_render_node_unref$MH();
        try {
            mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_get_node_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gsk_render_node_get_node_type$MH,"gsk_render_node_get_node_type");
    }
    /**
     * {@snippet :
     * GskRenderNodeType gsk_render_node_get_node_type(const GskRenderNode* node);
     * }
     */
    public static int gsk_render_node_get_node_type(MemorySegment node) {
        var mh$ = gsk_render_node_get_node_type$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_get_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gsk_render_node_get_bounds$MH,"gsk_render_node_get_bounds");
    }
    /**
     * {@snippet :
     * void gsk_render_node_get_bounds(GskRenderNode* node, graphene_rect_t* bounds);
     * }
     */
    public static void gsk_render_node_get_bounds(MemorySegment node, MemorySegment bounds) {
        var mh$ = gsk_render_node_get_bounds$MH();
        try {
            mh$.invokeExact(node, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gsk_render_node_draw$MH,"gsk_render_node_draw");
    }
    /**
     * {@snippet :
     * void gsk_render_node_draw(GskRenderNode* node, cairo_t* cr);
     * }
     */
    public static void gsk_render_node_draw(MemorySegment node, MemorySegment cr) {
        var mh$ = gsk_render_node_draw$MH();
        try {
            mh$.invokeExact(node, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gsk_render_node_serialize$MH,"gsk_render_node_serialize");
    }
    /**
     * {@snippet :
     * GBytes* gsk_render_node_serialize(GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_render_node_serialize(MemorySegment node) {
        var mh$ = gsk_render_node_serialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_write_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gsk_render_node_write_to_file$MH,"gsk_render_node_write_to_file");
    }
    /**
     * {@snippet :
     * gboolean gsk_render_node_write_to_file(GskRenderNode* node, char* filename, GError** error);
     * }
     */
    public static int gsk_render_node_write_to_file(MemorySegment node, MemorySegment filename, MemorySegment error) {
        var mh$ = gsk_render_node_write_to_file$MH();
        try {
            return (int)mh$.invokeExact(node, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gsk_render_node_deserialize$MH,"gsk_render_node_deserialize");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_render_node_deserialize(GBytes* bytes, GskParseErrorFunc error_func, gpointer user_data);
     * }
     */
    public static MemorySegment gsk_render_node_deserialize(MemorySegment bytes, MemorySegment error_func, MemorySegment user_data) {
        var mh$ = gsk_render_node_deserialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bytes, error_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gsk_debug_node_get_type$MH,"gsk_debug_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_debug_node_get_type();
     * }
     */
    public static long gsk_debug_node_get_type() {
        var mh$ = gsk_debug_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gsk_debug_node_new$MH,"gsk_debug_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_debug_node_new(GskRenderNode* child, char* message);
     * }
     */
    public static MemorySegment gsk_debug_node_new(MemorySegment child, MemorySegment message) {
        var mh$ = gsk_debug_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gsk_debug_node_get_child$MH,"gsk_debug_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_debug_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_debug_node_get_child(MemorySegment node) {
        var mh$ = gsk_debug_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_get_message$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gsk_debug_node_get_message$MH,"gsk_debug_node_get_message");
    }
    /**
     * {@snippet :
     * char* gsk_debug_node_get_message(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_debug_node_get_message(MemorySegment node) {
        var mh$ = gsk_debug_node_get_message$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gsk_color_node_get_type$MH,"gsk_color_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_color_node_get_type();
     * }
     */
    public static long gsk_color_node_get_type() {
        var mh$ = gsk_color_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gsk_color_node_new$MH,"gsk_color_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_color_node_new(const GdkRGBA* rgba, const graphene_rect_t* bounds);
     * }
     */
    public static MemorySegment gsk_color_node_new(MemorySegment rgba, MemorySegment bounds) {
        var mh$ = gsk_color_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rgba, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gsk_color_node_get_color$MH,"gsk_color_node_get_color");
    }
    /**
     * {@snippet :
     * const GdkRGBA* gsk_color_node_get_color(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_color_node_get_color(MemorySegment node) {
        var mh$ = gsk_color_node_get_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_texture_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gsk_texture_node_get_type$MH,"gsk_texture_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_texture_node_get_type();
     * }
     */
    public static long gsk_texture_node_get_type() {
        var mh$ = gsk_texture_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_texture_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gsk_texture_node_new$MH,"gsk_texture_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_texture_node_new(GdkTexture* texture, const graphene_rect_t* bounds);
     * }
     */
    public static MemorySegment gsk_texture_node_new(MemorySegment texture, MemorySegment bounds) {
        var mh$ = gsk_texture_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(texture, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_texture_node_get_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gsk_texture_node_get_texture$MH,"gsk_texture_node_get_texture");
    }
    /**
     * {@snippet :
     * GdkTexture* gsk_texture_node_get_texture(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_texture_node_get_texture(MemorySegment node) {
        var mh$ = gsk_texture_node_get_texture$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gsk_linear_gradient_node_get_type$MH,"gsk_linear_gradient_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_linear_gradient_node_get_type();
     * }
     */
    public static long gsk_linear_gradient_node_get_type() {
        var mh$ = gsk_linear_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gsk_linear_gradient_node_new$MH,"gsk_linear_gradient_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_linear_gradient_node_new(const graphene_rect_t* bounds, const graphene_point_t* start, const graphene_point_t* end, const GskColorStop* color_stops, gsize n_color_stops);
     * }
     */
    public static MemorySegment gsk_linear_gradient_node_new(MemorySegment bounds, MemorySegment start, MemorySegment end, MemorySegment color_stops, long n_color_stops) {
        var mh$ = gsk_linear_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gsk_linear_gradient_node_get_start$MH,"gsk_linear_gradient_node_get_start");
    }
    /**
     * {@snippet :
     * const graphene_point_t* gsk_linear_gradient_node_get_start(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_linear_gradient_node_get_start(MemorySegment node) {
        var mh$ = gsk_linear_gradient_node_get_start$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gsk_linear_gradient_node_get_end$MH,"gsk_linear_gradient_node_get_end");
    }
    /**
     * {@snippet :
     * const graphene_point_t* gsk_linear_gradient_node_get_end(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_linear_gradient_node_get_end(MemorySegment node) {
        var mh$ = gsk_linear_gradient_node_get_end$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_n_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gsk_linear_gradient_node_get_n_color_stops$MH,"gsk_linear_gradient_node_get_n_color_stops");
    }
    /**
     * {@snippet :
     * gsize gsk_linear_gradient_node_get_n_color_stops(const GskRenderNode* node);
     * }
     */
    public static long gsk_linear_gradient_node_get_n_color_stops(MemorySegment node) {
        var mh$ = gsk_linear_gradient_node_get_n_color_stops$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gsk_linear_gradient_node_get_color_stops$MH,"gsk_linear_gradient_node_get_color_stops");
    }
    /**
     * {@snippet :
     * const GskColorStop* gsk_linear_gradient_node_get_color_stops(const GskRenderNode* node, gsize* n_stops);
     * }
     */
    public static MemorySegment gsk_linear_gradient_node_get_color_stops(MemorySegment node, MemorySegment n_stops) {
        var mh$ = gsk_linear_gradient_node_get_color_stops$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_linear_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gsk_repeating_linear_gradient_node_get_type$MH,"gsk_repeating_linear_gradient_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_repeating_linear_gradient_node_get_type();
     * }
     */
    public static long gsk_repeating_linear_gradient_node_get_type() {
        var mh$ = gsk_repeating_linear_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_linear_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gsk_repeating_linear_gradient_node_new$MH,"gsk_repeating_linear_gradient_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_repeating_linear_gradient_node_new(const graphene_rect_t* bounds, const graphene_point_t* start, const graphene_point_t* end, const GskColorStop* color_stops, gsize n_color_stops);
     * }
     */
    public static MemorySegment gsk_repeating_linear_gradient_node_new(MemorySegment bounds, MemorySegment start, MemorySegment end, MemorySegment color_stops, long n_color_stops) {
        var mh$ = gsk_repeating_linear_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gsk_conic_gradient_node_get_type$MH,"gsk_conic_gradient_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_conic_gradient_node_get_type();
     * }
     */
    public static long gsk_conic_gradient_node_get_type() {
        var mh$ = gsk_conic_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gsk_conic_gradient_node_new$MH,"gsk_conic_gradient_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_conic_gradient_node_new(const graphene_rect_t* bounds, const graphene_point_t* center, float rotation, const GskColorStop* color_stops, gsize n_color_stops);
     * }
     */
    public static MemorySegment gsk_conic_gradient_node_new(MemorySegment bounds, MemorySegment center, float rotation, MemorySegment color_stops, long n_color_stops) {
        var mh$ = gsk_conic_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds, center, rotation, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gsk_conic_gradient_node_get_center$MH,"gsk_conic_gradient_node_get_center");
    }
    /**
     * {@snippet :
     * const graphene_point_t* gsk_conic_gradient_node_get_center(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_conic_gradient_node_get_center(MemorySegment node) {
        var mh$ = gsk_conic_gradient_node_get_center$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_rotation$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gsk_conic_gradient_node_get_rotation$MH,"gsk_conic_gradient_node_get_rotation");
    }
    /**
     * {@snippet :
     * float gsk_conic_gradient_node_get_rotation(const GskRenderNode* node);
     * }
     */
    public static float gsk_conic_gradient_node_get_rotation(MemorySegment node) {
        var mh$ = gsk_conic_gradient_node_get_rotation$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gsk_conic_gradient_node_get_angle$MH,"gsk_conic_gradient_node_get_angle");
    }
    /**
     * {@snippet :
     * float gsk_conic_gradient_node_get_angle(const GskRenderNode* node);
     * }
     */
    public static float gsk_conic_gradient_node_get_angle(MemorySegment node) {
        var mh$ = gsk_conic_gradient_node_get_angle$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_n_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gsk_conic_gradient_node_get_n_color_stops$MH,"gsk_conic_gradient_node_get_n_color_stops");
    }
    /**
     * {@snippet :
     * gsize gsk_conic_gradient_node_get_n_color_stops(const GskRenderNode* node);
     * }
     */
    public static long gsk_conic_gradient_node_get_n_color_stops(MemorySegment node) {
        var mh$ = gsk_conic_gradient_node_get_n_color_stops$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gsk_conic_gradient_node_get_color_stops$MH,"gsk_conic_gradient_node_get_color_stops");
    }
    /**
     * {@snippet :
     * const GskColorStop* gsk_conic_gradient_node_get_color_stops(const GskRenderNode* node, gsize* n_stops);
     * }
     */
    public static MemorySegment gsk_conic_gradient_node_get_color_stops(MemorySegment node, MemorySegment n_stops) {
        var mh$ = gsk_conic_gradient_node_get_color_stops$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gsk_radial_gradient_node_get_type$MH,"gsk_radial_gradient_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_radial_gradient_node_get_type();
     * }
     */
    public static long gsk_radial_gradient_node_get_type() {
        var mh$ = gsk_radial_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gsk_radial_gradient_node_new$MH,"gsk_radial_gradient_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_radial_gradient_node_new(const graphene_rect_t* bounds, const graphene_point_t* center, float hradius, float vradius, float start, float end, const GskColorStop* color_stops, gsize n_color_stops);
     * }
     */
    public static MemorySegment gsk_radial_gradient_node_new(MemorySegment bounds, MemorySegment center, float hradius, float vradius, float start, float end, MemorySegment color_stops, long n_color_stops) {
        var mh$ = gsk_radial_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds, center, hradius, vradius, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_n_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gsk_radial_gradient_node_get_n_color_stops$MH,"gsk_radial_gradient_node_get_n_color_stops");
    }
    /**
     * {@snippet :
     * gsize gsk_radial_gradient_node_get_n_color_stops(const GskRenderNode* node);
     * }
     */
    public static long gsk_radial_gradient_node_get_n_color_stops(MemorySegment node) {
        var mh$ = gsk_radial_gradient_node_get_n_color_stops$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gsk_radial_gradient_node_get_color_stops$MH,"gsk_radial_gradient_node_get_color_stops");
    }
    /**
     * {@snippet :
     * const GskColorStop* gsk_radial_gradient_node_get_color_stops(const GskRenderNode* node, gsize* n_stops);
     * }
     */
    public static MemorySegment gsk_radial_gradient_node_get_color_stops(MemorySegment node, MemorySegment n_stops) {
        var mh$ = gsk_radial_gradient_node_get_color_stops$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gsk_radial_gradient_node_get_center$MH,"gsk_radial_gradient_node_get_center");
    }
    /**
     * {@snippet :
     * const graphene_point_t* gsk_radial_gradient_node_get_center(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_radial_gradient_node_get_center(MemorySegment node) {
        var mh$ = gsk_radial_gradient_node_get_center$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_hradius$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gsk_radial_gradient_node_get_hradius$MH,"gsk_radial_gradient_node_get_hradius");
    }
    /**
     * {@snippet :
     * float gsk_radial_gradient_node_get_hradius(const GskRenderNode* node);
     * }
     */
    public static float gsk_radial_gradient_node_get_hradius(MemorySegment node) {
        var mh$ = gsk_radial_gradient_node_get_hradius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_vradius$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gsk_radial_gradient_node_get_vradius$MH,"gsk_radial_gradient_node_get_vradius");
    }
    /**
     * {@snippet :
     * float gsk_radial_gradient_node_get_vradius(const GskRenderNode* node);
     * }
     */
    public static float gsk_radial_gradient_node_get_vradius(MemorySegment node) {
        var mh$ = gsk_radial_gradient_node_get_vradius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gsk_radial_gradient_node_get_start$MH,"gsk_radial_gradient_node_get_start");
    }
    /**
     * {@snippet :
     * float gsk_radial_gradient_node_get_start(const GskRenderNode* node);
     * }
     */
    public static float gsk_radial_gradient_node_get_start(MemorySegment node) {
        var mh$ = gsk_radial_gradient_node_get_start$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gsk_radial_gradient_node_get_end$MH,"gsk_radial_gradient_node_get_end");
    }
    /**
     * {@snippet :
     * float gsk_radial_gradient_node_get_end(const GskRenderNode* node);
     * }
     */
    public static float gsk_radial_gradient_node_get_end(MemorySegment node) {
        var mh$ = gsk_radial_gradient_node_get_end$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_radial_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gsk_repeating_radial_gradient_node_get_type$MH,"gsk_repeating_radial_gradient_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_repeating_radial_gradient_node_get_type();
     * }
     */
    public static long gsk_repeating_radial_gradient_node_get_type() {
        var mh$ = gsk_repeating_radial_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_radial_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gsk_repeating_radial_gradient_node_new$MH,"gsk_repeating_radial_gradient_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_repeating_radial_gradient_node_new(const graphene_rect_t* bounds, const graphene_point_t* center, float hradius, float vradius, float start, float end, const GskColorStop* color_stops, gsize n_color_stops);
     * }
     */
    public static MemorySegment gsk_repeating_radial_gradient_node_new(MemorySegment bounds, MemorySegment center, float hradius, float vradius, float start, float end, MemorySegment color_stops, long n_color_stops) {
        var mh$ = gsk_repeating_radial_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds, center, hradius, vradius, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gsk_border_node_get_type$MH,"gsk_border_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_border_node_get_type();
     * }
     */
    public static long gsk_border_node_get_type() {
        var mh$ = gsk_border_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gsk_border_node_new$MH,"gsk_border_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_border_node_new(const GskRoundedRect* outline, float border_width[4], const GdkRGBA border_color[4]);
     * }
     */
    public static MemorySegment gsk_border_node_new(MemorySegment outline, MemorySegment border_width, MemorySegment border_color) {
        var mh$ = gsk_border_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(outline, border_width, border_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_outline$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gsk_border_node_get_outline$MH,"gsk_border_node_get_outline");
    }
    /**
     * {@snippet :
     * const GskRoundedRect* gsk_border_node_get_outline(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_border_node_get_outline(MemorySegment node) {
        var mh$ = gsk_border_node_get_outline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_widths$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gsk_border_node_get_widths$MH,"gsk_border_node_get_widths");
    }
    /**
     * {@snippet :
     * float* gsk_border_node_get_widths(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_border_node_get_widths(MemorySegment node) {
        var mh$ = gsk_border_node_get_widths$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_colors$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gsk_border_node_get_colors$MH,"gsk_border_node_get_colors");
    }
    /**
     * {@snippet :
     * const GdkRGBA* gsk_border_node_get_colors(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_border_node_get_colors(MemorySegment node) {
        var mh$ = gsk_border_node_get_colors$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gsk_inset_shadow_node_get_type$MH,"gsk_inset_shadow_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_inset_shadow_node_get_type();
     * }
     */
    public static long gsk_inset_shadow_node_get_type() {
        var mh$ = gsk_inset_shadow_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gsk_inset_shadow_node_new$MH,"gsk_inset_shadow_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_inset_shadow_node_new(const GskRoundedRect* outline, const GdkRGBA* color, float dx, float dy, float spread, float blur_radius);
     * }
     */
    public static MemorySegment gsk_inset_shadow_node_new(MemorySegment outline, MemorySegment color, float dx, float dy, float spread, float blur_radius) {
        var mh$ = gsk_inset_shadow_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_outline$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gsk_inset_shadow_node_get_outline$MH,"gsk_inset_shadow_node_get_outline");
    }
    /**
     * {@snippet :
     * const GskRoundedRect* gsk_inset_shadow_node_get_outline(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_inset_shadow_node_get_outline(MemorySegment node) {
        var mh$ = gsk_inset_shadow_node_get_outline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gsk_inset_shadow_node_get_color$MH,"gsk_inset_shadow_node_get_color");
    }
    /**
     * {@snippet :
     * const GdkRGBA* gsk_inset_shadow_node_get_color(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_inset_shadow_node_get_color(MemorySegment node) {
        var mh$ = gsk_inset_shadow_node_get_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_dx$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gsk_inset_shadow_node_get_dx$MH,"gsk_inset_shadow_node_get_dx");
    }
    /**
     * {@snippet :
     * float gsk_inset_shadow_node_get_dx(const GskRenderNode* node);
     * }
     */
    public static float gsk_inset_shadow_node_get_dx(MemorySegment node) {
        var mh$ = gsk_inset_shadow_node_get_dx$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_dy$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gsk_inset_shadow_node_get_dy$MH,"gsk_inset_shadow_node_get_dy");
    }
    /**
     * {@snippet :
     * float gsk_inset_shadow_node_get_dy(const GskRenderNode* node);
     * }
     */
    public static float gsk_inset_shadow_node_get_dy(MemorySegment node) {
        var mh$ = gsk_inset_shadow_node_get_dy$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_spread$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gsk_inset_shadow_node_get_spread$MH,"gsk_inset_shadow_node_get_spread");
    }
    /**
     * {@snippet :
     * float gsk_inset_shadow_node_get_spread(const GskRenderNode* node);
     * }
     */
    public static float gsk_inset_shadow_node_get_spread(MemorySegment node) {
        var mh$ = gsk_inset_shadow_node_get_spread$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_blur_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gsk_inset_shadow_node_get_blur_radius$MH,"gsk_inset_shadow_node_get_blur_radius");
    }
    /**
     * {@snippet :
     * float gsk_inset_shadow_node_get_blur_radius(const GskRenderNode* node);
     * }
     */
    public static float gsk_inset_shadow_node_get_blur_radius(MemorySegment node) {
        var mh$ = gsk_inset_shadow_node_get_blur_radius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gsk_outset_shadow_node_get_type$MH,"gsk_outset_shadow_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_outset_shadow_node_get_type();
     * }
     */
    public static long gsk_outset_shadow_node_get_type() {
        var mh$ = gsk_outset_shadow_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gsk_outset_shadow_node_new$MH,"gsk_outset_shadow_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_outset_shadow_node_new(const GskRoundedRect* outline, const GdkRGBA* color, float dx, float dy, float spread, float blur_radius);
     * }
     */
    public static MemorySegment gsk_outset_shadow_node_new(MemorySegment outline, MemorySegment color, float dx, float dy, float spread, float blur_radius) {
        var mh$ = gsk_outset_shadow_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_outline$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gsk_outset_shadow_node_get_outline$MH,"gsk_outset_shadow_node_get_outline");
    }
    /**
     * {@snippet :
     * const GskRoundedRect* gsk_outset_shadow_node_get_outline(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_outset_shadow_node_get_outline(MemorySegment node) {
        var mh$ = gsk_outset_shadow_node_get_outline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gsk_outset_shadow_node_get_color$MH,"gsk_outset_shadow_node_get_color");
    }
    /**
     * {@snippet :
     * const GdkRGBA* gsk_outset_shadow_node_get_color(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_outset_shadow_node_get_color(MemorySegment node) {
        var mh$ = gsk_outset_shadow_node_get_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_dx$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gsk_outset_shadow_node_get_dx$MH,"gsk_outset_shadow_node_get_dx");
    }
    /**
     * {@snippet :
     * float gsk_outset_shadow_node_get_dx(const GskRenderNode* node);
     * }
     */
    public static float gsk_outset_shadow_node_get_dx(MemorySegment node) {
        var mh$ = gsk_outset_shadow_node_get_dx$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_dy$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gsk_outset_shadow_node_get_dy$MH,"gsk_outset_shadow_node_get_dy");
    }
    /**
     * {@snippet :
     * float gsk_outset_shadow_node_get_dy(const GskRenderNode* node);
     * }
     */
    public static float gsk_outset_shadow_node_get_dy(MemorySegment node) {
        var mh$ = gsk_outset_shadow_node_get_dy$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_spread$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gsk_outset_shadow_node_get_spread$MH,"gsk_outset_shadow_node_get_spread");
    }
    /**
     * {@snippet :
     * float gsk_outset_shadow_node_get_spread(const GskRenderNode* node);
     * }
     */
    public static float gsk_outset_shadow_node_get_spread(MemorySegment node) {
        var mh$ = gsk_outset_shadow_node_get_spread$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_blur_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gsk_outset_shadow_node_get_blur_radius$MH,"gsk_outset_shadow_node_get_blur_radius");
    }
    /**
     * {@snippet :
     * float gsk_outset_shadow_node_get_blur_radius(const GskRenderNode* node);
     * }
     */
    public static float gsk_outset_shadow_node_get_blur_radius(MemorySegment node) {
        var mh$ = gsk_outset_shadow_node_get_blur_radius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gsk_cairo_node_get_type$MH,"gsk_cairo_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_cairo_node_get_type();
     * }
     */
    public static long gsk_cairo_node_get_type() {
        var mh$ = gsk_cairo_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gsk_cairo_node_new$MH,"gsk_cairo_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_cairo_node_new(const graphene_rect_t* bounds);
     * }
     */
    public static MemorySegment gsk_cairo_node_new(MemorySegment bounds) {
        var mh$ = gsk_cairo_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_get_draw_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gsk_cairo_node_get_draw_context$MH,"gsk_cairo_node_get_draw_context");
    }
    /**
     * {@snippet :
     * cairo_t* gsk_cairo_node_get_draw_context(GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_cairo_node_get_draw_context(MemorySegment node) {
        var mh$ = gsk_cairo_node_get_draw_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gsk_cairo_node_get_surface$MH,"gsk_cairo_node_get_surface");
    }
    /**
     * {@snippet :
     * cairo_surface_t* gsk_cairo_node_get_surface(GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_cairo_node_get_surface(MemorySegment node) {
        var mh$ = gsk_cairo_node_get_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gsk_container_node_get_type$MH,"gsk_container_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_container_node_get_type();
     * }
     */
    public static long gsk_container_node_get_type() {
        var mh$ = gsk_container_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gsk_container_node_new$MH,"gsk_container_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_container_node_new(GskRenderNode** children, guint n_children);
     * }
     */
    public static MemorySegment gsk_container_node_new(MemorySegment children, int n_children) {
        var mh$ = gsk_container_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(children, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_get_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gsk_container_node_get_n_children$MH,"gsk_container_node_get_n_children");
    }
    /**
     * {@snippet :
     * guint gsk_container_node_get_n_children(const GskRenderNode* node);
     * }
     */
    public static int gsk_container_node_get_n_children(MemorySegment node) {
        var mh$ = gsk_container_node_get_n_children$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gsk_container_node_get_child$MH,"gsk_container_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_container_node_get_child(const GskRenderNode* node, guint idx);
     * }
     */
    public static MemorySegment gsk_container_node_get_child(MemorySegment node, int idx) {
        var mh$ = gsk_container_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gsk_transform_node_get_type$MH,"gsk_transform_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_transform_node_get_type();
     * }
     */
    public static long gsk_transform_node_get_type() {
        var mh$ = gsk_transform_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gsk_transform_node_new$MH,"gsk_transform_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_transform_node_new(GskRenderNode* child, GskTransform* transform);
     * }
     */
    public static MemorySegment gsk_transform_node_new(MemorySegment child, MemorySegment transform) {
        var mh$ = gsk_transform_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gsk_transform_node_get_child$MH,"gsk_transform_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_transform_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_transform_node_get_child(MemorySegment node) {
        var mh$ = gsk_transform_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_get_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gsk_transform_node_get_transform$MH,"gsk_transform_node_get_transform");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_node_get_transform(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_transform_node_get_transform(MemorySegment node) {
        var mh$ = gsk_transform_node_get_transform$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gsk_opacity_node_get_type$MH,"gsk_opacity_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_opacity_node_get_type();
     * }
     */
    public static long gsk_opacity_node_get_type() {
        var mh$ = gsk_opacity_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gsk_opacity_node_new$MH,"gsk_opacity_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_opacity_node_new(GskRenderNode* child, float opacity);
     * }
     */
    public static MemorySegment gsk_opacity_node_new(MemorySegment child, float opacity) {
        var mh$ = gsk_opacity_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gsk_opacity_node_get_child$MH,"gsk_opacity_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_opacity_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_opacity_node_get_child(MemorySegment node) {
        var mh$ = gsk_opacity_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gsk_opacity_node_get_opacity$MH,"gsk_opacity_node_get_opacity");
    }
    /**
     * {@snippet :
     * float gsk_opacity_node_get_opacity(const GskRenderNode* node);
     * }
     */
    public static float gsk_opacity_node_get_opacity(MemorySegment node) {
        var mh$ = gsk_opacity_node_get_opacity$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gsk_color_matrix_node_get_type$MH,"gsk_color_matrix_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_color_matrix_node_get_type();
     * }
     */
    public static long gsk_color_matrix_node_get_type() {
        var mh$ = gsk_color_matrix_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gsk_color_matrix_node_new$MH,"gsk_color_matrix_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_color_matrix_node_new(GskRenderNode* child, const graphene_matrix_t* color_matrix, const graphene_vec4_t* color_offset);
     * }
     */
    public static MemorySegment gsk_color_matrix_node_new(MemorySegment child, MemorySegment color_matrix, MemorySegment color_offset) {
        var mh$ = gsk_color_matrix_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, color_matrix, color_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gsk_color_matrix_node_get_child$MH,"gsk_color_matrix_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_color_matrix_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_color_matrix_node_get_child(MemorySegment node) {
        var mh$ = gsk_color_matrix_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_color_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gsk_color_matrix_node_get_color_matrix$MH,"gsk_color_matrix_node_get_color_matrix");
    }
    /**
     * {@snippet :
     * const graphene_matrix_t* gsk_color_matrix_node_get_color_matrix(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_color_matrix_node_get_color_matrix(MemorySegment node) {
        var mh$ = gsk_color_matrix_node_get_color_matrix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_color_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gsk_color_matrix_node_get_color_offset$MH,"gsk_color_matrix_node_get_color_offset");
    }
    /**
     * {@snippet :
     * const graphene_vec4_t* gsk_color_matrix_node_get_color_offset(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_color_matrix_node_get_color_offset(MemorySegment node) {
        var mh$ = gsk_color_matrix_node_get_color_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gsk_repeat_node_get_type$MH,"gsk_repeat_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_repeat_node_get_type();
     * }
     */
    public static long gsk_repeat_node_get_type() {
        var mh$ = gsk_repeat_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gsk_repeat_node_new$MH,"gsk_repeat_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_repeat_node_new(const graphene_rect_t* bounds, GskRenderNode* child, const graphene_rect_t* child_bounds);
     * }
     */
    public static MemorySegment gsk_repeat_node_new(MemorySegment bounds, MemorySegment child, MemorySegment child_bounds) {
        var mh$ = gsk_repeat_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bounds, child, child_bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gsk_repeat_node_get_child$MH,"gsk_repeat_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_repeat_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_repeat_node_get_child(MemorySegment node) {
        var mh$ = gsk_repeat_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_get_child_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gsk_repeat_node_get_child_bounds$MH,"gsk_repeat_node_get_child_bounds");
    }
    /**
     * {@snippet :
     * const graphene_rect_t* gsk_repeat_node_get_child_bounds(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_repeat_node_get_child_bounds(MemorySegment node) {
        var mh$ = gsk_repeat_node_get_child_bounds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gsk_clip_node_get_type$MH,"gsk_clip_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_clip_node_get_type();
     * }
     */
    public static long gsk_clip_node_get_type() {
        var mh$ = gsk_clip_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gsk_clip_node_new$MH,"gsk_clip_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_clip_node_new(GskRenderNode* child, const graphene_rect_t* clip);
     * }
     */
    public static MemorySegment gsk_clip_node_new(MemorySegment child, MemorySegment clip) {
        var mh$ = gsk_clip_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gsk_clip_node_get_child$MH,"gsk_clip_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_clip_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_clip_node_get_child(MemorySegment node) {
        var mh$ = gsk_clip_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gsk_clip_node_get_clip$MH,"gsk_clip_node_get_clip");
    }
    /**
     * {@snippet :
     * const graphene_rect_t* gsk_clip_node_get_clip(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_clip_node_get_clip(MemorySegment node) {
        var mh$ = gsk_clip_node_get_clip$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gsk_rounded_clip_node_get_type$MH,"gsk_rounded_clip_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_rounded_clip_node_get_type();
     * }
     */
    public static long gsk_rounded_clip_node_get_type() {
        var mh$ = gsk_rounded_clip_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gsk_rounded_clip_node_new$MH,"gsk_rounded_clip_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_rounded_clip_node_new(GskRenderNode* child, const GskRoundedRect* clip);
     * }
     */
    public static MemorySegment gsk_rounded_clip_node_new(MemorySegment child, MemorySegment clip) {
        var mh$ = gsk_rounded_clip_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gsk_rounded_clip_node_get_child$MH,"gsk_rounded_clip_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_rounded_clip_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_rounded_clip_node_get_child(MemorySegment node) {
        var mh$ = gsk_rounded_clip_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gsk_rounded_clip_node_get_clip$MH,"gsk_rounded_clip_node_get_clip");
    }
    /**
     * {@snippet :
     * const GskRoundedRect* gsk_rounded_clip_node_get_clip(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_rounded_clip_node_get_clip(MemorySegment node) {
        var mh$ = gsk_rounded_clip_node_get_clip$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gsk_shadow_node_get_type$MH,"gsk_shadow_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_shadow_node_get_type();
     * }
     */
    public static long gsk_shadow_node_get_type() {
        var mh$ = gsk_shadow_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gsk_shadow_node_new$MH,"gsk_shadow_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_shadow_node_new(GskRenderNode* child, const GskShadow* shadows, gsize n_shadows);
     * }
     */
    public static MemorySegment gsk_shadow_node_new(MemorySegment child, MemorySegment shadows, long n_shadows) {
        var mh$ = gsk_shadow_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, shadows, n_shadows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gsk_shadow_node_get_child$MH,"gsk_shadow_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_shadow_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_shadow_node_get_child(MemorySegment node) {
        var mh$ = gsk_shadow_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gsk_shadow_node_get_shadow$MH,"gsk_shadow_node_get_shadow");
    }
    /**
     * {@snippet :
     * const GskShadow* gsk_shadow_node_get_shadow(const GskRenderNode* node, gsize i);
     * }
     */
    public static MemorySegment gsk_shadow_node_get_shadow(MemorySegment node, long i) {
        var mh$ = gsk_shadow_node_get_shadow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_n_shadows$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gsk_shadow_node_get_n_shadows$MH,"gsk_shadow_node_get_n_shadows");
    }
    /**
     * {@snippet :
     * gsize gsk_shadow_node_get_n_shadows(const GskRenderNode* node);
     * }
     */
    public static long gsk_shadow_node_get_n_shadows(MemorySegment node) {
        var mh$ = gsk_shadow_node_get_n_shadows$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gsk_blend_node_get_type$MH,"gsk_blend_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_blend_node_get_type();
     * }
     */
    public static long gsk_blend_node_get_type() {
        var mh$ = gsk_blend_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gsk_blend_node_new$MH,"gsk_blend_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_blend_node_new(GskRenderNode* bottom, GskRenderNode* top, GskBlendMode blend_mode);
     * }
     */
    public static MemorySegment gsk_blend_node_new(MemorySegment bottom, MemorySegment top, int blend_mode) {
        var mh$ = gsk_blend_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bottom, top, blend_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_bottom_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gsk_blend_node_get_bottom_child$MH,"gsk_blend_node_get_bottom_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_blend_node_get_bottom_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_blend_node_get_bottom_child(MemorySegment node) {
        var mh$ = gsk_blend_node_get_bottom_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_top_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gsk_blend_node_get_top_child$MH,"gsk_blend_node_get_top_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_blend_node_get_top_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_blend_node_get_top_child(MemorySegment node) {
        var mh$ = gsk_blend_node_get_top_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_blend_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gsk_blend_node_get_blend_mode$MH,"gsk_blend_node_get_blend_mode");
    }
    /**
     * {@snippet :
     * GskBlendMode gsk_blend_node_get_blend_mode(const GskRenderNode* node);
     * }
     */
    public static int gsk_blend_node_get_blend_mode(MemorySegment node) {
        var mh$ = gsk_blend_node_get_blend_mode$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gsk_cross_fade_node_get_type$MH,"gsk_cross_fade_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_cross_fade_node_get_type();
     * }
     */
    public static long gsk_cross_fade_node_get_type() {
        var mh$ = gsk_cross_fade_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gsk_cross_fade_node_new$MH,"gsk_cross_fade_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_cross_fade_node_new(GskRenderNode* start, GskRenderNode* end, float progress);
     * }
     */
    public static MemorySegment gsk_cross_fade_node_new(MemorySegment start, MemorySegment end, float progress) {
        var mh$ = gsk_cross_fade_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end, progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gsk_cross_fade_node_get_start_child$MH,"gsk_cross_fade_node_get_start_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_cross_fade_node_get_start_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_cross_fade_node_get_start_child(MemorySegment node) {
        var mh$ = gsk_cross_fade_node_get_start_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gsk_cross_fade_node_get_end_child$MH,"gsk_cross_fade_node_get_end_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_cross_fade_node_get_end_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_cross_fade_node_get_end_child(MemorySegment node) {
        var mh$ = gsk_cross_fade_node_get_end_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_progress$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gsk_cross_fade_node_get_progress$MH,"gsk_cross_fade_node_get_progress");
    }
    /**
     * {@snippet :
     * float gsk_cross_fade_node_get_progress(const GskRenderNode* node);
     * }
     */
    public static float gsk_cross_fade_node_get_progress(MemorySegment node) {
        var mh$ = gsk_cross_fade_node_get_progress$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gsk_text_node_get_type$MH,"gsk_text_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_text_node_get_type();
     * }
     */
    public static long gsk_text_node_get_type() {
        var mh$ = gsk_text_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gsk_text_node_new$MH,"gsk_text_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_text_node_new(PangoFont* font, PangoGlyphString* glyphs, const GdkRGBA* color, const graphene_point_t* offset);
     * }
     */
    public static MemorySegment gsk_text_node_new(MemorySegment font, MemorySegment glyphs, MemorySegment color, MemorySegment offset) {
        var mh$ = gsk_text_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, glyphs, color, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gsk_text_node_get_font$MH,"gsk_text_node_get_font");
    }
    /**
     * {@snippet :
     * PangoFont* gsk_text_node_get_font(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_text_node_get_font(MemorySegment node) {
        var mh$ = gsk_text_node_get_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_has_color_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gsk_text_node_has_color_glyphs$MH,"gsk_text_node_has_color_glyphs");
    }
    /**
     * {@snippet :
     * gboolean gsk_text_node_has_color_glyphs(const GskRenderNode* node);
     * }
     */
    public static int gsk_text_node_has_color_glyphs(MemorySegment node) {
        var mh$ = gsk_text_node_has_color_glyphs$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_num_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gsk_text_node_get_num_glyphs$MH,"gsk_text_node_get_num_glyphs");
    }
    /**
     * {@snippet :
     * guint gsk_text_node_get_num_glyphs(const GskRenderNode* node);
     * }
     */
    public static int gsk_text_node_get_num_glyphs(MemorySegment node) {
        var mh$ = gsk_text_node_get_num_glyphs$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gsk_text_node_get_glyphs$MH,"gsk_text_node_get_glyphs");
    }
    /**
     * {@snippet :
     * const PangoGlyphInfo* gsk_text_node_get_glyphs(const GskRenderNode* node, guint* n_glyphs);
     * }
     */
    public static MemorySegment gsk_text_node_get_glyphs(MemorySegment node, MemorySegment n_glyphs) {
        var mh$ = gsk_text_node_get_glyphs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, n_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gsk_text_node_get_color$MH,"gsk_text_node_get_color");
    }
    /**
     * {@snippet :
     * const GdkRGBA* gsk_text_node_get_color(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_text_node_get_color(MemorySegment node) {
        var mh$ = gsk_text_node_get_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gsk_text_node_get_offset$MH,"gsk_text_node_get_offset");
    }
    /**
     * {@snippet :
     * const graphene_point_t* gsk_text_node_get_offset(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_text_node_get_offset(MemorySegment node) {
        var mh$ = gsk_text_node_get_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gsk_blur_node_get_type$MH,"gsk_blur_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_blur_node_get_type();
     * }
     */
    public static long gsk_blur_node_get_type() {
        var mh$ = gsk_blur_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gsk_blur_node_new$MH,"gsk_blur_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_blur_node_new(GskRenderNode* child, float radius);
     * }
     */
    public static MemorySegment gsk_blur_node_new(MemorySegment child, float radius) {
        var mh$ = gsk_blur_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gsk_blur_node_get_child$MH,"gsk_blur_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_blur_node_get_child(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_blur_node_get_child(MemorySegment node) {
        var mh$ = gsk_blur_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_get_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gsk_blur_node_get_radius$MH,"gsk_blur_node_get_radius");
    }
    /**
     * {@snippet :
     * float gsk_blur_node_get_radius(const GskRenderNode* node);
     * }
     */
    public static float gsk_blur_node_get_radius(MemorySegment node) {
        var mh$ = gsk_blur_node_get_radius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gsk_gl_shader_node_get_type$MH,"gsk_gl_shader_node_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_gl_shader_node_get_type();
     * }
     */
    public static long gsk_gl_shader_node_get_type() {
        var mh$ = gsk_gl_shader_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gsk_gl_shader_node_new$MH,"gsk_gl_shader_node_new");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_gl_shader_node_new(GskGLShader* shader, const graphene_rect_t* bounds, GBytes* args, GskRenderNode** children, guint n_children);
     * }
     */
    public static MemorySegment gsk_gl_shader_node_new(MemorySegment shader, MemorySegment bounds, MemorySegment args, MemorySegment children, int n_children) {
        var mh$ = gsk_gl_shader_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shader, bounds, args, children, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gsk_gl_shader_node_get_n_children$MH,"gsk_gl_shader_node_get_n_children");
    }
    /**
     * {@snippet :
     * guint gsk_gl_shader_node_get_n_children(const GskRenderNode* node);
     * }
     */
    public static int gsk_gl_shader_node_get_n_children(MemorySegment node) {
        var mh$ = gsk_gl_shader_node_get_n_children$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gsk_gl_shader_node_get_child$MH,"gsk_gl_shader_node_get_child");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_gl_shader_node_get_child(const GskRenderNode* node, guint idx);
     * }
     */
    public static MemorySegment gsk_gl_shader_node_get_child(MemorySegment node, int idx) {
        var mh$ = gsk_gl_shader_node_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gsk_gl_shader_node_get_args$MH,"gsk_gl_shader_node_get_args");
    }
    /**
     * {@snippet :
     * GBytes* gsk_gl_shader_node_get_args(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_gl_shader_node_get_args(MemorySegment node) {
        var mh$ = gsk_gl_shader_node_get_args$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_shader$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gsk_gl_shader_node_get_shader$MH,"gsk_gl_shader_node_get_shader");
    }
    /**
     * {@snippet :
     * GskGLShader* gsk_gl_shader_node_get_shader(const GskRenderNode* node);
     * }
     */
    public static MemorySegment gsk_gl_shader_node_get_shader(MemorySegment node) {
        var mh$ = gsk_gl_shader_node_get_shader$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_set_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gsk_value_set_render_node$MH,"gsk_value_set_render_node");
    }
    /**
     * {@snippet :
     * void gsk_value_set_render_node(GValue* value, GskRenderNode* node);
     * }
     */
    public static void gsk_value_set_render_node(MemorySegment value, MemorySegment node) {
        var mh$ = gsk_value_set_render_node$MH();
        try {
            mh$.invokeExact(value, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_take_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gsk_value_take_render_node$MH,"gsk_value_take_render_node");
    }
    /**
     * {@snippet :
     * void gsk_value_take_render_node(GValue* value, GskRenderNode* node);
     * }
     */
    public static void gsk_value_take_render_node(MemorySegment value, MemorySegment node) {
        var mh$ = gsk_value_take_render_node$MH();
        try {
            mh$.invokeExact(value, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_get_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gsk_value_get_render_node$MH,"gsk_value_get_render_node");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_value_get_render_node(const GValue* value);
     * }
     */
    public static MemorySegment gsk_value_get_render_node(MemorySegment value) {
        var mh$ = gsk_value_get_render_node$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_dup_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gsk_value_dup_render_node$MH,"gsk_value_dup_render_node");
    }
    /**
     * {@snippet :
     * GskRenderNode* gsk_value_dup_render_node(const GValue* value);
     * }
     */
    public static MemorySegment gsk_value_dup_render_node(MemorySegment value) {
        var mh$ = gsk_value_dup_render_node$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gsk_renderer_get_type$MH,"gsk_renderer_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_renderer_get_type();
     * }
     */
    public static long gsk_renderer_get_type() {
        var mh$ = gsk_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_new_for_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gsk_renderer_new_for_surface$MH,"gsk_renderer_new_for_surface");
    }
    /**
     * {@snippet :
     * GskRenderer* gsk_renderer_new_for_surface(GdkSurface* surface);
     * }
     */
    public static MemorySegment gsk_renderer_new_for_surface(MemorySegment surface) {
        var mh$ = gsk_renderer_new_for_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gsk_renderer_get_surface$MH,"gsk_renderer_get_surface");
    }
    /**
     * {@snippet :
     * GdkSurface* gsk_renderer_get_surface(GskRenderer* renderer);
     * }
     */
    public static MemorySegment gsk_renderer_get_surface(MemorySegment renderer) {
        var mh$ = gsk_renderer_get_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gsk_renderer_realize$MH,"gsk_renderer_realize");
    }
    /**
     * {@snippet :
     * gboolean gsk_renderer_realize(GskRenderer* renderer, GdkSurface* surface, GError** error);
     * }
     */
    public static int gsk_renderer_realize(MemorySegment renderer, MemorySegment surface, MemorySegment error) {
        var mh$ = gsk_renderer_realize$MH();
        try {
            return (int)mh$.invokeExact(renderer, surface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gsk_renderer_unrealize$MH,"gsk_renderer_unrealize");
    }
    /**
     * {@snippet :
     * void gsk_renderer_unrealize(GskRenderer* renderer);
     * }
     */
    public static void gsk_renderer_unrealize(MemorySegment renderer) {
        var mh$ = gsk_renderer_unrealize$MH();
        try {
            mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_is_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gsk_renderer_is_realized$MH,"gsk_renderer_is_realized");
    }
    /**
     * {@snippet :
     * gboolean gsk_renderer_is_realized(GskRenderer* renderer);
     * }
     */
    public static int gsk_renderer_is_realized(MemorySegment renderer) {
        var mh$ = gsk_renderer_is_realized$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_render_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gsk_renderer_render_texture$MH,"gsk_renderer_render_texture");
    }
    /**
     * {@snippet :
     * GdkTexture* gsk_renderer_render_texture(GskRenderer* renderer, GskRenderNode* root, const graphene_rect_t* viewport);
     * }
     */
    public static MemorySegment gsk_renderer_render_texture(MemorySegment renderer, MemorySegment root, MemorySegment viewport) {
        var mh$ = gsk_renderer_render_texture$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer, root, viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gsk_renderer_render$MH,"gsk_renderer_render");
    }
    /**
     * {@snippet :
     * void gsk_renderer_render(GskRenderer* renderer, GskRenderNode* root, const cairo_region_t* region);
     * }
     */
    public static void gsk_renderer_render(MemorySegment renderer, MemorySegment root, MemorySegment region) {
        var mh$ = gsk_renderer_render$MH();
        try {
            mh$.invokeExact(renderer, root, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gsk_transform_get_type$MH,"gsk_transform_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_transform_get_type();
     * }
     */
    public static long gsk_transform_get_type() {
        var mh$ = gsk_transform_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gsk_transform_ref$MH,"gsk_transform_ref");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_ref(GskTransform* self);
     * }
     */
    public static MemorySegment gsk_transform_ref(MemorySegment self) {
        var mh$ = gsk_transform_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gsk_transform_unref$MH,"gsk_transform_unref");
    }
    /**
     * {@snippet :
     * void gsk_transform_unref(GskTransform* self);
     * }
     */
    public static void gsk_transform_unref(MemorySegment self) {
        var mh$ = gsk_transform_unref$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gsk_transform_print$MH,"gsk_transform_print");
    }
    /**
     * {@snippet :
     * void gsk_transform_print(GskTransform* self, GString* string);
     * }
     */
    public static void gsk_transform_print(MemorySegment self, MemorySegment string) {
        var mh$ = gsk_transform_print$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gsk_transform_to_string$MH,"gsk_transform_to_string");
    }
    /**
     * {@snippet :
     * char* gsk_transform_to_string(GskTransform* self);
     * }
     */
    public static MemorySegment gsk_transform_to_string(MemorySegment self) {
        var mh$ = gsk_transform_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gsk_transform_parse$MH,"gsk_transform_parse");
    }
    /**
     * {@snippet :
     * gboolean gsk_transform_parse(char* string, GskTransform** out_transform);
     * }
     */
    public static int gsk_transform_parse(MemorySegment string, MemorySegment out_transform) {
        var mh$ = gsk_transform_parse$MH();
        try {
            return (int)mh$.invokeExact(string, out_transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gsk_transform_to_matrix$MH,"gsk_transform_to_matrix");
    }
    /**
     * {@snippet :
     * void gsk_transform_to_matrix(GskTransform* self, graphene_matrix_t* out_matrix);
     * }
     */
    public static void gsk_transform_to_matrix(MemorySegment self, MemorySegment out_matrix) {
        var mh$ = gsk_transform_to_matrix$MH();
        try {
            mh$.invokeExact(self, out_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_2d$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gsk_transform_to_2d$MH,"gsk_transform_to_2d");
    }
    /**
     * {@snippet :
     * void gsk_transform_to_2d(GskTransform* self, float* out_xx, float* out_yx, float* out_xy, float* out_yy, float* out_dx, float* out_dy);
     * }
     */
    public static void gsk_transform_to_2d(MemorySegment self, MemorySegment out_xx, MemorySegment out_yx, MemorySegment out_xy, MemorySegment out_yy, MemorySegment out_dx, MemorySegment out_dy) {
        var mh$ = gsk_transform_to_2d$MH();
        try {
            mh$.invokeExact(self, out_xx, out_yx, out_xy, out_yy, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_2d_components$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gsk_transform_to_2d_components$MH,"gsk_transform_to_2d_components");
    }
    /**
     * {@snippet :
     * void gsk_transform_to_2d_components(GskTransform* self, float* out_skew_x, float* out_skew_y, float* out_scale_x, float* out_scale_y, float* out_angle, float* out_dx, float* out_dy);
     * }
     */
    public static void gsk_transform_to_2d_components(MemorySegment self, MemorySegment out_skew_x, MemorySegment out_skew_y, MemorySegment out_scale_x, MemorySegment out_scale_y, MemorySegment out_angle, MemorySegment out_dx, MemorySegment out_dy) {
        var mh$ = gsk_transform_to_2d_components$MH();
        try {
            mh$.invokeExact(self, out_skew_x, out_skew_y, out_scale_x, out_scale_y, out_angle, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_affine$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gsk_transform_to_affine$MH,"gsk_transform_to_affine");
    }
    /**
     * {@snippet :
     * void gsk_transform_to_affine(GskTransform* self, float* out_scale_x, float* out_scale_y, float* out_dx, float* out_dy);
     * }
     */
    public static void gsk_transform_to_affine(MemorySegment self, MemorySegment out_scale_x, MemorySegment out_scale_y, MemorySegment out_dx, MemorySegment out_dy) {
        var mh$ = gsk_transform_to_affine$MH();
        try {
            mh$.invokeExact(self, out_scale_x, out_scale_y, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gsk_transform_to_translate$MH,"gsk_transform_to_translate");
    }
    /**
     * {@snippet :
     * void gsk_transform_to_translate(GskTransform* self, float* out_dx, float* out_dy);
     * }
     */
    public static void gsk_transform_to_translate(MemorySegment self, MemorySegment out_dx, MemorySegment out_dy) {
        var mh$ = gsk_transform_to_translate$MH();
        try {
            mh$.invokeExact(self, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_get_category$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gsk_transform_get_category$MH,"gsk_transform_get_category");
    }
    /**
     * {@snippet :
     * GskTransformCategory gsk_transform_get_category(GskTransform* self);
     * }
     */
    public static int gsk_transform_get_category(MemorySegment self) {
        var mh$ = gsk_transform_get_category$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gsk_transform_equal$MH,"gsk_transform_equal");
    }
    /**
     * {@snippet :
     * gboolean gsk_transform_equal(GskTransform* first, GskTransform* second);
     * }
     */
    public static int gsk_transform_equal(MemorySegment first, MemorySegment second) {
        var mh$ = gsk_transform_equal$MH();
        try {
            return (int)mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gsk_transform_new$MH,"gsk_transform_new");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_new();
     * }
     */
    public static MemorySegment gsk_transform_new() {
        var mh$ = gsk_transform_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gsk_transform_transform$MH,"gsk_transform_transform");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_transform(GskTransform* next, GskTransform* other);
     * }
     */
    public static MemorySegment gsk_transform_transform(MemorySegment next, MemorySegment other) {
        var mh$ = gsk_transform_transform$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gsk_transform_invert$MH,"gsk_transform_invert");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_invert(GskTransform* self);
     * }
     */
    public static MemorySegment gsk_transform_invert(MemorySegment self) {
        var mh$ = gsk_transform_invert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gsk_transform_matrix$MH,"gsk_transform_matrix");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_matrix(GskTransform* next, const graphene_matrix_t* matrix);
     * }
     */
    public static MemorySegment gsk_transform_matrix(MemorySegment next, MemorySegment matrix) {
        var mh$ = gsk_transform_matrix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gsk_transform_translate$MH,"gsk_transform_translate");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_translate(GskTransform* next, const graphene_point_t* point);
     * }
     */
    public static MemorySegment gsk_transform_translate(MemorySegment next, MemorySegment point) {
        var mh$ = gsk_transform_translate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_translate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gsk_transform_translate_3d$MH,"gsk_transform_translate_3d");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_translate_3d(GskTransform* next, const graphene_point3d_t* point);
     * }
     */
    public static MemorySegment gsk_transform_translate_3d(MemorySegment next, MemorySegment point) {
        var mh$ = gsk_transform_translate_3d$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_skew$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gsk_transform_skew$MH,"gsk_transform_skew");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_skew(GskTransform* next, float skew_x, float skew_y);
     * }
     */
    public static MemorySegment gsk_transform_skew(MemorySegment next, float skew_x, float skew_y) {
        var mh$ = gsk_transform_skew$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, skew_x, skew_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gsk_transform_rotate$MH,"gsk_transform_rotate");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_rotate(GskTransform* next, float angle);
     * }
     */
    public static MemorySegment gsk_transform_rotate(MemorySegment next, float angle) {
        var mh$ = gsk_transform_rotate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_rotate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gsk_transform_rotate_3d$MH,"gsk_transform_rotate_3d");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_rotate_3d(GskTransform* next, float angle, const graphene_vec3_t* axis);
     * }
     */
    public static MemorySegment gsk_transform_rotate_3d(MemorySegment next, float angle, MemorySegment axis) {
        var mh$ = gsk_transform_rotate_3d$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gsk_transform_scale$MH,"gsk_transform_scale");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_scale(GskTransform* next, float factor_x, float factor_y);
     * }
     */
    public static MemorySegment gsk_transform_scale(MemorySegment next, float factor_x, float factor_y) {
        var mh$ = gsk_transform_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, factor_x, factor_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_scale_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gsk_transform_scale_3d$MH,"gsk_transform_scale_3d");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_scale_3d(GskTransform* next, float factor_x, float factor_y, float factor_z);
     * }
     */
    public static MemorySegment gsk_transform_scale_3d(MemorySegment next, float factor_x, float factor_y, float factor_z) {
        var mh$ = gsk_transform_scale_3d$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, factor_x, factor_y, factor_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gsk_transform_perspective$MH,"gsk_transform_perspective");
    }
    /**
     * {@snippet :
     * GskTransform* gsk_transform_perspective(GskTransform* next, float depth);
     * }
     */
    public static MemorySegment gsk_transform_perspective(MemorySegment next, float depth) {
        var mh$ = gsk_transform_perspective$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(next, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_transform_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gsk_transform_transform_bounds$MH,"gsk_transform_transform_bounds");
    }
    /**
     * {@snippet :
     * void gsk_transform_transform_bounds(GskTransform* self, const graphene_rect_t* rect, graphene_rect_t* out_rect);
     * }
     */
    public static void gsk_transform_transform_bounds(MemorySegment self, MemorySegment rect, MemorySegment out_rect) {
        var mh$ = gsk_transform_transform_bounds$MH();
        try {
            mh$.invokeExact(self, rect, out_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_transform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gsk_transform_transform_point$MH,"gsk_transform_transform_point");
    }
    /**
     * {@snippet :
     * void gsk_transform_transform_point(GskTransform* self, const graphene_point_t* point, graphene_point_t* out_point);
     * }
     */
    public static void gsk_transform_transform_point(MemorySegment self, MemorySegment point, MemorySegment out_point) {
        var mh$ = gsk_transform_transform_point$MH();
        try {
            mh$.invokeExact(self, point, out_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gsk_cairo_renderer_get_type$MH,"gsk_cairo_renderer_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_cairo_renderer_get_type();
     * }
     */
    public static long gsk_cairo_renderer_get_type() {
        var mh$ = gsk_cairo_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_renderer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gsk_cairo_renderer_new$MH,"gsk_cairo_renderer_new");
    }
    /**
     * {@snippet :
     * GskRenderer* gsk_cairo_renderer_new();
     * }
     */
    public static MemorySegment gsk_cairo_renderer_new() {
        var mh$ = gsk_cairo_renderer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gsk_render_node_type_get_type$MH,"gsk_render_node_type_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_render_node_type_get_type();
     * }
     */
    public static long gsk_render_node_type_get_type() {
        var mh$ = gsk_render_node_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_scaling_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gsk_scaling_filter_get_type$MH,"gsk_scaling_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_scaling_filter_get_type();
     * }
     */
    public static long gsk_scaling_filter_get_type() {
        var mh$ = gsk_scaling_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gsk_blend_mode_get_type$MH,"gsk_blend_mode_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_blend_mode_get_type();
     * }
     */
    public static long gsk_blend_mode_get_type() {
        var mh$ = gsk_blend_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_corner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gsk_corner_get_type$MH,"gsk_corner_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_corner_get_type();
     * }
     */
    public static long gsk_corner_get_type() {
        var mh$ = gsk_corner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_serialization_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gsk_serialization_error_get_type$MH,"gsk_serialization_error_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_serialization_error_get_type();
     * }
     */
    public static long gsk_serialization_error_get_type() {
        var mh$ = gsk_serialization_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_category_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gsk_transform_category_get_type$MH,"gsk_transform_category_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_transform_category_get_type();
     * }
     */
    public static long gsk_transform_category_get_type() {
        var mh$ = gsk_transform_category_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_uniform_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gsk_gl_uniform_type_get_type$MH,"gsk_gl_uniform_type_get_type");
    }
    /**
     * {@snippet :
     * GType gsk_gl_uniform_type_get_type();
     * }
     */
    public static long gsk_gl_uniform_type_get_type() {
        var mh$ = gsk_gl_uniform_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GskRenderer* GskRenderer_autoptr;
     * }
     */
    public static final OfAddress GskRenderer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GskRenderer_listautoptr;
     * }
     */
    public static final OfAddress GskRenderer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GskRenderer_slistautoptr;
     * }
     */
    public static final OfAddress GskRenderer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GskRenderer_queueautoptr;
     * }
     */
    public static final OfAddress GskRenderer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GskRenderNode* GskRenderNode_autoptr;
     * }
     */
    public static final OfAddress GskRenderNode_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GskRenderNode_listautoptr;
     * }
     */
    public static final OfAddress GskRenderNode_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GskRenderNode_slistautoptr;
     * }
     */
    public static final OfAddress GskRenderNode_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GskRenderNode_queueautoptr;
     * }
     */
    public static final OfAddress GskRenderNode_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GskTransform* GskTransform_autoptr;
     * }
     */
    public static final OfAddress GskTransform_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GskTransform_listautoptr;
     * }
     */
    public static final OfAddress GskTransform_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GskTransform_slistautoptr;
     * }
     */
    public static final OfAddress GskTransform_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GskTransform_queueautoptr;
     * }
     */
    public static final OfAddress GskTransform_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .GTK_ALIGN_FILL = 0;
     * }
     */
    public static int GTK_ALIGN_FILL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ALIGN_START = 1;
     * }
     */
    public static int GTK_ALIGN_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ALIGN_END = 2;
     * }
     */
    public static int GTK_ALIGN_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ALIGN_CENTER = 3;
     * }
     */
    public static int GTK_ALIGN_CENTER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ALIGN_BASELINE = 4;
     * }
     */
    public static int GTK_ALIGN_BASELINE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ARROW_UP = 0;
     * }
     */
    public static int GTK_ARROW_UP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ARROW_DOWN = 1;
     * }
     */
    public static int GTK_ARROW_DOWN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ARROW_LEFT = 2;
     * }
     */
    public static int GTK_ARROW_LEFT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ARROW_RIGHT = 3;
     * }
     */
    public static int GTK_ARROW_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ARROW_NONE = 4;
     * }
     */
    public static int GTK_ARROW_NONE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_BASELINE_POSITION_TOP = 0;
     * }
     */
    public static int GTK_BASELINE_POSITION_TOP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_BASELINE_POSITION_CENTER = 1;
     * }
     */
    public static int GTK_BASELINE_POSITION_CENTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_BASELINE_POSITION_BOTTOM = 2;
     * }
     */
    public static int GTK_BASELINE_POSITION_BOTTOM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_CHARS = 0;
     * }
     */
    public static int GTK_DELETE_CHARS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_WORD_ENDS = 1;
     * }
     */
    public static int GTK_DELETE_WORD_ENDS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_WORDS = 2;
     * }
     */
    public static int GTK_DELETE_WORDS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_DISPLAY_LINES = 3;
     * }
     */
    public static int GTK_DELETE_DISPLAY_LINES() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_DISPLAY_LINE_ENDS = 4;
     * }
     */
    public static int GTK_DELETE_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_PARAGRAPH_ENDS = 5;
     * }
     */
    public static int GTK_DELETE_PARAGRAPH_ENDS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_PARAGRAPHS = 6;
     * }
     */
    public static int GTK_DELETE_PARAGRAPHS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_DELETE_WHITESPACE = 7;
     * }
     */
    public static int GTK_DELETE_WHITESPACE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_DIR_TAB_FORWARD = 0;
     * }
     */
    public static int GTK_DIR_TAB_FORWARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_DIR_TAB_BACKWARD = 1;
     * }
     */
    public static int GTK_DIR_TAB_BACKWARD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_DIR_UP = 2;
     * }
     */
    public static int GTK_DIR_UP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_DIR_DOWN = 3;
     * }
     */
    public static int GTK_DIR_DOWN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_DIR_LEFT = 4;
     * }
     */
    public static int GTK_DIR_LEFT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_DIR_RIGHT = 5;
     * }
     */
    public static int GTK_DIR_RIGHT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_SIZE_INHERIT = 0;
     * }
     */
    public static int GTK_ICON_SIZE_INHERIT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_SIZE_NORMAL = 1;
     * }
     */
    public static int GTK_ICON_SIZE_NORMAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ICON_SIZE_LARGE = 2;
     * }
     */
    public static int GTK_ICON_SIZE_LARGE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SENSITIVITY_AUTO = 0;
     * }
     */
    public static int GTK_SENSITIVITY_AUTO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SENSITIVITY_ON = 1;
     * }
     */
    public static int GTK_SENSITIVITY_ON() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SENSITIVITY_OFF = 2;
     * }
     */
    public static int GTK_SENSITIVITY_OFF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_TEXT_DIR_NONE = 0;
     * }
     */
    public static int GTK_TEXT_DIR_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_TEXT_DIR_LTR = 1;
     * }
     */
    public static int GTK_TEXT_DIR_LTR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_TEXT_DIR_RTL = 2;
     * }
     */
    public static int GTK_TEXT_DIR_RTL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_JUSTIFY_LEFT = 0;
     * }
     */
    public static int GTK_JUSTIFY_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_JUSTIFY_RIGHT = 1;
     * }
     */
    public static int GTK_JUSTIFY_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_JUSTIFY_CENTER = 2;
     * }
     */
    public static int GTK_JUSTIFY_CENTER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_JUSTIFY_FILL = 3;
     * }
     */
    public static int GTK_JUSTIFY_FILL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_MESSAGE_INFO = 0;
     * }
     */
    public static int GTK_MESSAGE_INFO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_MESSAGE_WARNING = 1;
     * }
     */
    public static int GTK_MESSAGE_WARNING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_MESSAGE_QUESTION = 2;
     * }
     */
    public static int GTK_MESSAGE_QUESTION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_MESSAGE_ERROR = 3;
     * }
     */
    public static int GTK_MESSAGE_ERROR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_MESSAGE_OTHER = 4;
     * }
     */
    public static int GTK_MESSAGE_OTHER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_LOGICAL_POSITIONS = 0;
     * }
     */
    public static int GTK_MOVEMENT_LOGICAL_POSITIONS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_VISUAL_POSITIONS = 1;
     * }
     */
    public static int GTK_MOVEMENT_VISUAL_POSITIONS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_WORDS = 2;
     * }
     */
    public static int GTK_MOVEMENT_WORDS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_DISPLAY_LINES = 3;
     * }
     */
    public static int GTK_MOVEMENT_DISPLAY_LINES() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_DISPLAY_LINE_ENDS = 4;
     * }
     */
    public static int GTK_MOVEMENT_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_PARAGRAPHS = 5;
     * }
     */
    public static int GTK_MOVEMENT_PARAGRAPHS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_PARAGRAPH_ENDS = 6;
     * }
     */
    public static int GTK_MOVEMENT_PARAGRAPH_ENDS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_PAGES = 7;
     * }
     */
    public static int GTK_MOVEMENT_PAGES() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_BUFFER_ENDS = 8;
     * }
     */
    public static int GTK_MOVEMENT_BUFFER_ENDS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_MOVEMENT_HORIZONTAL_PAGES = 9;
     * }
     */
    public static int GTK_MOVEMENT_HORIZONTAL_PAGES() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_NATURAL_WRAP_INHERIT = 0;
     * }
     */
    public static int GTK_NATURAL_WRAP_INHERIT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_NATURAL_WRAP_NONE = 1;
     * }
     */
    public static int GTK_NATURAL_WRAP_NONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_NATURAL_WRAP_WORD = 2;
     * }
     */
    public static int GTK_NATURAL_WRAP_WORD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEPS = 0;
     * }
     */
    public static int GTK_SCROLL_STEPS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGES = 1;
     * }
     */
    public static int GTK_SCROLL_PAGES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_ENDS = 2;
     * }
     */
    public static int GTK_SCROLL_ENDS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_HORIZONTAL_STEPS = 3;
     * }
     */
    public static int GTK_SCROLL_HORIZONTAL_STEPS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_HORIZONTAL_PAGES = 4;
     * }
     */
    public static int GTK_SCROLL_HORIZONTAL_PAGES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_HORIZONTAL_ENDS = 5;
     * }
     */
    public static int GTK_SCROLL_HORIZONTAL_ENDS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_ORIENTATION_HORIZONTAL = 0;
     * }
     */
    public static int GTK_ORIENTATION_HORIZONTAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ORIENTATION_VERTICAL = 1;
     * }
     */
    public static int GTK_ORIENTATION_VERTICAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_OVERFLOW_VISIBLE = 0;
     * }
     */
    public static int GTK_OVERFLOW_VISIBLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_OVERFLOW_HIDDEN = 1;
     * }
     */
    public static int GTK_OVERFLOW_HIDDEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PACK_START = 0;
     * }
     */
    public static int GTK_PACK_START() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PACK_END = 1;
     * }
     */
    public static int GTK_PACK_END() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_POS_LEFT = 0;
     * }
     */
    public static int GTK_POS_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_POS_RIGHT = 1;
     * }
     */
    public static int GTK_POS_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_POS_TOP = 2;
     * }
     */
    public static int GTK_POS_TOP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_POS_BOTTOM = 3;
     * }
     */
    public static int GTK_POS_BOTTOM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_NONE = 0;
     * }
     */
    public static int GTK_SCROLL_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_JUMP = 1;
     * }
     */
    public static int GTK_SCROLL_JUMP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEP_BACKWARD = 2;
     * }
     */
    public static int GTK_SCROLL_STEP_BACKWARD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEP_FORWARD = 3;
     * }
     */
    public static int GTK_SCROLL_STEP_FORWARD() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGE_BACKWARD = 4;
     * }
     */
    public static int GTK_SCROLL_PAGE_BACKWARD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGE_FORWARD = 5;
     * }
     */
    public static int GTK_SCROLL_PAGE_FORWARD() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEP_UP = 6;
     * }
     */
    public static int GTK_SCROLL_STEP_UP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEP_DOWN = 7;
     * }
     */
    public static int GTK_SCROLL_STEP_DOWN() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGE_UP = 8;
     * }
     */
    public static int GTK_SCROLL_PAGE_UP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGE_DOWN = 9;
     * }
     */
    public static int GTK_SCROLL_PAGE_DOWN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEP_LEFT = 10;
     * }
     */
    public static int GTK_SCROLL_STEP_LEFT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_STEP_RIGHT = 11;
     * }
     */
    public static int GTK_SCROLL_STEP_RIGHT() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGE_LEFT = 12;
     * }
     */
    public static int GTK_SCROLL_PAGE_LEFT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_PAGE_RIGHT = 13;
     * }
     */
    public static int GTK_SCROLL_PAGE_RIGHT() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_START = 14;
     * }
     */
    public static int GTK_SCROLL_START() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_END = 15;
     * }
     */
    public static int GTK_SCROLL_END() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .GTK_SELECTION_NONE = 0;
     * }
     */
    public static int GTK_SELECTION_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SELECTION_SINGLE = 1;
     * }
     */
    public static int GTK_SELECTION_SINGLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SELECTION_BROWSE = 2;
     * }
     */
    public static int GTK_SELECTION_BROWSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SELECTION_MULTIPLE = 3;
     * }
     */
    public static int GTK_SELECTION_MULTIPLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_WRAP_NONE = 0;
     * }
     */
    public static int GTK_WRAP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_WRAP_CHAR = 1;
     * }
     */
    public static int GTK_WRAP_CHAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_WRAP_WORD = 2;
     * }
     */
    public static int GTK_WRAP_WORD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_WRAP_WORD_CHAR = 3;
     * }
     */
    public static int GTK_WRAP_WORD_CHAR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SORT_ASCENDING = 0;
     * }
     */
    public static int GTK_SORT_ASCENDING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SORT_DESCENDING = 1;
     * }
     */
    public static int GTK_SORT_DESCENDING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_PAGES_ALL = 0;
     * }
     */
    public static int GTK_PRINT_PAGES_ALL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_PAGES_CURRENT = 1;
     * }
     */
    public static int GTK_PRINT_PAGES_CURRENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_PAGES_RANGES = 2;
     * }
     */
    public static int GTK_PRINT_PAGES_RANGES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_PAGES_SELECTION = 3;
     * }
     */
    public static int GTK_PRINT_PAGES_SELECTION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_SET_ALL = 0;
     * }
     */
    public static int GTK_PAGE_SET_ALL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_SET_EVEN = 1;
     * }
     */
    public static int GTK_PAGE_SET_EVEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_SET_ODD = 2;
     * }
     */
    public static int GTK_PAGE_SET_ODD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM = 0;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP = 1;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM = 2;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP = 3;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT = 4;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT = 5;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT = 6;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT = 7;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_ORDERING_SMALLER = -1;
     * }
     */
    public static int GTK_ORDERING_SMALLER() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ORDERING_EQUAL = 0;
     * }
     */
    public static int GTK_ORDERING_EQUAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ORDERING_LARGER = 1;
     * }
     */
    public static int GTK_ORDERING_LARGER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_ORIENTATION_PORTRAIT = 0;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_PORTRAIT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_ORIENTATION_LANDSCAPE = 1;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_LANDSCAPE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT = 2;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE = 3;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_QUALITY_LOW = 0;
     * }
     */
    public static int GTK_PRINT_QUALITY_LOW() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_QUALITY_NORMAL = 1;
     * }
     */
    public static int GTK_PRINT_QUALITY_NORMAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_QUALITY_HIGH = 2;
     * }
     */
    public static int GTK_PRINT_QUALITY_HIGH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_QUALITY_DRAFT = 3;
     * }
     */
    public static int GTK_PRINT_QUALITY_DRAFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_DUPLEX_SIMPLEX = 0;
     * }
     */
    public static int GTK_PRINT_DUPLEX_SIMPLEX() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_DUPLEX_HORIZONTAL = 1;
     * }
     */
    public static int GTK_PRINT_DUPLEX_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PRINT_DUPLEX_VERTICAL = 2;
     * }
     */
    public static int GTK_PRINT_DUPLEX_VERTICAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_UNIT_NONE = 0;
     * }
     */
    public static int GTK_UNIT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_UNIT_POINTS = 1;
     * }
     */
    public static int GTK_UNIT_POINTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_UNIT_INCH = 2;
     * }
     */
    public static int GTK_UNIT_INCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_UNIT_MM = 3;
     * }
     */
    public static int GTK_UNIT_MM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_GRID_LINES_NONE = 0;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_GRID_LINES_HORIZONTAL = 1;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_GRID_LINES_VERTICAL = 2;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_VERTICAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_GRID_LINES_BOTH = 3;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_BOTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_GROUP_NONE = 0;
     * }
     */
    public static int GTK_SIZE_GROUP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_GROUP_HORIZONTAL = 1;
     * }
     */
    public static int GTK_SIZE_GROUP_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_GROUP_VERTICAL = 2;
     * }
     */
    public static int GTK_SIZE_GROUP_VERTICAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_GROUP_BOTH = 3;
     * }
     */
    public static int GTK_SIZE_GROUP_BOTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH = 0;
     * }
     */
    public static int GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT = 1;
     * }
     */
    public static int GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SIZE_REQUEST_CONSTANT_SIZE = 2;
     * }
     */
    public static int GTK_SIZE_REQUEST_CONSTANT_SIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_MINIMUM = 0;
     * }
     */
    public static int GTK_SCROLL_MINIMUM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SCROLL_NATURAL = 1;
     * }
     */
    public static int GTK_SCROLL_NATURAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_NORMAL = 0;
     * }
     */
    public static int GTK_STATE_FLAG_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_ACTIVE = 1;
     * }
     */
    public static int GTK_STATE_FLAG_ACTIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_PRELIGHT = 2;
     * }
     */
    public static int GTK_STATE_FLAG_PRELIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_SELECTED = 4;
     * }
     */
    public static int GTK_STATE_FLAG_SELECTED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_INSENSITIVE = 8;
     * }
     */
    public static int GTK_STATE_FLAG_INSENSITIVE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_INCONSISTENT = 16;
     * }
     */
    public static int GTK_STATE_FLAG_INCONSISTENT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_FOCUSED = 32;
     * }
     */
    public static int GTK_STATE_FLAG_FOCUSED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_BACKDROP = 64;
     * }
     */
    public static int GTK_STATE_FLAG_BACKDROP() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_DIR_LTR = 128;
     * }
     */
    public static int GTK_STATE_FLAG_DIR_LTR() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_DIR_RTL = 256;
     * }
     */
    public static int GTK_STATE_FLAG_DIR_RTL() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_LINK = 512;
     * }
     */
    public static int GTK_STATE_FLAG_LINK() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_VISITED = 1024;
     * }
     */
    public static int GTK_STATE_FLAG_VISITED() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_CHECKED = 2048;
     * }
     */
    public static int GTK_STATE_FLAG_CHECKED() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_DROP_ACTIVE = 4096;
     * }
     */
    public static int GTK_STATE_FLAG_DROP_ACTIVE() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_FOCUS_VISIBLE = 8192;
     * }
     */
    public static int GTK_STATE_FLAG_FOCUS_VISIBLE() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum .GTK_STATE_FLAG_FOCUS_WITHIN = 16384;
     * }
     */
    public static int GTK_STATE_FLAG_FOCUS_WITHIN() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_NONE = 0;
     * }
     */
    public static int GTK_BORDER_STYLE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_HIDDEN = 1;
     * }
     */
    public static int GTK_BORDER_STYLE_HIDDEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_SOLID = 2;
     * }
     */
    public static int GTK_BORDER_STYLE_SOLID() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_INSET = 3;
     * }
     */
    public static int GTK_BORDER_STYLE_INSET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_OUTSET = 4;
     * }
     */
    public static int GTK_BORDER_STYLE_OUTSET() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_DOTTED = 5;
     * }
     */
    public static int GTK_BORDER_STYLE_DOTTED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_DASHED = 6;
     * }
     */
    public static int GTK_BORDER_STYLE_DASHED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_DOUBLE = 7;
     * }
     */
    public static int GTK_BORDER_STYLE_DOUBLE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_GROOVE = 8;
     * }
     */
    public static int GTK_BORDER_STYLE_GROOVE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_BORDER_STYLE_RIDGE = 9;
     * }
     */
    public static int GTK_BORDER_STYLE_RIDGE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_LEVEL_BAR_MODE_CONTINUOUS = 0;
     * }
     */
    public static int GTK_LEVEL_BAR_MODE_CONTINUOUS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_LEVEL_BAR_MODE_DISCRETE = 1;
     * }
     */
    public static int GTK_LEVEL_BAR_MODE_DISCRETE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_FREE_FORM = 0;
     * }
     */
    public static int GTK_INPUT_PURPOSE_FREE_FORM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_ALPHA = 1;
     * }
     */
    public static int GTK_INPUT_PURPOSE_ALPHA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_DIGITS = 2;
     * }
     */
    public static int GTK_INPUT_PURPOSE_DIGITS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_NUMBER = 3;
     * }
     */
    public static int GTK_INPUT_PURPOSE_NUMBER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_PHONE = 4;
     * }
     */
    public static int GTK_INPUT_PURPOSE_PHONE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_URL = 5;
     * }
     */
    public static int GTK_INPUT_PURPOSE_URL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_EMAIL = 6;
     * }
     */
    public static int GTK_INPUT_PURPOSE_EMAIL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_NAME = 7;
     * }
     */
    public static int GTK_INPUT_PURPOSE_NAME() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_PASSWORD = 8;
     * }
     */
    public static int GTK_INPUT_PURPOSE_PASSWORD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_PIN = 9;
     * }
     */
    public static int GTK_INPUT_PURPOSE_PIN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_PURPOSE_TERMINAL = 10;
     * }
     */
    public static int GTK_INPUT_PURPOSE_TERMINAL() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_NONE = 0;
     * }
     */
    public static int GTK_INPUT_HINT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_SPELLCHECK = 1;
     * }
     */
    public static int GTK_INPUT_HINT_SPELLCHECK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_NO_SPELLCHECK = 2;
     * }
     */
    public static int GTK_INPUT_HINT_NO_SPELLCHECK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_WORD_COMPLETION = 4;
     * }
     */
    public static int GTK_INPUT_HINT_WORD_COMPLETION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_LOWERCASE = 8;
     * }
     */
    public static int GTK_INPUT_HINT_LOWERCASE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_UPPERCASE_CHARS = 16;
     * }
     */
    public static int GTK_INPUT_HINT_UPPERCASE_CHARS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_UPPERCASE_WORDS = 32;
     * }
     */
    public static int GTK_INPUT_HINT_UPPERCASE_WORDS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_UPPERCASE_SENTENCES = 64;
     * }
     */
    public static int GTK_INPUT_HINT_UPPERCASE_SENTENCES() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_INHIBIT_OSK = 128;
     * }
     */
    public static int GTK_INPUT_HINT_INHIBIT_OSK() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_VERTICAL_WRITING = 256;
     * }
     */
    public static int GTK_INPUT_HINT_VERTICAL_WRITING() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_EMOJI = 512;
     * }
     */
    public static int GTK_INPUT_HINT_EMOJI() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_NO_EMOJI = 1024;
     * }
     */
    public static int GTK_INPUT_HINT_NO_EMOJI() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum .GTK_INPUT_HINT_PRIVATE = 2048;
     * }
     */
    public static int GTK_INPUT_HINT_PRIVATE() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum .GTK_PHASE_NONE = 0;
     * }
     */
    public static int GTK_PHASE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PHASE_CAPTURE = 1;
     * }
     */
    public static int GTK_PHASE_CAPTURE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PHASE_BUBBLE = 2;
     * }
     */
    public static int GTK_PHASE_BUBBLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PHASE_TARGET = 3;
     * }
     */
    public static int GTK_PHASE_TARGET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_LIMIT_NONE = 0;
     * }
     */
    public static int GTK_LIMIT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_LIMIT_SAME_NATIVE = 1;
     * }
     */
    public static int GTK_LIMIT_SAME_NATIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_SEQUENCE_NONE = 0;
     * }
     */
    public static int GTK_EVENT_SEQUENCE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_SEQUENCE_CLAIMED = 1;
     * }
     */
    public static int GTK_EVENT_SEQUENCE_CLAIMED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_SEQUENCE_DENIED = 2;
     * }
     */
    public static int GTK_EVENT_SEQUENCE_DENIED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAN_DIRECTION_LEFT = 0;
     * }
     */
    public static int GTK_PAN_DIRECTION_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAN_DIRECTION_RIGHT = 1;
     * }
     */
    public static int GTK_PAN_DIRECTION_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAN_DIRECTION_UP = 2;
     * }
     */
    public static int GTK_PAN_DIRECTION_UP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PAN_DIRECTION_DOWN = 3;
     * }
     */
    public static int GTK_PAN_DIRECTION_DOWN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_SCOPE_LOCAL = 0;
     * }
     */
    public static int GTK_SHORTCUT_SCOPE_LOCAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_SCOPE_MANAGED = 1;
     * }
     */
    public static int GTK_SHORTCUT_SCOPE_MANAGED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_SCOPE_GLOBAL = 2;
     * }
     */
    public static int GTK_SHORTCUT_SCOPE_GLOBAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_PICK_DEFAULT = 0;
     * }
     */
    public static int GTK_PICK_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_PICK_INSENSITIVE = 1;
     * }
     */
    public static int GTK_PICK_INSENSITIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_PICK_NON_TARGETABLE = 2;
     * }
     */
    public static int GTK_PICK_NON_TARGETABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_RELATION_LE = -1;
     * }
     */
    public static int GTK_CONSTRAINT_RELATION_LE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_RELATION_EQ = 0;
     * }
     */
    public static int GTK_CONSTRAINT_RELATION_EQ() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_RELATION_GE = 1;
     * }
     */
    public static int GTK_CONSTRAINT_RELATION_GE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_STRENGTH_REQUIRED = 1001001000;
     * }
     */
    public static int GTK_CONSTRAINT_STRENGTH_REQUIRED() {
        return (int)1001001000L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_STRENGTH_STRONG = 1000000000;
     * }
     */
    public static int GTK_CONSTRAINT_STRENGTH_STRONG() {
        return (int)1000000000L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_STRENGTH_MEDIUM = 1000;
     * }
     */
    public static int GTK_CONSTRAINT_STRENGTH_MEDIUM() {
        return (int)1000L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_STRENGTH_WEAK = 1;
     * }
     */
    public static int GTK_CONSTRAINT_STRENGTH_WEAK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_NONE = 0;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_LEFT = 1;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_LEFT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_RIGHT = 2;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_TOP = 3;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_TOP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_BOTTOM = 4;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_BOTTOM() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_START = 5;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_START() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_END = 6;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_END() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_WIDTH = 7;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_WIDTH() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_HEIGHT = 8;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_HEIGHT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_CENTER_X = 9;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_CENTER_X() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y = 10;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_ATTRIBUTE_BASELINE = 11;
     * }
     */
    public static int GTK_CONSTRAINT_ATTRIBUTE_BASELINE() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL = 0;
     * }
     */
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE = 1;
     * }
     */
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW = 2;
     * }
     */
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC = 3;
     * }
     */
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY = 4;
     * }
     */
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION = 5;
     * }
     */
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYSTEM_SETTING_DPI = 0;
     * }
     */
    public static int GTK_SYSTEM_SETTING_DPI() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYSTEM_SETTING_FONT_NAME = 1;
     * }
     */
    public static int GTK_SYSTEM_SETTING_FONT_NAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYSTEM_SETTING_FONT_CONFIG = 2;
     * }
     */
    public static int GTK_SYSTEM_SETTING_FONT_CONFIG() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYSTEM_SETTING_DISPLAY = 3;
     * }
     */
    public static int GTK_SYSTEM_SETTING_DISPLAY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYSTEM_SETTING_ICON_THEME = 4;
     * }
     */
    public static int GTK_SYSTEM_SETTING_ICON_THEME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYMBOLIC_COLOR_FOREGROUND = 0;
     * }
     */
    public static int GTK_SYMBOLIC_COLOR_FOREGROUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYMBOLIC_COLOR_ERROR = 1;
     * }
     */
    public static int GTK_SYMBOLIC_COLOR_ERROR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYMBOLIC_COLOR_WARNING = 2;
     * }
     */
    public static int GTK_SYMBOLIC_COLOR_WARNING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_SYMBOLIC_COLOR_SUCCESS = 3;
     * }
     */
    public static int GTK_SYMBOLIC_COLOR_SUCCESS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_ALERT = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_ALERT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_ALERT_DIALOG = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_ALERT_DIALOG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_BANNER = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_BANNER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_BUTTON = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_BUTTON() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_CAPTION = 4;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_CAPTION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_CELL = 5;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_CELL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_CHECKBOX = 6;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_CHECKBOX() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_COLUMN_HEADER = 7;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_COLUMN_HEADER() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_COMBO_BOX = 8;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_COMBO_BOX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_COMMAND = 9;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_COMMAND() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_COMPOSITE = 10;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_COMPOSITE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_DIALOG = 11;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_DIALOG() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_DOCUMENT = 12;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_DOCUMENT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_FEED = 13;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_FEED() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_FORM = 14;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_FORM() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_GENERIC = 15;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_GENERIC() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_GRID = 16;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_GRID() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_GRID_CELL = 17;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_GRID_CELL() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_GROUP = 18;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_GROUP() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_HEADING = 19;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_HEADING() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_IMG = 20;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_IMG() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_INPUT = 21;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_INPUT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LABEL = 22;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LABEL() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LANDMARK = 23;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LANDMARK() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LEGEND = 24;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LEGEND() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LINK = 25;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LINK() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LIST = 26;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LIST() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LIST_BOX = 27;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LIST_BOX() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LIST_ITEM = 28;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LIST_ITEM() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_LOG = 29;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_LOG() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MAIN = 30;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MAIN() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MARQUEE = 31;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MARQUEE() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MATH = 32;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MATH() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_METER = 33;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_METER() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MENU = 34;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MENU() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MENU_BAR = 35;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MENU_BAR() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MENU_ITEM = 36;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MENU_ITEM() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX = 37;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO = 38;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_NAVIGATION = 39;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_NAVIGATION() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_NONE = 40;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_NONE() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_NOTE = 41;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_NOTE() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_OPTION = 42;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_OPTION() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_PRESENTATION = 43;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_PRESENTATION() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_PROGRESS_BAR = 44;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_PROGRESS_BAR() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_RADIO = 45;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_RADIO() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_RADIO_GROUP = 46;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_RADIO_GROUP() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_RANGE = 47;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_RANGE() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_REGION = 48;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_REGION() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_ROW = 49;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_ROW() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_ROW_GROUP = 50;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_ROW_GROUP() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_ROW_HEADER = 51;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_ROW_HEADER() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SCROLLBAR = 52;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SCROLLBAR() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SEARCH = 53;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SEARCH() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SEARCH_BOX = 54;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SEARCH_BOX() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SECTION = 55;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SECTION() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SECTION_HEAD = 56;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SECTION_HEAD() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SELECT = 57;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SELECT() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SEPARATOR = 58;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SEPARATOR() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SLIDER = 59;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SLIDER() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SPIN_BUTTON = 60;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SPIN_BUTTON() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_STATUS = 61;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_STATUS() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_STRUCTURE = 62;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_STRUCTURE() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_SWITCH = 63;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_SWITCH() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TAB = 64;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TAB() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TABLE = 65;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TABLE() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TAB_LIST = 66;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TAB_LIST() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TAB_PANEL = 67;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TAB_PANEL() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TEXT_BOX = 68;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TEXT_BOX() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TIME = 69;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TIME() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TIMER = 70;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TIMER() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TOOLBAR = 71;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TOOLBAR() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TOOLTIP = 72;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TOOLTIP() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TREE = 73;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TREE() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TREE_GRID = 74;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TREE_GRID() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_TREE_ITEM = 75;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_TREE_ITEM() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_WIDGET = 76;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_WIDGET() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_ROLE_WINDOW = 77;
     * }
     */
    public static int GTK_ACCESSIBLE_ROLE_WINDOW() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_BUSY = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_BUSY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_CHECKED = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_CHECKED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_DISABLED = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_DISABLED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_EXPANDED = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_EXPANDED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_HIDDEN = 4;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_HIDDEN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_INVALID = 5;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_INVALID() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_PRESSED = 6;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_PRESSED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_STATE_SELECTED = 7;
     * }
     */
    public static int GTK_ACCESSIBLE_STATE_SELECTED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_DESCRIPTION = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_DESCRIPTION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_HAS_POPUP = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_HAS_POPUP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_LABEL = 4;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_LABEL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_LEVEL = 5;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_LEVEL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_MODAL = 6;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_MODAL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_MULTI_LINE = 7;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_MULTI_LINE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE = 8;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_ORIENTATION = 9;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_ORIENTATION() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER = 10;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_READ_ONLY = 11;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_READ_ONLY() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_REQUIRED = 12;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_REQUIRED() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION = 13;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_SORT = 14;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_SORT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_VALUE_MAX = 15;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_MAX() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_VALUE_MIN = 16;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_MIN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_VALUE_NOW = 17;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_NOW() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT = 18;
     * }
     */
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_COL_COUNT = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_COL_COUNT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_COL_INDEX = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_COL_INDEX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_COL_SPAN = 4;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_COL_SPAN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_CONTROLS = 5;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_CONTROLS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_DESCRIBED_BY = 6;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_DESCRIBED_BY() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_DETAILS = 7;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_DETAILS() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE = 8;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_FLOW_TO = 9;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_FLOW_TO() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_LABELLED_BY = 10;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_LABELLED_BY() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_OWNS = 11;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_OWNS() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_POS_IN_SET = 12;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_POS_IN_SET() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_ROW_COUNT = 13;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_ROW_COUNT() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_ROW_INDEX = 14;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_ROW_INDEX() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT = 15;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_ROW_SPAN = 16;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_ROW_SPAN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_RELATION_SET_SIZE = 17;
     * }
     */
    public static int GTK_ACCESSIBLE_RELATION_SET_SIZE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_TRISTATE_FALSE = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_TRISTATE_FALSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_TRISTATE_TRUE = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_TRISTATE_TRUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_TRISTATE_MIXED = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_TRISTATE_MIXED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_INVALID_FALSE = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_INVALID_FALSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_INVALID_TRUE = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_INVALID_TRUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_INVALID_GRAMMAR = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_INVALID_GRAMMAR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_INVALID_SPELLING = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_INVALID_SPELLING() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_AUTOCOMPLETE_NONE = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_AUTOCOMPLETE_LIST = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_LIST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_SORT_NONE = 0;
     * }
     */
    public static int GTK_ACCESSIBLE_SORT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_SORT_ASCENDING = 1;
     * }
     */
    public static int GTK_ACCESSIBLE_SORT_ASCENDING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_SORT_DESCENDING = 2;
     * }
     */
    public static int GTK_ACCESSIBLE_SORT_DESCENDING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ACCESSIBLE_SORT_OTHER = 3;
     * }
     */
    public static int GTK_ACCESSIBLE_SORT_OTHER() {
        return (int)3L;
    }
    public static MethodHandle gtk_accelerator_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_accelerator_valid$MH,"gtk_accelerator_valid");
    }
    /**
     * {@snippet :
     * gboolean gtk_accelerator_valid(guint keyval, GdkModifierType modifiers);
     * }
     */
    public static int gtk_accelerator_valid(int keyval, int modifiers) {
        var mh$ = gtk_accelerator_valid$MH();
        try {
            return (int)mh$.invokeExact(keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_accelerator_parse$MH,"gtk_accelerator_parse");
    }
    /**
     * {@snippet :
     * gboolean gtk_accelerator_parse(char* accelerator, guint* accelerator_key, GdkModifierType* accelerator_mods);
     * }
     */
    public static int gtk_accelerator_parse(MemorySegment accelerator, MemorySegment accelerator_key, MemorySegment accelerator_mods) {
        var mh$ = gtk_accelerator_parse$MH();
        try {
            return (int)mh$.invokeExact(accelerator, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_accelerator_parse_with_keycode$MH,"gtk_accelerator_parse_with_keycode");
    }
    /**
     * {@snippet :
     * gboolean gtk_accelerator_parse_with_keycode(char* accelerator, GdkDisplay* display, guint* accelerator_key, guint** accelerator_codes, GdkModifierType* accelerator_mods);
     * }
     */
    public static int gtk_accelerator_parse_with_keycode(MemorySegment accelerator, MemorySegment display, MemorySegment accelerator_key, MemorySegment accelerator_codes, MemorySegment accelerator_mods) {
        var mh$ = gtk_accelerator_parse_with_keycode$MH();
        try {
            return (int)mh$.invokeExact(accelerator, display, accelerator_key, accelerator_codes, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_accelerator_name$MH,"gtk_accelerator_name");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_name(guint accelerator_key, GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_name(int accelerator_key, int accelerator_mods) {
        var mh$ = gtk_accelerator_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_accelerator_name_with_keycode$MH,"gtk_accelerator_name_with_keycode");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_name_with_keycode(GdkDisplay* display, guint accelerator_key, guint keycode, GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_name_with_keycode(MemorySegment display, int accelerator_key, int keycode, int accelerator_mods) {
        var mh$ = gtk_accelerator_name_with_keycode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_accelerator_get_label$MH,"gtk_accelerator_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_get_label(guint accelerator_key, GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_get_label(int accelerator_key, int accelerator_mods) {
        var mh$ = gtk_accelerator_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_accelerator_get_label_with_keycode$MH,"gtk_accelerator_get_label_with_keycode");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_get_label_with_keycode(GdkDisplay* display, guint accelerator_key, guint keycode, GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_get_label_with_keycode(MemorySegment display, int accelerator_key, int keycode, int accelerator_mods) {
        var mh$ = gtk_accelerator_get_label_with_keycode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_default_mod_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_accelerator_get_default_mod_mask$MH,"gtk_accelerator_get_default_mod_mask");
    }
    /**
     * {@snippet :
     * GdkModifierType gtk_accelerator_get_default_mod_mask();
     * }
     */
    public static int gtk_accelerator_get_default_mod_mask() {
        var mh$ = gtk_accelerator_get_default_mod_mask$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_border_get_type$MH,"gtk_border_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_border_get_type();
     * }
     */
    public static long gtk_border_get_type() {
        var mh$ = gtk_border_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_border_new$MH,"gtk_border_new");
    }
    /**
     * {@snippet :
     * GtkBorder* gtk_border_new();
     * }
     */
    public static MemorySegment gtk_border_new() {
        var mh$ = gtk_border_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_border_copy$MH,"gtk_border_copy");
    }
    /**
     * {@snippet :
     * GtkBorder* gtk_border_copy(const GtkBorder* border_);
     * }
     */
    public static MemorySegment gtk_border_copy(MemorySegment border_) {
        var mh$ = gtk_border_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_border_free$MH,"gtk_border_free");
    }
    /**
     * {@snippet :
     * void gtk_border_free(GtkBorder* border_);
     * }
     */
    public static void gtk_border_free(MemorySegment border_) {
        var mh$ = gtk_border_free$MH();
        try {
            mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkBorder* GtkBorder_autoptr;
     * }
     */
    public static final OfAddress GtkBorder_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkBorder_listautoptr;
     * }
     */
    public static final OfAddress GtkBorder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkBorder_slistautoptr;
     * }
     */
    public static final OfAddress GtkBorder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkBorder_queueautoptr;
     * }
     */
    public static final OfAddress GtkBorder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_shortcut_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_shortcut_get_type$MH,"gtk_shortcut_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_get_type();
     * }
     */
    public static long gtk_shortcut_get_type() {
        var mh$ = gtk_shortcut_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkShortcut* GtkShortcut_autoptr;
     * }
     */
    public static final OfAddress GtkShortcut_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcut_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcut_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcut_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcut_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcut_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcut_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkShortcutClass_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutClass_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_shortcut_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_shortcut_new$MH,"gtk_shortcut_new");
    }
    /**
     * {@snippet :
     * GtkShortcut* gtk_shortcut_new(GtkShortcutTrigger* trigger, GtkShortcutAction* action);
     * }
     */
    public static MemorySegment gtk_shortcut_new(MemorySegment trigger, MemorySegment action) {
        var mh$ = gtk_shortcut_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(trigger, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_new_with_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_shortcut_new_with_arguments$MH,"gtk_shortcut_new_with_arguments");
    }
    /**
     * {@snippet :
     * GtkShortcut* gtk_shortcut_new_with_arguments(GtkShortcutTrigger* trigger, GtkShortcutAction* action, char* format_string,...);
     * }
     */
    public static MemorySegment gtk_shortcut_new_with_arguments(MemorySegment trigger, MemorySegment action, MemorySegment format_string, Object... x3) {
        var mh$ = gtk_shortcut_new_with_arguments$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(trigger, action, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_trigger$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_shortcut_get_trigger$MH,"gtk_shortcut_get_trigger");
    }
    /**
     * {@snippet :
     * GtkShortcutTrigger* gtk_shortcut_get_trigger(GtkShortcut* self);
     * }
     */
    public static MemorySegment gtk_shortcut_get_trigger(MemorySegment self) {
        var mh$ = gtk_shortcut_get_trigger$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_set_trigger$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_shortcut_set_trigger$MH,"gtk_shortcut_set_trigger");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_set_trigger(GtkShortcut* self, GtkShortcutTrigger* trigger);
     * }
     */
    public static void gtk_shortcut_set_trigger(MemorySegment self, MemorySegment trigger) {
        var mh$ = gtk_shortcut_set_trigger$MH();
        try {
            mh$.invokeExact(self, trigger);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_shortcut_get_action$MH,"gtk_shortcut_get_action");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_shortcut_get_action(GtkShortcut* self);
     * }
     */
    public static MemorySegment gtk_shortcut_get_action(MemorySegment self) {
        var mh$ = gtk_shortcut_get_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.gtk_shortcut_set_action$MH,"gtk_shortcut_set_action");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_set_action(GtkShortcut* self, GtkShortcutAction* action);
     * }
     */
    public static void gtk_shortcut_set_action(MemorySegment self, MemorySegment action) {
        var mh$ = gtk_shortcut_set_action$MH();
        try {
            mh$.invokeExact(self, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.gtk_shortcut_get_arguments$MH,"gtk_shortcut_get_arguments");
    }
    /**
     * {@snippet :
     * GVariant* gtk_shortcut_get_arguments(GtkShortcut* self);
     * }
     */
    public static MemorySegment gtk_shortcut_get_arguments(MemorySegment self) {
        var mh$ = gtk_shortcut_get_arguments$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_set_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.gtk_shortcut_set_arguments$MH,"gtk_shortcut_set_arguments");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_set_arguments(GtkShortcut* self, GVariant* args);
     * }
     */
    public static void gtk_shortcut_set_arguments(MemorySegment self, MemorySegment args) {
        var mh$ = gtk_shortcut_set_arguments$MH();
        try {
            mh$.invokeExact(self, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_SHORTCUT_ACTION_EXCLUSIVE = 1;
     * }
     */
    public static int GTK_SHORTCUT_ACTION_EXCLUSIVE() {
        return (int)1L;
    }
    public static MethodHandle gtk_shortcut_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.gtk_shortcut_action_get_type$MH,"gtk_shortcut_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcut_action_get_type();
     * }
     */
    public static long gtk_shortcut_action_get_type() {
        var mh$ = gtk_shortcut_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkShortcutAction* GtkShortcutAction_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutAction_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkShortcutActionClass* GtkShortcutActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_shortcut_action_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.gtk_shortcut_action_to_string$MH,"gtk_shortcut_action_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_action_to_string(GtkShortcutAction* self);
     * }
     */
    public static MemorySegment gtk_shortcut_action_to_string(MemorySegment self) {
        var mh$ = gtk_shortcut_action_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_parse_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.gtk_shortcut_action_parse_string$MH,"gtk_shortcut_action_parse_string");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_shortcut_action_parse_string(char* string);
     * }
     */
    public static MemorySegment gtk_shortcut_action_parse_string(MemorySegment string) {
        var mh$ = gtk_shortcut_action_parse_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.gtk_shortcut_action_print$MH,"gtk_shortcut_action_print");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_action_print(GtkShortcutAction* self, GString* string);
     * }
     */
    public static void gtk_shortcut_action_print(MemorySegment self, MemorySegment string) {
        var mh$ = gtk_shortcut_action_print$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.gtk_shortcut_action_activate$MH,"gtk_shortcut_action_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_shortcut_action_activate(GtkShortcutAction* self, GtkShortcutActionFlags flags, GtkWidget* widget, GVariant* args);
     * }
     */
    public static int gtk_shortcut_action_activate(MemorySegment self, int flags, MemorySegment widget, MemorySegment args) {
        var mh$ = gtk_shortcut_action_activate$MH();
        try {
            return (int)mh$.invokeExact(self, flags, widget, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_nothing_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.gtk_nothing_action_get_type$MH,"gtk_nothing_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_nothing_action_get_type();
     * }
     */
    public static long gtk_nothing_action_get_type() {
        var mh$ = gtk_nothing_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNothingAction* GtkNothingAction_autoptr;
     * }
     */
    public static final OfAddress GtkNothingAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNothingAction_listautoptr;
     * }
     */
    public static final OfAddress GtkNothingAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNothingAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkNothingAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNothingAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkNothingAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkNothingActionClass* GtkNothingActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkNothingActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNothingActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNothingActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNothingActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNothingActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNothingActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNothingActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_nothing_action_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.gtk_nothing_action_get$MH,"gtk_nothing_action_get");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_nothing_action_get();
     * }
     */
    public static MemorySegment gtk_nothing_action_get() {
        var mh$ = gtk_nothing_action_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_callback_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.gtk_callback_action_get_type$MH,"gtk_callback_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_callback_action_get_type();
     * }
     */
    public static long gtk_callback_action_get_type() {
        var mh$ = gtk_callback_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkCallbackAction* GtkCallbackAction_autoptr;
     * }
     */
    public static final OfAddress GtkCallbackAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCallbackAction_listautoptr;
     * }
     */
    public static final OfAddress GtkCallbackAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCallbackAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkCallbackAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCallbackAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkCallbackAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkCallbackActionClass* GtkCallbackActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkCallbackActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkCallbackActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkCallbackActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkCallbackActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkCallbackActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkCallbackActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkCallbackActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_callback_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.gtk_callback_action_new$MH,"gtk_callback_action_new");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_callback_action_new(GtkShortcutFunc callback, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static MemorySegment gtk_callback_action_new(MemorySegment callback, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_callback_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.gtk_mnemonic_action_get_type$MH,"gtk_mnemonic_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_mnemonic_action_get_type();
     * }
     */
    public static long gtk_mnemonic_action_get_type() {
        var mh$ = gtk_mnemonic_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMnemonicAction* GtkMnemonicAction_autoptr;
     * }
     */
    public static final OfAddress GtkMnemonicAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMnemonicAction_listautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMnemonicAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMnemonicAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkMnemonicActionClass* GtkMnemonicActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkMnemonicActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMnemonicActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMnemonicActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMnemonicActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkMnemonicActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_mnemonic_action_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.gtk_mnemonic_action_get$MH,"gtk_mnemonic_action_get");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_mnemonic_action_get();
     * }
     */
    public static MemorySegment gtk_mnemonic_action_get() {
        var mh$ = gtk_mnemonic_action_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_activate_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.gtk_activate_action_get_type$MH,"gtk_activate_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_activate_action_get_type();
     * }
     */
    public static long gtk_activate_action_get_type() {
        var mh$ = gtk_activate_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkActivateAction* GtkActivateAction_autoptr;
     * }
     */
    public static final OfAddress GtkActivateAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkActivateAction_listautoptr;
     * }
     */
    public static final OfAddress GtkActivateAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkActivateAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkActivateAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkActivateAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkActivateAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkActivateActionClass* GtkActivateActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkActivateActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkActivateActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkActivateActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkActivateActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkActivateActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkActivateActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkActivateActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_activate_action_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.gtk_activate_action_get$MH,"gtk_activate_action_get");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_activate_action_get();
     * }
     */
    public static MemorySegment gtk_activate_action_get() {
        var mh$ = gtk_activate_action_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gtk_signal_action_get_type$MH,"gtk_signal_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_signal_action_get_type();
     * }
     */
    public static long gtk_signal_action_get_type() {
        var mh$ = gtk_signal_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkSignalAction* GtkSignalAction_autoptr;
     * }
     */
    public static final OfAddress GtkSignalAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSignalAction_listautoptr;
     * }
     */
    public static final OfAddress GtkSignalAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSignalAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkSignalAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSignalAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkSignalAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkSignalActionClass* GtkSignalActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkSignalActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkSignalActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkSignalActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkSignalActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkSignalActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkSignalActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkSignalActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_signal_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gtk_signal_action_new$MH,"gtk_signal_action_new");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_signal_action_new(char* signal_name);
     * }
     */
    public static MemorySegment gtk_signal_action_new(MemorySegment signal_name) {
        var mh$ = gtk_signal_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(signal_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_action_get_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gtk_signal_action_get_signal_name$MH,"gtk_signal_action_get_signal_name");
    }
    /**
     * {@snippet :
     * char* gtk_signal_action_get_signal_name(GtkSignalAction* self);
     * }
     */
    public static MemorySegment gtk_signal_action_get_signal_name(MemorySegment self) {
        var mh$ = gtk_signal_action_get_signal_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_named_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gtk_named_action_get_type$MH,"gtk_named_action_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_named_action_get_type();
     * }
     */
    public static long gtk_named_action_get_type() {
        var mh$ = gtk_named_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNamedAction* GtkNamedAction_autoptr;
     * }
     */
    public static final OfAddress GtkNamedAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNamedAction_listautoptr;
     * }
     */
    public static final OfAddress GtkNamedAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNamedAction_slistautoptr;
     * }
     */
    public static final OfAddress GtkNamedAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNamedAction_queueautoptr;
     * }
     */
    public static final OfAddress GtkNamedAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkNamedActionClass* GtkNamedActionClass_autoptr;
     * }
     */
    public static final OfAddress GtkNamedActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNamedActionClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNamedActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNamedActionClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNamedActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNamedActionClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNamedActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_named_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gtk_named_action_new$MH,"gtk_named_action_new");
    }
    /**
     * {@snippet :
     * GtkShortcutAction* gtk_named_action_new(char* name);
     * }
     */
    public static MemorySegment gtk_named_action_new(MemorySegment name) {
        var mh$ = gtk_named_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_named_action_get_action_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.gtk_named_action_get_action_name$MH,"gtk_named_action_get_action_name");
    }
    /**
     * {@snippet :
     * char* gtk_named_action_get_action_name(GtkNamedAction* self);
     * }
     */
    public static MemorySegment gtk_named_action_get_action_name(MemorySegment self) {
        var mh$ = gtk_named_action_get_action_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gtk_widget_get_type$MH,"gtk_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_widget_get_type();
     * }
     */
    public static long gtk_widget_get_type() {
        var mh$ = gtk_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unparent$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gtk_widget_unparent$MH,"gtk_widget_unparent");
    }
    /**
     * {@snippet :
     * void gtk_widget_unparent(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unparent(MemorySegment widget) {
        var mh$ = gtk_widget_unparent$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gtk_widget_show$MH,"gtk_widget_show");
    }
    /**
     * {@snippet :
     * void gtk_widget_show(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show(MemorySegment widget) {
        var mh$ = gtk_widget_show$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.gtk_widget_hide$MH,"gtk_widget_hide");
    }
    /**
     * {@snippet :
     * void gtk_widget_hide(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_hide(MemorySegment widget) {
        var mh$ = gtk_widget_hide$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gtk_widget_map$MH,"gtk_widget_map");
    }
    /**
     * {@snippet :
     * void gtk_widget_map(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_map(MemorySegment widget) {
        var mh$ = gtk_widget_map$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unmap$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gtk_widget_unmap$MH,"gtk_widget_unmap");
    }
    /**
     * {@snippet :
     * void gtk_widget_unmap(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unmap(MemorySegment widget) {
        var mh$ = gtk_widget_unmap$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gtk_widget_realize$MH,"gtk_widget_realize");
    }
    /**
     * {@snippet :
     * void gtk_widget_realize(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_realize(MemorySegment widget) {
        var mh$ = gtk_widget_realize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gtk_widget_unrealize$MH,"gtk_widget_unrealize");
    }
    /**
     * {@snippet :
     * void gtk_widget_unrealize(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unrealize(MemorySegment widget) {
        var mh$ = gtk_widget_unrealize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gtk_widget_queue_draw$MH,"gtk_widget_queue_draw");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_draw(MemorySegment widget) {
        var mh$ = gtk_widget_queue_draw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.gtk_widget_queue_resize$MH,"gtk_widget_queue_resize");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_resize(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_resize(MemorySegment widget) {
        var mh$ = gtk_widget_queue_resize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gtk_widget_queue_allocate$MH,"gtk_widget_queue_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_allocate(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_allocate(MemorySegment widget) {
        var mh$ = gtk_widget_queue_allocate$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gtk_widget_get_frame_clock$MH,"gtk_widget_get_frame_clock");
    }
    /**
     * {@snippet :
     * GdkFrameClock* gtk_widget_get_frame_clock(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_frame_clock(MemorySegment widget) {
        var mh$ = gtk_widget_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gtk_widget_size_allocate$MH,"gtk_widget_size_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_allocate(GtkWidget* widget, const GtkAllocation* allocation, int baseline);
     * }
     */
    public static void gtk_widget_size_allocate(MemorySegment widget, MemorySegment allocation, int baseline) {
        var mh$ = gtk_widget_size_allocate$MH();
        try {
            mh$.invokeExact(widget, allocation, baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gtk_widget_allocate$MH,"gtk_widget_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_allocate(GtkWidget* widget, int width, int height, int baseline, GskTransform* transform);
     * }
     */
    public static void gtk_widget_allocate(MemorySegment widget, int width, int height, int baseline, MemorySegment transform) {
        var mh$ = gtk_widget_allocate$MH();
        try {
            mh$.invokeExact(widget, width, height, baseline, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_request_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gtk_widget_get_request_mode$MH,"gtk_widget_get_request_mode");
    }
    /**
     * {@snippet :
     * GtkSizeRequestMode gtk_widget_get_request_mode(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_request_mode(MemorySegment widget) {
        var mh$ = gtk_widget_get_request_mode$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_measure$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.gtk_widget_measure$MH,"gtk_widget_measure");
    }
    /**
     * {@snippet :
     * void gtk_widget_measure(GtkWidget* widget, GtkOrientation orientation, int for_size, int* minimum, int* natural, int* minimum_baseline, int* natural_baseline);
     * }
     */
    public static void gtk_widget_measure(MemorySegment widget, int orientation, int for_size, MemorySegment minimum, MemorySegment natural, MemorySegment minimum_baseline, MemorySegment natural_baseline) {
        var mh$ = gtk_widget_measure$MH();
        try {
            mh$.invokeExact(widget, orientation, for_size, minimum, natural, minimum_baseline, natural_baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gtk_widget_get_preferred_size$MH,"gtk_widget_get_preferred_size");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_size(GtkWidget* widget, GtkRequisition* minimum_size, GtkRequisition* natural_size);
     * }
     */
    public static void gtk_widget_get_preferred_size(MemorySegment widget, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_widget_get_preferred_size$MH();
        try {
            mh$.invokeExact(widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_layout_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gtk_widget_set_layout_manager$MH,"gtk_widget_set_layout_manager");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_layout_manager(GtkWidget* widget, GtkLayoutManager* layout_manager);
     * }
     */
    public static void gtk_widget_set_layout_manager(MemorySegment widget, MemorySegment layout_manager) {
        var mh$ = gtk_widget_set_layout_manager$MH();
        try {
            mh$.invokeExact(widget, layout_manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_layout_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gtk_widget_get_layout_manager$MH,"gtk_widget_get_layout_manager");
    }
    /**
     * {@snippet :
     * GtkLayoutManager* gtk_widget_get_layout_manager(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_layout_manager(MemorySegment widget) {
        var mh$ = gtk_widget_get_layout_manager$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_layout_manager_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gtk_widget_class_set_layout_manager_type$MH,"gtk_widget_class_set_layout_manager_type");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_layout_manager_type(GtkWidgetClass* widget_class, GType type);
     * }
     */
    public static void gtk_widget_class_set_layout_manager_type(MemorySegment widget_class, long type) {
        var mh$ = gtk_widget_class_set_layout_manager_type$MH();
        try {
            mh$.invokeExact(widget_class, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_layout_manager_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gtk_widget_class_get_layout_manager_type$MH,"gtk_widget_class_get_layout_manager_type");
    }
    /**
     * {@snippet :
     * GType gtk_widget_class_get_layout_manager_type(GtkWidgetClass* widget_class);
     * }
     */
    public static long gtk_widget_class_get_layout_manager_type(MemorySegment widget_class) {
        var mh$ = gtk_widget_class_get_layout_manager_type$MH();
        try {
            return (long)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_binding$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.gtk_widget_class_add_binding$MH,"gtk_widget_class_add_binding");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_add_binding(GtkWidgetClass* widget_class, guint keyval, GdkModifierType mods, GtkShortcutFunc callback, char* format_string,...);
     * }
     */
    public static void gtk_widget_class_add_binding(MemorySegment widget_class, int keyval, int mods, MemorySegment callback, MemorySegment format_string, Object... x5) {
        var mh$ = gtk_widget_class_add_binding$MH();
        try {
            mh$.invokeExact(widget_class, keyval, mods, callback, format_string, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_binding_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.gtk_widget_class_add_binding_signal$MH,"gtk_widget_class_add_binding_signal");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_add_binding_signal(GtkWidgetClass* widget_class, guint keyval, GdkModifierType mods, char* signal, char* format_string,...);
     * }
     */
    public static void gtk_widget_class_add_binding_signal(MemorySegment widget_class, int keyval, int mods, MemorySegment signal, MemorySegment format_string, Object... x5) {
        var mh$ = gtk_widget_class_add_binding_signal$MH();
        try {
            mh$.invokeExact(widget_class, keyval, mods, signal, format_string, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_binding_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.gtk_widget_class_add_binding_action$MH,"gtk_widget_class_add_binding_action");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_add_binding_action(GtkWidgetClass* widget_class, guint keyval, GdkModifierType mods, char* action_name, char* format_string,...);
     * }
     */
    public static void gtk_widget_class_add_binding_action(MemorySegment widget_class, int keyval, int mods, MemorySegment action_name, MemorySegment format_string, Object... x5) {
        var mh$ = gtk_widget_class_add_binding_action$MH();
        try {
            mh$.invokeExact(widget_class, keyval, mods, action_name, format_string, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.gtk_widget_class_add_shortcut$MH,"gtk_widget_class_add_shortcut");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_add_shortcut(GtkWidgetClass* widget_class, GtkShortcut* shortcut);
     * }
     */
    public static void gtk_widget_class_add_shortcut(MemorySegment widget_class, MemorySegment shortcut) {
        var mh$ = gtk_widget_class_add_shortcut$MH();
        try {
            mh$.invokeExact(widget_class, shortcut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_activate_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.gtk_widget_class_set_activate_signal$MH,"gtk_widget_class_set_activate_signal");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_activate_signal(GtkWidgetClass* widget_class, guint signal_id);
     * }
     */
    public static void gtk_widget_class_set_activate_signal(MemorySegment widget_class, int signal_id) {
        var mh$ = gtk_widget_class_set_activate_signal$MH();
        try {
            mh$.invokeExact(widget_class, signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_activate_signal_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.gtk_widget_class_set_activate_signal_from_name$MH,"gtk_widget_class_set_activate_signal_from_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_activate_signal_from_name(GtkWidgetClass* widget_class, char* signal_name);
     * }
     */
    public static void gtk_widget_class_set_activate_signal_from_name(MemorySegment widget_class, MemorySegment signal_name) {
        var mh$ = gtk_widget_class_set_activate_signal_from_name$MH();
        try {
            mh$.invokeExact(widget_class, signal_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_activate_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.gtk_widget_class_get_activate_signal$MH,"gtk_widget_class_get_activate_signal");
    }
    /**
     * {@snippet :
     * guint gtk_widget_class_get_activate_signal(GtkWidgetClass* widget_class);
     * }
     */
    public static int gtk_widget_class_get_activate_signal(MemorySegment widget_class) {
        var mh$ = gtk_widget_class_get_activate_signal$MH();
        try {
            return (int)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_mnemonic_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.gtk_widget_mnemonic_activate$MH,"gtk_widget_mnemonic_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_mnemonic_activate(GtkWidget* widget, gboolean group_cycling);
     * }
     */
    public static int gtk_widget_mnemonic_activate(MemorySegment widget, int group_cycling) {
        var mh$ = gtk_widget_mnemonic_activate$MH();
        try {
            return (int)mh$.invokeExact(widget, group_cycling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.gtk_widget_activate$MH,"gtk_widget_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_activate(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_activate(MemorySegment widget) {
        var mh$ = gtk_widget_activate$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.gtk_widget_set_can_focus$MH,"gtk_widget_set_can_focus");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_can_focus(GtkWidget* widget, gboolean can_focus);
     * }
     */
    public static void gtk_widget_set_can_focus(MemorySegment widget, int can_focus) {
        var mh$ = gtk_widget_set_can_focus$MH();
        try {
            mh$.invokeExact(widget, can_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.gtk_widget_get_can_focus$MH,"gtk_widget_get_can_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_can_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_can_focus(MemorySegment widget) {
        var mh$ = gtk_widget_get_can_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_focusable$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.gtk_widget_set_focusable$MH,"gtk_widget_set_focusable");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_focusable(GtkWidget* widget, gboolean focusable);
     * }
     */
    public static void gtk_widget_set_focusable(MemorySegment widget, int focusable) {
        var mh$ = gtk_widget_set_focusable$MH();
        try {
            mh$.invokeExact(widget, focusable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_focusable$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.gtk_widget_get_focusable$MH,"gtk_widget_get_focusable");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_focusable(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_focusable(MemorySegment widget) {
        var mh$ = gtk_widget_get_focusable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.gtk_widget_has_focus$MH,"gtk_widget_has_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_focus(MemorySegment widget) {
        var mh$ = gtk_widget_has_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.gtk_widget_is_focus$MH,"gtk_widget_is_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_focus(MemorySegment widget) {
        var mh$ = gtk_widget_is_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_visible_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.gtk_widget_has_visible_focus$MH,"gtk_widget_has_visible_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_visible_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_visible_focus(MemorySegment widget) {
        var mh$ = gtk_widget_has_visible_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.gtk_widget_grab_focus$MH,"gtk_widget_grab_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_grab_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_grab_focus(MemorySegment widget) {
        var mh$ = gtk_widget_grab_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.gtk_widget_set_focus_on_click$MH,"gtk_widget_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_focus_on_click(GtkWidget* widget, gboolean focus_on_click);
     * }
     */
    public static void gtk_widget_set_focus_on_click(MemorySegment widget, int focus_on_click) {
        var mh$ = gtk_widget_set_focus_on_click$MH();
        try {
            mh$.invokeExact(widget, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.gtk_widget_get_focus_on_click$MH,"gtk_widget_get_focus_on_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_focus_on_click(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_focus_on_click(MemorySegment widget) {
        var mh$ = gtk_widget_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.gtk_widget_set_can_target$MH,"gtk_widget_set_can_target");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_can_target(GtkWidget* widget, gboolean can_target);
     * }
     */
    public static void gtk_widget_set_can_target(MemorySegment widget, int can_target) {
        var mh$ = gtk_widget_set_can_target$MH();
        try {
            mh$.invokeExact(widget, can_target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.gtk_widget_get_can_target$MH,"gtk_widget_get_can_target");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_can_target(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_can_target(MemorySegment widget) {
        var mh$ = gtk_widget_get_can_target$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.gtk_widget_has_default$MH,"gtk_widget_has_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_default(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_default(MemorySegment widget) {
        var mh$ = gtk_widget_has_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_receives_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.gtk_widget_set_receives_default$MH,"gtk_widget_set_receives_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_receives_default(GtkWidget* widget, gboolean receives_default);
     * }
     */
    public static void gtk_widget_set_receives_default(MemorySegment widget, int receives_default) {
        var mh$ = gtk_widget_set_receives_default$MH();
        try {
            mh$.invokeExact(widget, receives_default);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_receives_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.gtk_widget_get_receives_default$MH,"gtk_widget_get_receives_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_receives_default(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_receives_default(MemorySegment widget) {
        var mh$ = gtk_widget_get_receives_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.gtk_widget_set_name$MH,"gtk_widget_set_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_name(GtkWidget* widget, char* name);
     * }
     */
    public static void gtk_widget_set_name(MemorySegment widget, MemorySegment name) {
        var mh$ = gtk_widget_set_name$MH();
        try {
            mh$.invokeExact(widget, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.gtk_widget_get_name$MH,"gtk_widget_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_name(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_name(MemorySegment widget) {
        var mh$ = gtk_widget_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.gtk_widget_set_state_flags$MH,"gtk_widget_set_state_flags");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_state_flags(GtkWidget* widget, GtkStateFlags flags, gboolean clear);
     * }
     */
    public static void gtk_widget_set_state_flags(MemorySegment widget, int flags, int clear) {
        var mh$ = gtk_widget_set_state_flags$MH();
        try {
            mh$.invokeExact(widget, flags, clear);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unset_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.gtk_widget_unset_state_flags$MH,"gtk_widget_unset_state_flags");
    }
    /**
     * {@snippet :
     * void gtk_widget_unset_state_flags(GtkWidget* widget, GtkStateFlags flags);
     * }
     */
    public static void gtk_widget_unset_state_flags(MemorySegment widget, int flags) {
        var mh$ = gtk_widget_unset_state_flags$MH();
        try {
            mh$.invokeExact(widget, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.gtk_widget_get_state_flags$MH,"gtk_widget_get_state_flags");
    }
    /**
     * {@snippet :
     * GtkStateFlags gtk_widget_get_state_flags(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_state_flags(MemorySegment widget) {
        var mh$ = gtk_widget_get_state_flags$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.gtk_widget_set_sensitive$MH,"gtk_widget_set_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_sensitive(GtkWidget* widget, gboolean sensitive);
     * }
     */
    public static void gtk_widget_set_sensitive(MemorySegment widget, int sensitive) {
        var mh$ = gtk_widget_set_sensitive$MH();
        try {
            mh$.invokeExact(widget, sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.gtk_widget_get_sensitive$MH,"gtk_widget_get_sensitive");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_sensitive(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_sensitive(MemorySegment widget) {
        var mh$ = gtk_widget_get_sensitive$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.gtk_widget_is_sensitive$MH,"gtk_widget_is_sensitive");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_sensitive(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_sensitive(MemorySegment widget) {
        var mh$ = gtk_widget_is_sensitive$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.gtk_widget_set_visible$MH,"gtk_widget_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_visible(GtkWidget* widget, gboolean visible);
     * }
     */
    public static void gtk_widget_set_visible(MemorySegment widget, int visible) {
        var mh$ = gtk_widget_set_visible$MH();
        try {
            mh$.invokeExact(widget, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.gtk_widget_get_visible$MH,"gtk_widget_get_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_visible(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_visible(MemorySegment widget) {
        var mh$ = gtk_widget_get_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.gtk_widget_is_visible$MH,"gtk_widget_is_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_visible(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_visible(MemorySegment widget) {
        var mh$ = gtk_widget_is_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_drawable$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.gtk_widget_is_drawable$MH,"gtk_widget_is_drawable");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_drawable(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_drawable(MemorySegment widget) {
        var mh$ = gtk_widget_is_drawable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.gtk_widget_get_realized$MH,"gtk_widget_get_realized");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_realized(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_realized(MemorySegment widget) {
        var mh$ = gtk_widget_get_realized$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.gtk_widget_get_mapped$MH,"gtk_widget_get_mapped");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_mapped(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_mapped(MemorySegment widget) {
        var mh$ = gtk_widget_get_mapped$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.gtk_widget_set_parent$MH,"gtk_widget_set_parent");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_parent(GtkWidget* widget, GtkWidget* parent);
     * }
     */
    public static void gtk_widget_set_parent(MemorySegment widget, MemorySegment parent) {
        var mh$ = gtk_widget_set_parent$MH();
        try {
            mh$.invokeExact(widget, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.gtk_widget_get_parent$MH,"gtk_widget_get_parent");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_parent(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_parent(MemorySegment widget) {
        var mh$ = gtk_widget_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.gtk_widget_get_root$MH,"gtk_widget_get_root");
    }
    /**
     * {@snippet :
     * GtkRoot* gtk_widget_get_root(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_root(MemorySegment widget) {
        var mh$ = gtk_widget_get_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.gtk_widget_get_native$MH,"gtk_widget_get_native");
    }
    /**
     * {@snippet :
     * GtkNative* gtk_widget_get_native(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_native(MemorySegment widget) {
        var mh$ = gtk_widget_get_native$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_child_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.gtk_widget_set_child_visible$MH,"gtk_widget_set_child_visible");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_child_visible(GtkWidget* widget, gboolean child_visible);
     * }
     */
    public static void gtk_widget_set_child_visible(MemorySegment widget, int child_visible) {
        var mh$ = gtk_widget_set_child_visible$MH();
        try {
            mh$.invokeExact(widget, child_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_child_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.gtk_widget_get_child_visible$MH,"gtk_widget_get_child_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_child_visible(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_child_visible(MemorySegment widget) {
        var mh$ = gtk_widget_get_child_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.gtk_widget_get_allocated_width$MH,"gtk_widget_get_allocated_width");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_width(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_width(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_width$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.gtk_widget_get_allocated_height$MH,"gtk_widget_get_allocated_height");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_height(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_height(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_height$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.gtk_widget_get_allocated_baseline$MH,"gtk_widget_get_allocated_baseline");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_baseline(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_baseline(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_baseline$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.gtk_widget_get_allocation$MH,"gtk_widget_get_allocation");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_allocation(GtkWidget* widget, GtkAllocation* allocation);
     * }
     */
    public static void gtk_widget_get_allocation(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_get_allocation$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_compute_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.gtk_widget_compute_transform$MH,"gtk_widget_compute_transform");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_compute_transform(GtkWidget* widget, GtkWidget* target, graphene_matrix_t* out_transform);
     * }
     */
    public static int gtk_widget_compute_transform(MemorySegment widget, MemorySegment target, MemorySegment out_transform) {
        var mh$ = gtk_widget_compute_transform$MH();
        try {
            return (int)mh$.invokeExact(widget, target, out_transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_compute_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.gtk_widget_compute_bounds$MH,"gtk_widget_compute_bounds");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_compute_bounds(GtkWidget* widget, GtkWidget* target, graphene_rect_t* out_bounds);
     * }
     */
    public static int gtk_widget_compute_bounds(MemorySegment widget, MemorySegment target, MemorySegment out_bounds) {
        var mh$ = gtk_widget_compute_bounds$MH();
        try {
            return (int)mh$.invokeExact(widget, target, out_bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_compute_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.gtk_widget_compute_point$MH,"gtk_widget_compute_point");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_compute_point(GtkWidget* widget, GtkWidget* target, const graphene_point_t* point, graphene_point_t* out_point);
     * }
     */
    public static int gtk_widget_compute_point(MemorySegment widget, MemorySegment target, MemorySegment point, MemorySegment out_point) {
        var mh$ = gtk_widget_compute_point$MH();
        try {
            return (int)mh$.invokeExact(widget, target, point, out_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.gtk_widget_get_width$MH,"gtk_widget_get_width");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_width(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_width(MemorySegment widget) {
        var mh$ = gtk_widget_get_width$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.gtk_widget_get_height$MH,"gtk_widget_get_height");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_height(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_height(MemorySegment widget) {
        var mh$ = gtk_widget_get_height$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.gtk_widget_get_size$MH,"gtk_widget_get_size");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_size(GtkWidget* widget, GtkOrientation orientation);
     * }
     */
    public static int gtk_widget_get_size(MemorySegment widget, int orientation) {
        var mh$ = gtk_widget_get_size$MH();
        try {
            return (int)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_child_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.gtk_widget_child_focus$MH,"gtk_widget_child_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_child_focus(GtkWidget* widget, GtkDirectionType direction);
     * }
     */
    public static int gtk_widget_child_focus(MemorySegment widget, int direction) {
        var mh$ = gtk_widget_child_focus$MH();
        try {
            return (int)mh$.invokeExact(widget, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_keynav_failed$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.gtk_widget_keynav_failed$MH,"gtk_widget_keynav_failed");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_keynav_failed(GtkWidget* widget, GtkDirectionType direction);
     * }
     */
    public static int gtk_widget_keynav_failed(MemorySegment widget, int direction) {
        var mh$ = gtk_widget_keynav_failed$MH();
        try {
            return (int)mh$.invokeExact(widget, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_error_bell$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.gtk_widget_error_bell$MH,"gtk_widget_error_bell");
    }
    /**
     * {@snippet :
     * void gtk_widget_error_bell(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_error_bell(MemorySegment widget) {
        var mh$ = gtk_widget_error_bell$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.gtk_widget_set_size_request$MH,"gtk_widget_set_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_size_request(GtkWidget* widget, int width, int height);
     * }
     */
    public static void gtk_widget_set_size_request(MemorySegment widget, int width, int height) {
        var mh$ = gtk_widget_set_size_request$MH();
        try {
            mh$.invokeExact(widget, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.gtk_widget_get_size_request$MH,"gtk_widget_get_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_size_request(GtkWidget* widget, int* width, int* height);
     * }
     */
    public static void gtk_widget_get_size_request(MemorySegment widget, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_widget_get_size_request$MH();
        try {
            mh$.invokeExact(widget, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.gtk_widget_set_opacity$MH,"gtk_widget_set_opacity");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_opacity(GtkWidget* widget, double opacity);
     * }
     */
    public static void gtk_widget_set_opacity(MemorySegment widget, double opacity) {
        var mh$ = gtk_widget_set_opacity$MH();
        try {
            mh$.invokeExact(widget, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.gtk_widget_get_opacity$MH,"gtk_widget_get_opacity");
    }
    /**
     * {@snippet :
     * double gtk_widget_get_opacity(GtkWidget* widget);
     * }
     */
    public static double gtk_widget_get_opacity(MemorySegment widget) {
        var mh$ = gtk_widget_get_opacity$MH();
        try {
            return (double)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_overflow$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.gtk_widget_set_overflow$MH,"gtk_widget_set_overflow");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_overflow(GtkWidget* widget, GtkOverflow overflow);
     * }
     */
    public static void gtk_widget_set_overflow(MemorySegment widget, int overflow) {
        var mh$ = gtk_widget_set_overflow$MH();
        try {
            mh$.invokeExact(widget, overflow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_overflow$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.gtk_widget_get_overflow$MH,"gtk_widget_get_overflow");
    }
    /**
     * {@snippet :
     * GtkOverflow gtk_widget_get_overflow(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_overflow(MemorySegment widget) {
        var mh$ = gtk_widget_get_overflow$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.gtk_widget_get_ancestor$MH,"gtk_widget_get_ancestor");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_ancestor(GtkWidget* widget, GType widget_type);
     * }
     */
    public static MemorySegment gtk_widget_get_ancestor(MemorySegment widget, long widget_type) {
        var mh$ = gtk_widget_get_ancestor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, widget_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.gtk_widget_get_scale_factor$MH,"gtk_widget_get_scale_factor");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_scale_factor(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_scale_factor(MemorySegment widget) {
        var mh$ = gtk_widget_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.gtk_widget_get_display$MH,"gtk_widget_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_widget_get_display(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_display(MemorySegment widget) {
        var mh$ = gtk_widget_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.gtk_widget_get_settings$MH,"gtk_widget_get_settings");
    }
    /**
     * {@snippet :
     * GtkSettings* gtk_widget_get_settings(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_settings(MemorySegment widget) {
        var mh$ = gtk_widget_get_settings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.gtk_widget_get_clipboard$MH,"gtk_widget_get_clipboard");
    }
    /**
     * {@snippet :
     * GdkClipboard* gtk_widget_get_clipboard(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_clipboard(MemorySegment widget) {
        var mh$ = gtk_widget_get_clipboard$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_primary_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.gtk_widget_get_primary_clipboard$MH,"gtk_widget_get_primary_clipboard");
    }
    /**
     * {@snippet :
     * GdkClipboard* gtk_widget_get_primary_clipboard(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_primary_clipboard(MemorySegment widget) {
        var mh$ = gtk_widget_get_primary_clipboard$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_hexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.gtk_widget_get_hexpand$MH,"gtk_widget_get_hexpand");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_hexpand(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_hexpand(MemorySegment widget) {
        var mh$ = gtk_widget_get_hexpand$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_hexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.gtk_widget_set_hexpand$MH,"gtk_widget_set_hexpand");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_hexpand(GtkWidget* widget, gboolean expand);
     * }
     */
    public static void gtk_widget_set_hexpand(MemorySegment widget, int expand) {
        var mh$ = gtk_widget_set_hexpand$MH();
        try {
            mh$.invokeExact(widget, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_hexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.gtk_widget_get_hexpand_set$MH,"gtk_widget_get_hexpand_set");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_hexpand_set(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_hexpand_set(MemorySegment widget) {
        var mh$ = gtk_widget_get_hexpand_set$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_hexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.gtk_widget_set_hexpand_set$MH,"gtk_widget_set_hexpand_set");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_hexpand_set(GtkWidget* widget, gboolean set);
     * }
     */
    public static void gtk_widget_set_hexpand_set(MemorySegment widget, int set) {
        var mh$ = gtk_widget_set_hexpand_set$MH();
        try {
            mh$.invokeExact(widget, set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_vexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.gtk_widget_get_vexpand$MH,"gtk_widget_get_vexpand");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_vexpand(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_vexpand(MemorySegment widget) {
        var mh$ = gtk_widget_get_vexpand$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_vexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.gtk_widget_set_vexpand$MH,"gtk_widget_set_vexpand");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_vexpand(GtkWidget* widget, gboolean expand);
     * }
     */
    public static void gtk_widget_set_vexpand(MemorySegment widget, int expand) {
        var mh$ = gtk_widget_set_vexpand$MH();
        try {
            mh$.invokeExact(widget, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_vexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.gtk_widget_get_vexpand_set$MH,"gtk_widget_get_vexpand_set");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_vexpand_set(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_vexpand_set(MemorySegment widget) {
        var mh$ = gtk_widget_get_vexpand_set$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_vexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.gtk_widget_set_vexpand_set$MH,"gtk_widget_set_vexpand_set");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_vexpand_set(GtkWidget* widget, gboolean set);
     * }
     */
    public static void gtk_widget_set_vexpand_set(MemorySegment widget, int set) {
        var mh$ = gtk_widget_set_vexpand_set$MH();
        try {
            mh$.invokeExact(widget, set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_compute_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.gtk_widget_compute_expand$MH,"gtk_widget_compute_expand");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_compute_expand(GtkWidget* widget, GtkOrientation orientation);
     * }
     */
    public static int gtk_widget_compute_expand(MemorySegment widget, int orientation) {
        var mh$ = gtk_widget_compute_expand$MH();
        try {
            return (int)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_halign$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.gtk_widget_get_halign$MH,"gtk_widget_get_halign");
    }
    /**
     * {@snippet :
     * GtkAlign gtk_widget_get_halign(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_halign(MemorySegment widget) {
        var mh$ = gtk_widget_get_halign$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_halign$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_widget_set_halign$MH,"gtk_widget_set_halign");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_halign(GtkWidget* widget, GtkAlign align);
     * }
     */
    public static void gtk_widget_set_halign(MemorySegment widget, int align) {
        var mh$ = gtk_widget_set_halign$MH();
        try {
            mh$.invokeExact(widget, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_valign$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_widget_get_valign$MH,"gtk_widget_get_valign");
    }
    /**
     * {@snippet :
     * GtkAlign gtk_widget_get_valign(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_valign(MemorySegment widget) {
        var mh$ = gtk_widget_get_valign$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_valign$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_widget_set_valign$MH,"gtk_widget_set_valign");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_valign(GtkWidget* widget, GtkAlign align);
     * }
     */
    public static void gtk_widget_set_valign(MemorySegment widget, int align) {
        var mh$ = gtk_widget_set_valign$MH();
        try {
            mh$.invokeExact(widget, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_widget_get_margin_start$MH,"gtk_widget_get_margin_start");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_start(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_start(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_start$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_widget_set_margin_start$MH,"gtk_widget_set_margin_start");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_start(GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_start(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_start$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.gtk_widget_get_margin_end$MH,"gtk_widget_get_margin_end");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_end(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_end(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_end$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_widget_set_margin_end$MH,"gtk_widget_set_margin_end");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_end(GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_end(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_end$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_top$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_widget_get_margin_top$MH,"gtk_widget_get_margin_top");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_top(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_top(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_top$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_top$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_widget_set_margin_top$MH,"gtk_widget_set_margin_top");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_top(GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_top(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_top$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_bottom$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_widget_get_margin_bottom$MH,"gtk_widget_get_margin_bottom");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_bottom(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_bottom(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_bottom$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_bottom$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_widget_set_margin_bottom$MH,"gtk_widget_set_margin_bottom");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_bottom(GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_bottom(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_bottom$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.gtk_widget_is_ancestor$MH,"gtk_widget_is_ancestor");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_ancestor(GtkWidget* widget, GtkWidget* ancestor);
     * }
     */
    public static int gtk_widget_is_ancestor(MemorySegment widget, MemorySegment ancestor) {
        var mh$ = gtk_widget_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(widget, ancestor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_translate_coordinates$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_widget_translate_coordinates$MH,"gtk_widget_translate_coordinates");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_translate_coordinates(GtkWidget* src_widget, GtkWidget* dest_widget, double src_x, double src_y, double* dest_x, double* dest_y);
     * }
     */
    public static int gtk_widget_translate_coordinates(MemorySegment src_widget, MemorySegment dest_widget, double src_x, double src_y, MemorySegment dest_x, MemorySegment dest_y) {
        var mh$ = gtk_widget_translate_coordinates$MH();
        try {
            return (int)mh$.invokeExact(src_widget, dest_widget, src_x, src_y, dest_x, dest_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_widget_contains$MH,"gtk_widget_contains");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_contains(GtkWidget* widget, double x, double y);
     * }
     */
    public static int gtk_widget_contains(MemorySegment widget, double x, double y) {
        var mh$ = gtk_widget_contains$MH();
        try {
            return (int)mh$.invokeExact(widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_pick$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_widget_pick$MH,"gtk_widget_pick");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_pick(GtkWidget* widget, double x, double y, GtkPickFlags flags);
     * }
     */
    public static MemorySegment gtk_widget_pick(MemorySegment widget, double x, double y, int flags) {
        var mh$ = gtk_widget_pick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, x, y, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_controller$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_widget_add_controller$MH,"gtk_widget_add_controller");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_controller(GtkWidget* widget, GtkEventController* controller);
     * }
     */
    public static void gtk_widget_add_controller(MemorySegment widget, MemorySegment controller) {
        var mh$ = gtk_widget_add_controller$MH();
        try {
            mh$.invokeExact(widget, controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_controller$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_widget_remove_controller$MH,"gtk_widget_remove_controller");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_controller(GtkWidget* widget, GtkEventController* controller);
     * }
     */
    public static void gtk_widget_remove_controller(MemorySegment widget, MemorySegment controller) {
        var mh$ = gtk_widget_remove_controller$MH();
        try {
            mh$.invokeExact(widget, controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_create_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.gtk_widget_create_pango_context$MH,"gtk_widget_create_pango_context");
    }
    /**
     * {@snippet :
     * PangoContext* gtk_widget_create_pango_context(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_create_pango_context(MemorySegment widget) {
        var mh$ = gtk_widget_create_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_widget_get_pango_context$MH,"gtk_widget_get_pango_context");
    }
    /**
     * {@snippet :
     * PangoContext* gtk_widget_get_pango_context(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_pango_context(MemorySegment widget) {
        var mh$ = gtk_widget_get_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_widget_set_font_options$MH,"gtk_widget_set_font_options");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_font_options(GtkWidget* widget, const cairo_font_options_t* options);
     * }
     */
    public static void gtk_widget_set_font_options(MemorySegment widget, MemorySegment options) {
        var mh$ = gtk_widget_set_font_options$MH();
        try {
            mh$.invokeExact(widget, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_widget_get_font_options$MH,"gtk_widget_get_font_options");
    }
    /**
     * {@snippet :
     * const cairo_font_options_t* gtk_widget_get_font_options(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_font_options(MemorySegment widget) {
        var mh$ = gtk_widget_get_font_options$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_create_pango_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_widget_create_pango_layout$MH,"gtk_widget_create_pango_layout");
    }
    /**
     * {@snippet :
     * PangoLayout* gtk_widget_create_pango_layout(GtkWidget* widget, char* text);
     * }
     */
    public static MemorySegment gtk_widget_create_pango_layout(MemorySegment widget, MemorySegment text) {
        var mh$ = gtk_widget_create_pango_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_widget_set_direction$MH,"gtk_widget_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_direction(GtkWidget* widget, GtkTextDirection dir);
     * }
     */
    public static void gtk_widget_set_direction(MemorySegment widget, int dir) {
        var mh$ = gtk_widget_set_direction$MH();
        try {
            mh$.invokeExact(widget, dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.gtk_widget_get_direction$MH,"gtk_widget_get_direction");
    }
    /**
     * {@snippet :
     * GtkTextDirection gtk_widget_get_direction(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_direction(MemorySegment widget) {
        var mh$ = gtk_widget_get_direction$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_default_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_widget_set_default_direction$MH,"gtk_widget_set_default_direction");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_default_direction(GtkTextDirection dir);
     * }
     */
    public static void gtk_widget_set_default_direction(int dir) {
        var mh$ = gtk_widget_set_default_direction$MH();
        try {
            mh$.invokeExact(dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_default_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_widget_get_default_direction$MH,"gtk_widget_get_default_direction");
    }
    /**
     * {@snippet :
     * GtkTextDirection gtk_widget_get_default_direction();
     * }
     */
    public static int gtk_widget_get_default_direction() {
        var mh$ = gtk_widget_get_default_direction$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_widget_set_cursor$MH,"gtk_widget_set_cursor");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_cursor(GtkWidget* widget, GdkCursor* cursor);
     * }
     */
    public static void gtk_widget_set_cursor(MemorySegment widget, MemorySegment cursor) {
        var mh$ = gtk_widget_set_cursor$MH();
        try {
            mh$.invokeExact(widget, cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_cursor_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_widget_set_cursor_from_name$MH,"gtk_widget_set_cursor_from_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_cursor_from_name(GtkWidget* widget, char* name);
     * }
     */
    public static void gtk_widget_set_cursor_from_name(MemorySegment widget, MemorySegment name) {
        var mh$ = gtk_widget_set_cursor_from_name$MH();
        try {
            mh$.invokeExact(widget, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_widget_get_cursor$MH,"gtk_widget_get_cursor");
    }
    /**
     * {@snippet :
     * GdkCursor* gtk_widget_get_cursor(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_cursor(MemorySegment widget) {
        var mh$ = gtk_widget_get_cursor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_mnemonic_labels$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.gtk_widget_list_mnemonic_labels$MH,"gtk_widget_list_mnemonic_labels");
    }
    /**
     * {@snippet :
     * GList* gtk_widget_list_mnemonic_labels(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_mnemonic_labels(MemorySegment widget) {
        var mh$ = gtk_widget_list_mnemonic_labels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_mnemonic_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_widget_add_mnemonic_label$MH,"gtk_widget_add_mnemonic_label");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_mnemonic_label(GtkWidget* widget, GtkWidget* label);
     * }
     */
    public static void gtk_widget_add_mnemonic_label(MemorySegment widget, MemorySegment label) {
        var mh$ = gtk_widget_add_mnemonic_label$MH();
        try {
            mh$.invokeExact(widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_mnemonic_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_widget_remove_mnemonic_label$MH,"gtk_widget_remove_mnemonic_label");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_mnemonic_label(GtkWidget* widget, GtkWidget* label);
     * }
     */
    public static void gtk_widget_remove_mnemonic_label(MemorySegment widget, MemorySegment label) {
        var mh$ = gtk_widget_remove_mnemonic_label$MH();
        try {
            mh$.invokeExact(widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_trigger_tooltip_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_widget_trigger_tooltip_query$MH,"gtk_widget_trigger_tooltip_query");
    }
    /**
     * {@snippet :
     * void gtk_widget_trigger_tooltip_query(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_trigger_tooltip_query(MemorySegment widget) {
        var mh$ = gtk_widget_trigger_tooltip_query$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_widget_set_tooltip_text$MH,"gtk_widget_set_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_text(GtkWidget* widget, char* text);
     * }
     */
    public static void gtk_widget_set_tooltip_text(MemorySegment widget, MemorySegment text) {
        var mh$ = gtk_widget_set_tooltip_text$MH();
        try {
            mh$.invokeExact(widget, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_widget_get_tooltip_text$MH,"gtk_widget_get_tooltip_text");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_tooltip_text(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_text(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.gtk_widget_set_tooltip_markup$MH,"gtk_widget_set_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_markup(GtkWidget* widget, char* markup);
     * }
     */
    public static void gtk_widget_set_tooltip_markup(MemorySegment widget, MemorySegment markup) {
        var mh$ = gtk_widget_set_tooltip_markup$MH();
        try {
            mh$.invokeExact(widget, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_widget_get_tooltip_markup$MH,"gtk_widget_get_tooltip_markup");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_tooltip_markup(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_markup(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_has_tooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_widget_set_has_tooltip$MH,"gtk_widget_set_has_tooltip");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_has_tooltip(GtkWidget* widget, gboolean has_tooltip);
     * }
     */
    public static void gtk_widget_set_has_tooltip(MemorySegment widget, int has_tooltip) {
        var mh$ = gtk_widget_set_has_tooltip$MH();
        try {
            mh$.invokeExact(widget, has_tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_has_tooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_widget_get_has_tooltip$MH,"gtk_widget_get_has_tooltip");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_has_tooltip(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_has_tooltip(MemorySegment widget) {
        var mh$ = gtk_widget_get_has_tooltip$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_requisition_get_type$MH,"gtk_requisition_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_requisition_get_type();
     * }
     */
    public static long gtk_requisition_get_type() {
        var mh$ = gtk_requisition_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_requisition_new$MH,"gtk_requisition_new");
    }
    /**
     * {@snippet :
     * GtkRequisition* gtk_requisition_new();
     * }
     */
    public static MemorySegment gtk_requisition_new() {
        var mh$ = gtk_requisition_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.gtk_requisition_copy$MH,"gtk_requisition_copy");
    }
    /**
     * {@snippet :
     * GtkRequisition* gtk_requisition_copy(const GtkRequisition* requisition);
     * }
     */
    public static MemorySegment gtk_requisition_copy(MemorySegment requisition) {
        var mh$ = gtk_requisition_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.gtk_requisition_free$MH,"gtk_requisition_free");
    }
    /**
     * {@snippet :
     * void gtk_requisition_free(GtkRequisition* requisition);
     * }
     */
    public static void gtk_requisition_free(MemorySegment requisition) {
        var mh$ = gtk_requisition_free$MH();
        try {
            mh$.invokeExact(requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_in_destruction$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.gtk_widget_in_destruction$MH,"gtk_widget_in_destruction");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_in_destruction(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_in_destruction(MemorySegment widget) {
        var mh$ = gtk_widget_in_destruction$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_style_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.gtk_widget_get_style_context$MH,"gtk_widget_get_style_context");
    }
    /**
     * {@snippet :
     * GtkStyleContext* gtk_widget_get_style_context(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_style_context(MemorySegment widget) {
        var mh$ = gtk_widget_get_style_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.gtk_widget_class_set_css_name$MH,"gtk_widget_class_set_css_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_css_name(GtkWidgetClass* widget_class, char* name);
     * }
     */
    public static void gtk_widget_class_set_css_name(MemorySegment widget_class, MemorySegment name) {
        var mh$ = gtk_widget_class_set_css_name$MH();
        try {
            mh$.invokeExact(widget_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.gtk_widget_class_get_css_name$MH,"gtk_widget_class_get_css_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_class_get_css_name(GtkWidgetClass* widget_class);
     * }
     */
    public static MemorySegment gtk_widget_class_get_css_name(MemorySegment widget_class) {
        var mh$ = gtk_widget_class_get_css_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_tick_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.gtk_widget_add_tick_callback$MH,"gtk_widget_add_tick_callback");
    }
    /**
     * {@snippet :
     * guint gtk_widget_add_tick_callback(GtkWidget* widget, GtkTickCallback callback, gpointer user_data, GDestroyNotify notify);
     * }
     */
    public static int gtk_widget_add_tick_callback(MemorySegment widget, MemorySegment callback, MemorySegment user_data, MemorySegment notify) {
        var mh$ = gtk_widget_add_tick_callback$MH();
        try {
            return (int)mh$.invokeExact(widget, callback, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_tick_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.gtk_widget_remove_tick_callback$MH,"gtk_widget_remove_tick_callback");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_tick_callback(GtkWidget* widget, guint id);
     * }
     */
    public static void gtk_widget_remove_tick_callback(MemorySegment widget, int id) {
        var mh$ = gtk_widget_remove_tick_callback$MH();
        try {
            mh$.invokeExact(widget, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_init_template$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.gtk_widget_init_template$MH,"gtk_widget_init_template");
    }
    /**
     * {@snippet :
     * void gtk_widget_init_template(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_init_template(MemorySegment widget) {
        var mh$ = gtk_widget_init_template$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_template_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.gtk_widget_get_template_child$MH,"gtk_widget_get_template_child");
    }
    /**
     * {@snippet :
     * GObject* gtk_widget_get_template_child(GtkWidget* widget, GType widget_type, char* name);
     * }
     */
    public static MemorySegment gtk_widget_get_template_child(MemorySegment widget, long widget_type, MemorySegment name) {
        var mh$ = gtk_widget_get_template_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, widget_type, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.gtk_widget_class_set_template$MH,"gtk_widget_class_set_template");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template(GtkWidgetClass* widget_class, GBytes* template_bytes);
     * }
     */
    public static void gtk_widget_class_set_template(MemorySegment widget_class, MemorySegment template_bytes) {
        var mh$ = gtk_widget_class_set_template$MH();
        try {
            mh$.invokeExact(widget_class, template_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.gtk_widget_class_set_template_from_resource$MH,"gtk_widget_class_set_template_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template_from_resource(GtkWidgetClass* widget_class, char* resource_name);
     * }
     */
    public static void gtk_widget_class_set_template_from_resource(MemorySegment widget_class, MemorySegment resource_name) {
        var mh$ = gtk_widget_class_set_template_from_resource$MH();
        try {
            mh$.invokeExact(widget_class, resource_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_bind_template_callback_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.gtk_widget_class_bind_template_callback_full$MH,"gtk_widget_class_bind_template_callback_full");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_bind_template_callback_full(GtkWidgetClass* widget_class, char* callback_name, GCallback callback_symbol);
     * }
     */
    public static void gtk_widget_class_bind_template_callback_full(MemorySegment widget_class, MemorySegment callback_name, MemorySegment callback_symbol) {
        var mh$ = gtk_widget_class_bind_template_callback_full$MH();
        try {
            mh$.invokeExact(widget_class, callback_name, callback_symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.gtk_widget_class_set_template_scope$MH,"gtk_widget_class_set_template_scope");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template_scope(GtkWidgetClass* widget_class, GtkBuilderScope* scope);
     * }
     */
    public static void gtk_widget_class_set_template_scope(MemorySegment widget_class, MemorySegment scope) {
        var mh$ = gtk_widget_class_set_template_scope$MH();
        try {
            mh$.invokeExact(widget_class, scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_bind_template_child_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.gtk_widget_class_bind_template_child_full$MH,"gtk_widget_class_bind_template_child_full");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_bind_template_child_full(GtkWidgetClass* widget_class, char* name, gboolean internal_child, gssize struct_offset);
     * }
     */
    public static void gtk_widget_class_bind_template_child_full(MemorySegment widget_class, MemorySegment name, int internal_child, long struct_offset) {
        var mh$ = gtk_widget_class_bind_template_child_full$MH();
        try {
            mh$.invokeExact(widget_class, name, internal_child, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_insert_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.gtk_widget_insert_action_group$MH,"gtk_widget_insert_action_group");
    }
    /**
     * {@snippet :
     * void gtk_widget_insert_action_group(GtkWidget* widget, char* name, GActionGroup* group);
     * }
     */
    public static void gtk_widget_insert_action_group(MemorySegment widget, MemorySegment name, MemorySegment group) {
        var mh$ = gtk_widget_insert_action_group$MH();
        try {
            mh$.invokeExact(widget, name, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.gtk_widget_activate_action$MH,"gtk_widget_activate_action");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_activate_action(GtkWidget* widget, char* name, char* format_string,...);
     * }
     */
    public static int gtk_widget_activate_action(MemorySegment widget, MemorySegment name, MemorySegment format_string, Object... x3) {
        var mh$ = gtk_widget_activate_action$MH();
        try {
            return (int)mh$.invokeExact(widget, name, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate_action_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.gtk_widget_activate_action_variant$MH,"gtk_widget_activate_action_variant");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_activate_action_variant(GtkWidget* widget, char* name, GVariant* args);
     * }
     */
    public static int gtk_widget_activate_action_variant(MemorySegment widget, MemorySegment name, MemorySegment args) {
        var mh$ = gtk_widget_activate_action_variant$MH();
        try {
            return (int)mh$.invokeExact(widget, name, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.gtk_widget_activate_default$MH,"gtk_widget_activate_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_activate_default(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_activate_default(MemorySegment widget) {
        var mh$ = gtk_widget_activate_default$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.gtk_widget_set_font_map$MH,"gtk_widget_set_font_map");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_font_map(GtkWidget* widget, PangoFontMap* font_map);
     * }
     */
    public static void gtk_widget_set_font_map(MemorySegment widget, MemorySegment font_map) {
        var mh$ = gtk_widget_set_font_map$MH();
        try {
            mh$.invokeExact(widget, font_map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.gtk_widget_get_font_map$MH,"gtk_widget_get_font_map");
    }
    /**
     * {@snippet :
     * PangoFontMap* gtk_widget_get_font_map(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_font_map(MemorySegment widget) {
        var mh$ = gtk_widget_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_first_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.gtk_widget_get_first_child$MH,"gtk_widget_get_first_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_first_child(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_first_child(MemorySegment widget) {
        var mh$ = gtk_widget_get_first_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_last_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.gtk_widget_get_last_child$MH,"gtk_widget_get_last_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_last_child(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_last_child(MemorySegment widget) {
        var mh$ = gtk_widget_get_last_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_next_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.gtk_widget_get_next_sibling$MH,"gtk_widget_get_next_sibling");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_next_sibling(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_next_sibling(MemorySegment widget) {
        var mh$ = gtk_widget_get_next_sibling$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_prev_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.gtk_widget_get_prev_sibling$MH,"gtk_widget_get_prev_sibling");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_prev_sibling(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_prev_sibling(MemorySegment widget) {
        var mh$ = gtk_widget_get_prev_sibling$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_observe_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.gtk_widget_observe_children$MH,"gtk_widget_observe_children");
    }
    /**
     * {@snippet :
     * GListModel* gtk_widget_observe_children(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_observe_children(MemorySegment widget) {
        var mh$ = gtk_widget_observe_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_observe_controllers$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.gtk_widget_observe_controllers$MH,"gtk_widget_observe_controllers");
    }
    /**
     * {@snippet :
     * GListModel* gtk_widget_observe_controllers(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_observe_controllers(MemorySegment widget) {
        var mh$ = gtk_widget_observe_controllers$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.gtk_widget_insert_after$MH,"gtk_widget_insert_after");
    }
    /**
     * {@snippet :
     * void gtk_widget_insert_after(GtkWidget* widget, GtkWidget* parent, GtkWidget* previous_sibling);
     * }
     */
    public static void gtk_widget_insert_after(MemorySegment widget, MemorySegment parent, MemorySegment previous_sibling) {
        var mh$ = gtk_widget_insert_after$MH();
        try {
            mh$.invokeExact(widget, parent, previous_sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.gtk_widget_insert_before$MH,"gtk_widget_insert_before");
    }
    /**
     * {@snippet :
     * void gtk_widget_insert_before(GtkWidget* widget, GtkWidget* parent, GtkWidget* next_sibling);
     * }
     */
    public static void gtk_widget_insert_before(MemorySegment widget, MemorySegment parent, MemorySegment next_sibling) {
        var mh$ = gtk_widget_insert_before$MH();
        try {
            mh$.invokeExact(widget, parent, next_sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_focus_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.gtk_widget_set_focus_child$MH,"gtk_widget_set_focus_child");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_focus_child(GtkWidget* widget, GtkWidget* child);
     * }
     */
    public static void gtk_widget_set_focus_child(MemorySegment widget, MemorySegment child) {
        var mh$ = gtk_widget_set_focus_child$MH();
        try {
            mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_focus_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.gtk_widget_get_focus_child$MH,"gtk_widget_get_focus_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_focus_child(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_focus_child(MemorySegment widget) {
        var mh$ = gtk_widget_get_focus_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_snapshot_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.gtk_widget_snapshot_child$MH,"gtk_widget_snapshot_child");
    }
    /**
     * {@snippet :
     * void gtk_widget_snapshot_child(GtkWidget* widget, GtkWidget* child, GtkSnapshot* snapshot);
     * }
     */
    public static void gtk_widget_snapshot_child(MemorySegment widget, MemorySegment child, MemorySegment snapshot) {
        var mh$ = gtk_widget_snapshot_child$MH();
        try {
            mh$.invokeExact(widget, child, snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_should_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.gtk_widget_should_layout$MH,"gtk_widget_should_layout");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_should_layout(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_should_layout(MemorySegment widget) {
        var mh$ = gtk_widget_should_layout$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.gtk_widget_get_css_name$MH,"gtk_widget_get_css_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_css_name(GtkWidget* self);
     * }
     */
    public static MemorySegment gtk_widget_get_css_name(MemorySegment self) {
        var mh$ = gtk_widget_get_css_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_css_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.gtk_widget_add_css_class$MH,"gtk_widget_add_css_class");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_css_class(GtkWidget* widget, char* css_class);
     * }
     */
    public static void gtk_widget_add_css_class(MemorySegment widget, MemorySegment css_class) {
        var mh$ = gtk_widget_add_css_class$MH();
        try {
            mh$.invokeExact(widget, css_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_css_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.gtk_widget_remove_css_class$MH,"gtk_widget_remove_css_class");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_css_class(GtkWidget* widget, char* css_class);
     * }
     */
    public static void gtk_widget_remove_css_class(MemorySegment widget, MemorySegment css_class) {
        var mh$ = gtk_widget_remove_css_class$MH();
        try {
            mh$.invokeExact(widget, css_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_css_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.gtk_widget_has_css_class$MH,"gtk_widget_has_css_class");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_css_class(GtkWidget* widget, char* css_class);
     * }
     */
    public static int gtk_widget_has_css_class(MemorySegment widget, MemorySegment css_class) {
        var mh$ = gtk_widget_has_css_class$MH();
        try {
            return (int)mh$.invokeExact(widget, css_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_css_classes$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.gtk_widget_get_css_classes$MH,"gtk_widget_get_css_classes");
    }
    /**
     * {@snippet :
     * char** gtk_widget_get_css_classes(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_css_classes(MemorySegment widget) {
        var mh$ = gtk_widget_get_css_classes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_css_classes$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.gtk_widget_set_css_classes$MH,"gtk_widget_set_css_classes");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_css_classes(GtkWidget* widget, char** classes);
     * }
     */
    public static void gtk_widget_set_css_classes(MemorySegment widget, MemorySegment classes) {
        var mh$ = gtk_widget_set_css_classes$MH();
        try {
            mh$.invokeExact(widget, classes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_install_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.gtk_widget_class_install_action$MH,"gtk_widget_class_install_action");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_install_action(GtkWidgetClass* widget_class, char* action_name, char* parameter_type, GtkWidgetActionActivateFunc activate);
     * }
     */
    public static void gtk_widget_class_install_action(MemorySegment widget_class, MemorySegment action_name, MemorySegment parameter_type, MemorySegment activate) {
        var mh$ = gtk_widget_class_install_action$MH();
        try {
            mh$.invokeExact(widget_class, action_name, parameter_type, activate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_install_property_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.gtk_widget_class_install_property_action$MH,"gtk_widget_class_install_property_action");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_install_property_action(GtkWidgetClass* widget_class, char* action_name, char* property_name);
     * }
     */
    public static void gtk_widget_class_install_property_action(MemorySegment widget_class, MemorySegment action_name, MemorySegment property_name) {
        var mh$ = gtk_widget_class_install_property_action$MH();
        try {
            mh$.invokeExact(widget_class, action_name, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_query_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.gtk_widget_class_query_action$MH,"gtk_widget_class_query_action");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_class_query_action(GtkWidgetClass* widget_class, guint index_, GType* owner, char** action_name, const GVariantType** parameter_type, char** property_name);
     * }
     */
    public static int gtk_widget_class_query_action(MemorySegment widget_class, int index_, MemorySegment owner, MemorySegment action_name, MemorySegment parameter_type, MemorySegment property_name) {
        var mh$ = gtk_widget_class_query_action$MH();
        try {
            return (int)mh$.invokeExact(widget_class, index_, owner, action_name, parameter_type, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_action_set_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.gtk_widget_action_set_enabled$MH,"gtk_widget_action_set_enabled");
    }
    /**
     * {@snippet :
     * void gtk_widget_action_set_enabled(GtkWidget* widget, char* action_name, gboolean enabled);
     * }
     */
    public static void gtk_widget_action_set_enabled(MemorySegment widget, MemorySegment action_name, int enabled) {
        var mh$ = gtk_widget_action_set_enabled$MH();
        try {
            mh$.invokeExact(widget, action_name, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_accessible_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.gtk_widget_class_set_accessible_role$MH,"gtk_widget_class_set_accessible_role");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_accessible_role(GtkWidgetClass* widget_class, GtkAccessibleRole accessible_role);
     * }
     */
    public static void gtk_widget_class_set_accessible_role(MemorySegment widget_class, int accessible_role) {
        var mh$ = gtk_widget_class_set_accessible_role$MH();
        try {
            mh$.invokeExact(widget_class, accessible_role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_accessible_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.gtk_widget_class_get_accessible_role$MH,"gtk_widget_class_get_accessible_role");
    }
    /**
     * {@snippet :
     * GtkAccessibleRole gtk_widget_class_get_accessible_role(GtkWidgetClass* widget_class);
     * }
     */
    public static int gtk_widget_class_get_accessible_role(MemorySegment widget_class) {
        var mh$ = gtk_widget_class_get_accessible_role$MH();
        try {
            return (int)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkWidget* GtkWidget_autoptr;
     * }
     */
    public static final OfAddress GtkWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkWidget_listautoptr;
     * }
     */
    public static final OfAddress GtkWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkWidget_slistautoptr;
     * }
     */
    public static final OfAddress GtkWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkWidget_queueautoptr;
     * }
     */
    public static final OfAddress GtkWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkRequisition* GtkRequisition_autoptr;
     * }
     */
    public static final OfAddress GtkRequisition_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkRequisition_listautoptr;
     * }
     */
    public static final OfAddress GtkRequisition_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkRequisition_slistautoptr;
     * }
     */
    public static final OfAddress GtkRequisition_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkRequisition_queueautoptr;
     * }
     */
    public static final OfAddress GtkRequisition_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_application_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.gtk_application_get_type$MH,"gtk_application_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_application_get_type();
     * }
     */
    public static long gtk_application_get_type() {
        var mh$ = gtk_application_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.gtk_application_new$MH,"gtk_application_new");
    }
    /**
     * {@snippet :
     * GtkApplication* gtk_application_new(char* application_id, GApplicationFlags flags);
     * }
     */
    public static MemorySegment gtk_application_new(MemorySegment application_id, int flags) {
        var mh$ = gtk_application_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application_id, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_add_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.gtk_application_add_window$MH,"gtk_application_add_window");
    }
    /**
     * {@snippet :
     * void gtk_application_add_window(GtkApplication* application, GtkWindow* window);
     * }
     */
    public static void gtk_application_add_window(MemorySegment application, MemorySegment window) {
        var mh$ = gtk_application_add_window$MH();
        try {
            mh$.invokeExact(application, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_remove_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.gtk_application_remove_window$MH,"gtk_application_remove_window");
    }
    /**
     * {@snippet :
     * void gtk_application_remove_window(GtkApplication* application, GtkWindow* window);
     * }
     */
    public static void gtk_application_remove_window(MemorySegment application, MemorySegment window) {
        var mh$ = gtk_application_remove_window$MH();
        try {
            mh$.invokeExact(application, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_windows$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.gtk_application_get_windows$MH,"gtk_application_get_windows");
    }
    /**
     * {@snippet :
     * GList* gtk_application_get_windows(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_windows(MemorySegment application) {
        var mh$ = gtk_application_get_windows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.gtk_application_get_menubar$MH,"gtk_application_get_menubar");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_application_get_menubar(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_menubar(MemorySegment application) {
        var mh$ = gtk_application_get_menubar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.gtk_application_set_menubar$MH,"gtk_application_set_menubar");
    }
    /**
     * {@snippet :
     * void gtk_application_set_menubar(GtkApplication* application, GMenuModel* menubar);
     * }
     */
    public static void gtk_application_set_menubar(MemorySegment application, MemorySegment menubar) {
        var mh$ = gtk_application_set_menubar$MH();
        try {
            mh$.invokeExact(application, menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_LOGOUT = 1;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_LOGOUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_SWITCH = 2;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_SWITCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_SUSPEND = 4;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_SUSPEND() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_IDLE = 8;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_IDLE() {
        return (int)8L;
    }
    public static MethodHandle gtk_application_inhibit$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.gtk_application_inhibit$MH,"gtk_application_inhibit");
    }
    /**
     * {@snippet :
     * guint gtk_application_inhibit(GtkApplication* application, GtkWindow* window, GtkApplicationInhibitFlags flags, char* reason);
     * }
     */
    public static int gtk_application_inhibit(MemorySegment application, MemorySegment window, int flags, MemorySegment reason) {
        var mh$ = gtk_application_inhibit$MH();
        try {
            return (int)mh$.invokeExact(application, window, flags, reason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_uninhibit$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.gtk_application_uninhibit$MH,"gtk_application_uninhibit");
    }
    /**
     * {@snippet :
     * void gtk_application_uninhibit(GtkApplication* application, guint cookie);
     * }
     */
    public static void gtk_application_uninhibit(MemorySegment application, int cookie) {
        var mh$ = gtk_application_uninhibit$MH();
        try {
            mh$.invokeExact(application, cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_window_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.gtk_application_get_window_by_id$MH,"gtk_application_get_window_by_id");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_application_get_window_by_id(GtkApplication* application, guint id);
     * }
     */
    public static MemorySegment gtk_application_get_window_by_id(MemorySegment application, int id) {
        var mh$ = gtk_application_get_window_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_active_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.gtk_application_get_active_window$MH,"gtk_application_get_active_window");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_application_get_active_window(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_active_window(MemorySegment application) {
        var mh$ = gtk_application_get_active_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_list_action_descriptions$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.gtk_application_list_action_descriptions$MH,"gtk_application_list_action_descriptions");
    }
    /**
     * {@snippet :
     * char** gtk_application_list_action_descriptions(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_list_action_descriptions(MemorySegment application) {
        var mh$ = gtk_application_list_action_descriptions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_accels_for_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.gtk_application_get_accels_for_action$MH,"gtk_application_get_accels_for_action");
    }
    /**
     * {@snippet :
     * char** gtk_application_get_accels_for_action(GtkApplication* application, char* detailed_action_name);
     * }
     */
    public static MemorySegment gtk_application_get_accels_for_action(MemorySegment application, MemorySegment detailed_action_name) {
        var mh$ = gtk_application_get_accels_for_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, detailed_action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_actions_for_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.gtk_application_get_actions_for_accel$MH,"gtk_application_get_actions_for_accel");
    }
    /**
     * {@snippet :
     * char** gtk_application_get_actions_for_accel(GtkApplication* application, char* accel);
     * }
     */
    public static MemorySegment gtk_application_get_actions_for_accel(MemorySegment application, MemorySegment accel) {
        var mh$ = gtk_application_get_actions_for_accel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, accel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_accels_for_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.gtk_application_set_accels_for_action$MH,"gtk_application_set_accels_for_action");
    }
    /**
     * {@snippet :
     * void gtk_application_set_accels_for_action(GtkApplication* application, char* detailed_action_name, char** accels);
     * }
     */
    public static void gtk_application_set_accels_for_action(MemorySegment application, MemorySegment detailed_action_name, MemorySegment accels) {
        var mh$ = gtk_application_set_accels_for_action$MH();
        try {
            mh$.invokeExact(application, detailed_action_name, accels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_menu_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.gtk_application_get_menu_by_id$MH,"gtk_application_get_menu_by_id");
    }
    /**
     * {@snippet :
     * GMenu* gtk_application_get_menu_by_id(GtkApplication* application, char* id);
     * }
     */
    public static MemorySegment gtk_application_get_menu_by_id(MemorySegment application, MemorySegment id) {
        var mh$ = gtk_application_get_menu_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkApplication* GtkApplication_autoptr;
     * }
     */
    public static final OfAddress GtkApplication_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkApplication_listautoptr;
     * }
     */
    public static final OfAddress GtkApplication_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkApplication_slistautoptr;
     * }
     */
    public static final OfAddress GtkApplication_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkApplication_queueautoptr;
     * }
     */
    public static final OfAddress GtkApplication_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.gtk_window_get_type$MH,"gtk_window_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_window_get_type();
     * }
     */
    public static long gtk_window_get_type() {
        var mh$ = gtk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.gtk_window_new$MH,"gtk_window_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_new();
     * }
     */
    public static MemorySegment gtk_window_new() {
        var mh$ = gtk_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.gtk_window_set_title$MH,"gtk_window_set_title");
    }
    /**
     * {@snippet :
     * void gtk_window_set_title(GtkWindow* window, char* title);
     * }
     */
    public static void gtk_window_set_title(MemorySegment window, MemorySegment title) {
        var mh$ = gtk_window_set_title$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.gtk_window_get_title$MH,"gtk_window_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_title(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_title(MemorySegment window) {
        var mh$ = gtk_window_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_startup_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.gtk_window_set_startup_id$MH,"gtk_window_set_startup_id");
    }
    /**
     * {@snippet :
     * void gtk_window_set_startup_id(GtkWindow* window, char* startup_id);
     * }
     */
    public static void gtk_window_set_startup_id(MemorySegment window, MemorySegment startup_id) {
        var mh$ = gtk_window_set_startup_id$MH();
        try {
            mh$.invokeExact(window, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.gtk_window_set_focus$MH,"gtk_window_set_focus");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus(GtkWindow* window, GtkWidget* focus);
     * }
     */
    public static void gtk_window_set_focus(MemorySegment window, MemorySegment focus) {
        var mh$ = gtk_window_set_focus$MH();
        try {
            mh$.invokeExact(window, focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.gtk_window_get_focus$MH,"gtk_window_get_focus");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_get_focus(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_focus(MemorySegment window) {
        var mh$ = gtk_window_get_focus$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.gtk_window_set_default_widget$MH,"gtk_window_set_default_widget");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_widget(GtkWindow* window, GtkWidget* default_widget);
     * }
     */
    public static void gtk_window_set_default_widget(MemorySegment window, MemorySegment default_widget) {
        var mh$ = gtk_window_set_default_widget$MH();
        try {
            mh$.invokeExact(window, default_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.gtk_window_get_default_widget$MH,"gtk_window_get_default_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_get_default_widget(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_default_widget(MemorySegment window) {
        var mh$ = gtk_window_get_default_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1348.gtk_window_set_transient_for$MH,"gtk_window_set_transient_for");
    }
    /**
     * {@snippet :
     * void gtk_window_set_transient_for(GtkWindow* window, GtkWindow* parent);
     * }
     */
    public static void gtk_window_set_transient_for(MemorySegment window, MemorySegment parent) {
        var mh$ = gtk_window_set_transient_for$MH();
        try {
            mh$.invokeExact(window, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.gtk_window_get_transient_for$MH,"gtk_window_get_transient_for");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_window_get_transient_for(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_transient_for(MemorySegment window) {
        var mh$ = gtk_window_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_destroy_with_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.gtk_window_set_destroy_with_parent$MH,"gtk_window_set_destroy_with_parent");
    }
    /**
     * {@snippet :
     * void gtk_window_set_destroy_with_parent(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_destroy_with_parent(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_destroy_with_parent$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_destroy_with_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.gtk_window_get_destroy_with_parent$MH,"gtk_window_get_destroy_with_parent");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_destroy_with_parent(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_destroy_with_parent(MemorySegment window) {
        var mh$ = gtk_window_get_destroy_with_parent$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_hide_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.gtk_window_set_hide_on_close$MH,"gtk_window_set_hide_on_close");
    }
    /**
     * {@snippet :
     * void gtk_window_set_hide_on_close(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_hide_on_close(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_hide_on_close$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_hide_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.gtk_window_get_hide_on_close$MH,"gtk_window_get_hide_on_close");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_hide_on_close(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_hide_on_close(MemorySegment window) {
        var mh$ = gtk_window_get_hide_on_close$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.gtk_window_set_mnemonics_visible$MH,"gtk_window_set_mnemonics_visible");
    }
    /**
     * {@snippet :
     * void gtk_window_set_mnemonics_visible(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_mnemonics_visible(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_mnemonics_visible$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.gtk_window_get_mnemonics_visible$MH,"gtk_window_get_mnemonics_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_mnemonics_visible(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_mnemonics_visible(MemorySegment window) {
        var mh$ = gtk_window_get_mnemonics_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.gtk_window_set_focus_visible$MH,"gtk_window_set_focus_visible");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus_visible(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_focus_visible(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_focus_visible$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.gtk_window_get_focus_visible$MH,"gtk_window_get_focus_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_focus_visible(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_focus_visible(MemorySegment window) {
        var mh$ = gtk_window_get_focus_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.gtk_window_set_resizable$MH,"gtk_window_set_resizable");
    }
    /**
     * {@snippet :
     * void gtk_window_set_resizable(GtkWindow* window, gboolean resizable);
     * }
     */
    public static void gtk_window_set_resizable(MemorySegment window, int resizable) {
        var mh$ = gtk_window_set_resizable$MH();
        try {
            mh$.invokeExact(window, resizable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.gtk_window_get_resizable$MH,"gtk_window_get_resizable");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_resizable(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_resizable(MemorySegment window) {
        var mh$ = gtk_window_get_resizable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.gtk_window_set_display$MH,"gtk_window_set_display");
    }
    /**
     * {@snippet :
     * void gtk_window_set_display(GtkWindow* window, GdkDisplay* display);
     * }
     */
    public static void gtk_window_set_display(MemorySegment window, MemorySegment display) {
        var mh$ = gtk_window_set_display$MH();
        try {
            mh$.invokeExact(window, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.gtk_window_is_active$MH,"gtk_window_is_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_is_active(GtkWindow* window);
     * }
     */
    public static int gtk_window_is_active(MemorySegment window) {
        var mh$ = gtk_window_is_active$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_decorated$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.gtk_window_set_decorated$MH,"gtk_window_set_decorated");
    }
    /**
     * {@snippet :
     * void gtk_window_set_decorated(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_decorated(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_decorated$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_decorated$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.gtk_window_get_decorated$MH,"gtk_window_get_decorated");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_decorated(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_decorated(MemorySegment window) {
        var mh$ = gtk_window_get_decorated$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_deletable$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.gtk_window_set_deletable$MH,"gtk_window_set_deletable");
    }
    /**
     * {@snippet :
     * void gtk_window_set_deletable(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_deletable(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_deletable$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_deletable$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.gtk_window_get_deletable$MH,"gtk_window_get_deletable");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_deletable(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_deletable(MemorySegment window) {
        var mh$ = gtk_window_get_deletable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.gtk_window_set_icon_name$MH,"gtk_window_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon_name(GtkWindow* window, char* name);
     * }
     */
    public static void gtk_window_set_icon_name(MemorySegment window, MemorySegment name) {
        var mh$ = gtk_window_set_icon_name$MH();
        try {
            mh$.invokeExact(window, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.gtk_window_get_icon_name$MH,"gtk_window_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_icon_name(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon_name(MemorySegment window) {
        var mh$ = gtk_window_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.gtk_window_set_default_icon_name$MH,"gtk_window_set_default_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_icon_name(char* name);
     * }
     */
    public static void gtk_window_set_default_icon_name(MemorySegment name) {
        var mh$ = gtk_window_set_default_icon_name$MH();
        try {
            mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.gtk_window_get_default_icon_name$MH,"gtk_window_get_default_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_default_icon_name();
     * }
     */
    public static MemorySegment gtk_window_get_default_icon_name() {
        var mh$ = gtk_window_get_default_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_auto_startup_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.gtk_window_set_auto_startup_notification$MH,"gtk_window_set_auto_startup_notification");
    }
    /**
     * {@snippet :
     * void gtk_window_set_auto_startup_notification(gboolean setting);
     * }
     */
    public static void gtk_window_set_auto_startup_notification(int setting) {
        var mh$ = gtk_window_set_auto_startup_notification$MH();
        try {
            mh$.invokeExact(setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.gtk_window_set_modal$MH,"gtk_window_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_window_set_modal(GtkWindow* window, gboolean modal);
     * }
     */
    public static void gtk_window_set_modal(MemorySegment window, int modal) {
        var mh$ = gtk_window_set_modal$MH();
        try {
            mh$.invokeExact(window, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.gtk_window_get_modal$MH,"gtk_window_get_modal");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_modal(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_modal(MemorySegment window) {
        var mh$ = gtk_window_get_modal$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_toplevels$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.gtk_window_get_toplevels$MH,"gtk_window_get_toplevels");
    }
    /**
     * {@snippet :
     * GListModel* gtk_window_get_toplevels();
     * }
     */
    public static MemorySegment gtk_window_get_toplevels() {
        var mh$ = gtk_window_get_toplevels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_list_toplevels$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.gtk_window_list_toplevels$MH,"gtk_window_list_toplevels");
    }
    /**
     * {@snippet :
     * GList* gtk_window_list_toplevels();
     * }
     */
    public static MemorySegment gtk_window_list_toplevels() {
        var mh$ = gtk_window_list_toplevels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_present$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.gtk_window_present$MH,"gtk_window_present");
    }
    /**
     * {@snippet :
     * void gtk_window_present(GtkWindow* window);
     * }
     */
    public static void gtk_window_present(MemorySegment window) {
        var mh$ = gtk_window_present$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_present_with_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.gtk_window_present_with_time$MH,"gtk_window_present_with_time");
    }
    /**
     * {@snippet :
     * void gtk_window_present_with_time(GtkWindow* window, guint32 timestamp);
     * }
     */
    public static void gtk_window_present_with_time(MemorySegment window, int timestamp) {
        var mh$ = gtk_window_present_with_time$MH();
        try {
            mh$.invokeExact(window, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_minimize$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.gtk_window_minimize$MH,"gtk_window_minimize");
    }
    /**
     * {@snippet :
     * void gtk_window_minimize(GtkWindow* window);
     * }
     */
    public static void gtk_window_minimize(MemorySegment window) {
        var mh$ = gtk_window_minimize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


