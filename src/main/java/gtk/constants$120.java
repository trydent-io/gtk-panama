// Generated by jextract

package gtk;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$120 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$120() {}
    static final FunctionDescriptor g_getenv$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_getenv$MH = RuntimeHelper.downcallHandle(
        "g_getenv",
        constants$120.g_getenv$FUNC
    );
    static final FunctionDescriptor g_setenv$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_setenv$MH = RuntimeHelper.downcallHandle(
        "g_setenv",
        constants$120.g_setenv$FUNC
    );
    static final FunctionDescriptor g_unsetenv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_unsetenv$MH = RuntimeHelper.downcallHandle(
        "g_unsetenv",
        constants$120.g_unsetenv$FUNC
    );
    static final FunctionDescriptor g_listenv$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_listenv$MH = RuntimeHelper.downcallHandle(
        "g_listenv",
        constants$120.g_listenv$FUNC
    );
    static final FunctionDescriptor g_get_environ$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_get_environ$MH = RuntimeHelper.downcallHandle(
        "g_get_environ",
        constants$120.g_get_environ$FUNC
    );
    static final FunctionDescriptor g_environ_getenv$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_environ_getenv$MH = RuntimeHelper.downcallHandle(
        "g_environ_getenv",
        constants$120.g_environ_getenv$FUNC
    );
}


